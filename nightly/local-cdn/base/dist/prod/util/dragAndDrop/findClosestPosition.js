"use strict";import n from"../../types/MovePlacement.js";import g from"../../types/Orientation.js";const A=(e,t,r,a)=>{const o=Math.abs(e-t),m=Math.abs(e-r),s=Math.abs(e-a),c=Math.min(o,m,s);let l=[];switch(c){case o:l=[n.Before];break;case m:l=[n.On,o<s?n.Before:n.After];break;case s:l=[n.After];break}return l},L=(e,t,r)=>{let a=Number.POSITIVE_INFINITY,o=null;for(let f=0;f<e.length;f++){const h=e[f],{left:p,width:w,top:B,height:H}=h.getBoundingClientRect();let u;r===g.Vertical?u=B+H/2:u=p+w/2;const M=Math.abs(t-u);M<a&&(a=M,o=h)}if(!o)return null;const{width:m,height:s,left:c,right:l,top:b,bottom:d}=o.getBoundingClientRect();let i;return r===g.Vertical?i=A(t,b,b+s/2,d):i=A(t,c,c+m/2,l),{element:o,placements:i}},T=(e,t)=>(t--,t<0?[]:[{element:e[t],placement:n.Before}]),y=(e,t)=>(t++,t>=e.length?[]:[{element:e[t],placement:n.After}]),E={ArrowLeft:T,ArrowUp:T,ArrowRight:y,ArrowDown:y,Home:(e,t)=>e.slice(0,t).map(r=>({element:r,placement:n.Before})),End:(e,t)=>e.slice(t+1,e.length).reverse().map(r=>({element:r,placement:n.After}))},k=(e,t,r)=>P(r.key)?E[r.key](e,e.indexOf(t)):[],P=e=>e in E;export{L as findClosestPosition,k as findClosestPositionsByKey,P as isMovingKey};
//# sourceMappingURL=findClosestPosition.js.map
