"use strict";import{jsxDEV as i,Fragment as c}from"./thirdparty/preact/jsxRuntime.module.js";import{options as s}from"./thirdparty/preact/preact.module.js";import{isUI5ElementClass as m,preprocess as u}from"./jsx-utils.js";import{kebabToCamelCase as f}from"./util/StringHelper.js";const a=s.vnode;s.vnode=t=>{const e=t.props;e!==null&&typeof e=="object"&&e.class&&e.class,a&&a(t)};function E(t){return t.name.startsWith("bound ")||t.toString().includes("=>")}function d(t,e){if(!m(t))return;const n=t.getMetadata().getTag(),r=t.getMetadata().getAttributesList();Object.keys(e).forEach(o=>{o.includes("-")&&r.includes(o)&&console.warn(`Avoid attribute usage in favour of properties ['${o}' --> '${f(o)}'] for tag [${n}]. Check stack trace to find out which template causes this. Attributes are not type-checked and boolean conversion is manual and error-prone.`)})}export function Fragment(t,e){return c(t,e)}export function jsxDEV(t,e,n){const r=u(t,e,n);return d(t,e),i(r,e,n)}
//# sourceMappingURL=jsx-dev-runtime.js.map
