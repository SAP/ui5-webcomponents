"use strict";(self.webpackChunk_ui5_webcomponents_website=self.webpackChunk_ui5_webcomponents_website||[]).push([[1246],{4721:(e,s,d)=>{d.r(s),d.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>r});var n=d(1085),t=d(1184);const l={},i=void 0,a={id:"components/fiori/enums/FCLLayout",title:"FCLLayout",description:"Different types of FCLLayout.",source:"@site/docs/components/fiori/enums/FCLLayout.mdx",sourceDirName:"components/fiori/enums",slug:"/components/fiori/enums/FCLLayout",permalink:"/webcomponents/v1/components/fiori/enums/FCLLayout",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"componentsSidebar",previous:{title:"BarDesign",permalink:"/webcomponents/v1/components/fiori/enums/BarDesign"},next:{title:"IllustrationMessageSize",permalink:"/webcomponents/v1/components/fiori/enums/IllustrationMessageSize"}},o={},r=[{value:"Enum fields",id:"enum-fields",level:2}];function c(e){const s={h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:"Different types of FCLLayout."}),"\n",(0,n.jsx)(s.h2,{id:"enum-fields",children:"Enum fields"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Name"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"OneColumn"}),(0,n.jsx)(s.td,{children:"The layout will display 1 column."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"TwoColumnsStartExpanded"}),(0,n.jsxs)(s.td,{children:["Desktop: 67 - 33 - -- Start (expanded) and Mid columns are displayed Tablet:  67 - 33 - -- Start (expanded) and Mid columns are displayed Phone:   -- 100 --  only the Mid column is displayed",(0,n.jsx)("br",{}),"Use to display both a list and a detail page when the user should focus on the list page."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"TwoColumnsMidExpanded"}),(0,n.jsxs)(s.td,{children:["Desktop: 33 - 67 - --  Start and Mid (expanded) columns are displayed Tablet:  33 - 67 - --  Start and Mid (expanded) columns are displayed Phone:   -- 100 --   only the Mid column is displayed",(0,n.jsx)("br",{}),"Use to display both a list and a detail page when the user should focus on the detail page."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"ThreeColumnsMidExpanded"}),(0,n.jsxs)(s.td,{children:["Desktop: 25 - 50 - 25 Start, Mid (expanded) and End columns are displayed Tablet:  0 - 67 - 33  Mid (expanded) and End columns are displayed, Start is accessible by a layout arrow Phone:   -- -- 100  only the End column is displayed",(0,n.jsx)("br",{}),"Use to display all three pages (list, detail, detail-detail) when the user should focus on the detail."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"ThreeColumnsEndExpanded"}),(0,n.jsxs)(s.td,{children:["Desktop: 25 - 25 - 50 Start, Mid and End (expanded) columns are displayed Tablet:  0 - 33 - 67  Mid and End (expanded) columns are displayed, Start is accessible by layout arrows Phone:   -- -- 100  (only the End column is displayed)",(0,n.jsx)("br",{}),"Use to display all three pages (list, detail, detail-detail) when the user should focus on the detail-detail."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"ThreeColumnsStartExpandedEndHidden"}),(0,n.jsxs)(s.td,{children:["Desktop: 67 - 33 - 0  Start (expanded) and Mid columns are displayed, End is accessible by layout arrows Tablet:  67 - 33 - 0  Start (expanded) and Mid columns are displayed, End is accessible by layout arrows Phone:   -- -- 100  only the End column is displayed",(0,n.jsx)("br",{}),"Use to display the list and detail pages when the user should focus on the list. The detail-detail is still loaded and easily accessible with layout arrows."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"ThreeColumnsMidExpandedEndHidden"}),(0,n.jsxs)(s.td,{children:["Desktop: 33 - 67 - 0  Start and Mid (expanded) columns are displayed, End is accessible by a layout arrow Tablet:  33 - 67 - 0  Start and Mid (expanded) columns are displayed, End is accessible by a layout arrow Phone:   -- -- 100  only the End column is displayed",(0,n.jsx)("br",{}),"Use to display the list and detail pages when the user should focus on the detail. The detail-detail is still loaded and easily accessible with a layout arrow."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"MidColumnFullScreen"}),(0,n.jsxs)(s.td,{children:["Desktop: -- 100 --  only the Mid column is displayed Tablet:  -- 100 --  only the Mid column is displayed Phone:   -- 100 --  only the Mid column is displayed",(0,n.jsx)("br",{}),"Use to display a detail page only, when the user should focus entirely on it."]})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"EndColumnFullScreen"}),(0,n.jsxs)(s.td,{children:["Desktop: -- -- 100  only the End column is displayed Tablet:  -- -- 100  only the End column is displayed Phone:   -- -- 100  only the End column is displayed",(0,n.jsx)("br",{}),"Use to display a detail-detail page only, when the user should focus entirely on it."]})]})]})]})]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1184:(e,s,d)=>{d.d(s,{R:()=>i,x:()=>a});var n=d(4041);const t={},l=n.createContext(t);function i(e){const s=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),n.createElement(l.Provider,{value:s},e.children)}}}]);