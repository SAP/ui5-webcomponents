{
  "0": {
    "id": "0",
    "title": "React",
    "content": "Get Started with UI5 Web Components &amp; React In this tutorial, you will learn how to add UI5 Web Components to your application. You can add UI5 Web Components both to new React applications and to already existing ones. Important: The get the best development experience, we recommend using the UI5 Web Components for React and follow the UI5 Web Components for React Тutorial. UI5 Web Components for React library is a React implementation of UI5 Web Components which overcomes several limitations of React in handling web components in general, explained in the “Additional Info” section below. Here are the steps to use pure UI5 Web Components in React: Step 1. Create a new application. For example, with create-react-app. npx create-react-app ui5-web-components-application cd ui5-web-components-application Step 2. Add UI5 Web Components. npm install @ui5/webcomponents --save Step 3. Import the components that you are going to use. import &quot;@ui5/webcomponents/dist/Button.js&quot;; Step 4. Use the imported elements in your application. &lt;ui5-button&gt;Hello world!&lt;/ui5-button&gt; Step 5. Launch the application. yarn start Additional Info When developing with React, there are two slight React limitations you should know about. These are not related to UI5 Web Components per se, but with using custom elements in React in general. Event Binding In order to use the events provided by UI5 Web Components, currently you need to get a ref to the component because React doesn’t support custom events. Here is an example of what you need to do in order to use the events provided by UI5 Web Components: class Home extends Component { constructor (props) { super(props); this.switch = React.createRef(); } componentDidMount() { this.switch.addEventListener(&#39;change&#39;, event =&gt; { console.log(&#39;switch is toggled&#39;); }) } render(){ return( &lt;ui5-switch ref={this.switch}&gt;&lt;/ui5-switch&gt; ); } } Boolean Properties Binding For boolean properties like collapsed in ui5-panel, instead of setting true or false, you have to take care of the presence of the property. Here is an example: &lt;ui5-panel header-text=&quot;Achievements&quot; collapsed={!this.state.achievements.length || undefined}&gt; &lt;!-- Content of ui5-panel --&gt; &lt;/ui5-panel&gt; UI5 Web Components for React As mentioned above, for a better development experience (and to elegantly work around these 2 React limitations), check out UI5 Web Components for React, UI5 Web Components for React and this tutorial.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/frameworks/react/",
    "relUrl": "/playground/frameworks/react/"
  },
  "1": {
    "id": "1",
    "title": "Configuration",
    "content": "Configuration This section explains how you can configure UI5 Web Components globally, and what configuration settings are available. Configuration Settings There are several configuration settings that affect all UI5 Web Components globally. Setting Values Default Value Description Applies To theme sap_fiori_3, sap_fiori_3_dark, sap_fiori_3_hcb, sap_fiori_3_hcw, sap_belize, sap_belize_hcb, sap_belize_hcw, sap_horizon, sap_horizon_dark, sap_horizon_hcb, sap_horizon_hcw sap_fiori_3 Visual theme to be applied All components language ar, bg, ca, cs, cy, da, de, el, en, en_GB, es, es_MX, et, fi, fr, fr_CA, hi, hr, hu, in, it, iw, ja, kk, ko, lt, lv, ms, nl, no, pl, pt_PT, pt, ro, ru, sh, sk, sl, sv, th, tr, uk, vi, zh_CN, zh_TW N/A (null) Language to be used for translatable texts Components and icons with translatable texts animationMode full, basic, minimal, none full Amount/intensity of animations to be played for some components Components with animations (ui5-panel, ui5-carousel, etc.) calendarType Gregorian, Islamic, Buddhist, Japanese, Persian Gregorian Default calendar type to be used for date-related components Date/time components (ui5-date-picker, etc.) noConflict true, false false When set to true, all events will be fired with a ui5- prefix only Components that fire events (most do) formatSettings See the Format settings section below {} Allows to override locale-specific configuration Date/time components (ui5-date-picker, etc.) fetchDefaultLanguage true, false false Whether to fetch assets even for the default language Framework theme The theme setting values above are the technical names of the supported themes: The sap_horizon is known as Morning Horizon and it’s the latest theme currently available as a preview version. The sap_horizon_dark is known as Evening Horizon. The sap_horizon_hcb is known as High Contrast Black. The sap_horizon_hcw is known as High Contrast White. The sap_fiori_3 is known as Quartz Light and it`s the default theme. The sap_fiori_3_dark is known as Quartz Dark. The sap_fiori_3_hcb is known as Quartz High Contrast Black. The sap_fiori_3_hcw is known as Quartz High Contrast White. The sap_belize is known as Belize. The sap_belize_hcb is known as High Contrast Black. The sap_belize_hcw is known as High Contrast White. The default theme (sap_fiori_3) is built in all UI5 Web Components. Thus, components are always themed. Configuring another theme will additionally fetch and use that theme. Any theme is fetched just once. To use additional themes (other than sap_fiori_3): Import the Assets.js module of each component library you’re using, for example: import &quot;@ui5/webcomponents/dist/Assets.js&quot;; import &quot;@ui5/webcomponents-fiori/dist/Assets.js&quot;; For more about assets, see the dedicated Assets section. Configure the additional theme either via the configuration script or module imports. Example: import { setTheme } from &quot;@ui5/webcomponents-base/dist/config/Theme.js&quot;; setTheme(&quot;sap_belize_hcb&quot;); language The language configuration setting does not have a default value (the default value is technically null). This is how the language to use is determined: If a language is configured, it will be used. If no language is configured (the setting is null), the user’s browser language is checked, and if in the supported list, used. If the user’s browser language is not in the supported list, but is a variation of a supported language, this language will be used (e.g. fr_** -&gt; fr ) The en language will be used. The en language is built in all UI5 Web Components that have translatable texts. Thus, components are always translated. Configuring another language will additionally fetch and use that language. Any language is fetched once. To use additional languages (other than en): Import the Assets.js module of each component/icon library you’re using (in general, each library that provides languages assets), for example: import &quot;@ui5/webcomponents/dist/Assets.js&quot;; import &quot;@ui5/webcomponents-fiori/dist/Assets.js&quot;; import &quot;@ui5/webcomponents-icons/dist/Assets.js&quot;; For more about assets, see the dedicated Assets section. Configure the additional language either via the configuration script or module imports. Example: import { setLanguage } from &quot;@ui5/webcomponents-base/dist/config/Language.js&quot;; setLanguage(&quot;fr&quot;); animationMode This setting only applies to components that run animations. Animation modes allow to specify different animation scenarios or levels. When full, all animations run unrestricted. When basic, more light-weight set of animations would run. When minimal, animations of fundamental functionalities are included. When none, all animations are completely suspended. Note: Please, note that each component determines which animations would run for a specific mode. calendarType This setting determines the default calendar type for all date-related components such as ui5-date-picker, ui5-datetime-picker, etc. You can always override the calendar type for each instance via component-specific properties. See the documentation of each component for details. The Gregorian calendar type is built in all date-related UI5 Web Components. Calendar types are opt-in features, see Using Features for details. Setting another calendar type via configuration or component properties requires that the respective calendar type be explicitly imported. Example: Make sure you’ve bundled the required calendar type: import &quot;@ui5/webcomponents-localization/dist/features/calendar/Islamic.js&quot;; Configure this calendar: &lt;script data-ui5-config type=&quot;application/json&quot;&gt; { &quot;calendarType&quot;: &quot;Islamic&quot; } &lt;/script&gt; Now all date-related components will use the Islamic calendar type by default. noConflict By default, UI5 Web Components fire all custom events twice - once with the documented name (e.g. change), and once more with a ui5- prefix (e.g. ui5-change). For example, when the ui5-switch is toggled, it fires a change event, but also a ui5-change event. The noConflict configuration setting allows certain control over this behavior: When false (default value), all custom events are fired with and without the ui5- prefix. When true, all custom events are fired with the ui5- prefix only. Hence the noConflict semantic in the name of the setting. This is handy, for example, if the name of an event, fired by a component, happens to collide with the name of an event provided by a third-party library. When an object is supplied, just the specified events will be fired with the ui5- prefix only. All other events will be fired normally - once with the prefix, and once without it. The format of this object is as follows: { &quot;events&quot;: [&quot;selection-change&quot;, &quot;header-click&quot;] } Note: Please, note that other keys may be added to this object in the future for the purpose of name conflict resolution. In the above example, only the selection-change and header-click events will be fired with a prefix. You can still use them by listening to ui5-selection-change and ui5-header-click, but the names selection-change and header-click will be free for use by other UI components and libraries without name collision. formatSettings This setting allows to override locale-specific settings for date-related controls. For example, to force the first day of week to Sunday, no matter the locale: { &quot;formatSettings&quot;: { &quot;firstDayOfWeek&quot;: 0 } } Setting Values Default Value Description firstDayOfWeek 0 (Sunday) through 6 (Saturday) Depends on locale When set, overrides the locale’s default value Note: Currently, only firstDayOfWeek is supported. More settings may be added in the future. fetchDefaultLanguage As described in the language configuration option section, the en language is built in all components that have translatable texts. All other languages are fetched as additional assets. Normally, you would never want to change that setting, but if for technical reasons you prefer even the default language to be fetched over the network, although it’s built-in, then set fetchDefaultLanguage this to true Example: &lt;script data-ui5-config type=&quot;application/json&quot;&gt; { &quot;fetchDefaultLanguage&quot;: true } &lt;/script&gt; Configuration Script In order to provide configuration settings, include a &lt;script&gt; element in your HTML page with: data-ui5-config attribute type=&quot;application/json&quot; attribute Provide the desired configuration settings in a JSON object, as shown in the example below. Example: &lt;script data-ui5-config type=&quot;application/json&quot;&gt; { &quot;theme&quot;: &quot;sap_belize_hcb&quot;, &quot;language&quot;: &quot;ja&quot;, &quot;animationMode&quot;: &quot;none&quot;, &quot;calendarType&quot;: &quot;Japanese&quot;, &quot;formatSettings&quot;: { &quot;firstDayOfWeek&quot;: 0 }, &quot;noConflict&quot;: { &quot;events&quot;: [&quot;selection-change&quot;, &quot;header-click&quot;] }, &quot;fetchDefaultLanguage&quot;: true } &lt;/script&gt; Configuration Module Imports The configuration script is used to set the initial configuration in a declarative manner. However, reading/modifying the configuration reliably can only be done programmatically. To do so, please import the desired functionality from the respective &quot;@ui5/webcomponents-base/dist/config/&quot; module. theme import { getTheme, setTheme } from &quot;@ui5/webcomponents-base/dist/config/Theme.js&quot;; language import { getLanguage, setLanguage } from &quot;@ui5/webcomponents-base/dist/config/Language.js&quot;; animationMode import { getAnimationMode, setAnimationMode } from &quot;@ui5/webcomponents-base/dist/config/AnimationMode.js&quot;; calendarType - can only be set initially in the configuration script. import { getCalendarType } from &quot;@ui5/webcomponents-base/dist/config/CalendarType.js&quot;; noConflict import { getNoConflict, setNoConflict } from &quot;@ui5/webcomponents-base/dist/config/NoConflict.js&quot;; formatSettings - can only be set initially in the configuration script. import { getFirstDayOfWeek } from &quot;@ui5/webcomponents-base/dist/config/FormatSettings.js&quot;; fetchDefaultLanguage import { getFetchDefaultLanguage, setFetchDefaultLanguage } from &quot;@ui5/webcomponents-base/dist/config/Language.js&quot;; Next: Right-To-Left (RTL) And Compact Mode",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/advanced/configuration/",
    "relUrl": "/playground/advanced/configuration/"
  },
  "2": {
    "id": "2",
    "title": "Custom UI5 Web Components Packages",
    "content": "Creating a Custom UI5 Web Components Package This tutorial explains how to: Create an NPM package for your own UI5 Web Components. Use UI5 Web Components’ standard build tools: @ui5/webcomponents-tools. Gain all @ui5/webcomponents capabilities such as HBS template support, i18n, theming, test setup, etc. Note: Whether you use npm or yarn is a matter of preference. Step 1. Create an NPM package. Run the init command. Note: The following command will create a new directory and initialize your package there. Make sure you haven’t created a directory yourself. With npm: npm init @ui5/webcomponents-package or npm init @ui5/webcomponents-package &lt;NEW-PACKAGE-NAME&gt; With yarn: yarn create @ui5/webcomponents-package or yarn create @ui5/webcomponents-package &lt;NEW-PACKAGE-NAME&gt; where &lt;NEW-PACKAGE-NAME&gt; is the name of your new package (and the name of the directory to be created), for example: npm init @ui5/webcomponents-package my-components will create a my-components directory and initialize the package there. Follow the prompts. The initialization script will ask you to choose: The name of your package (if you did not already pass a name when running the command above); The port for your dev server (8080 by default - just press Enter to select this); The tag of the sample web component that will be created (my-first-component by default - just press Enter to select this). Your package is ready! Just follow the instructions: cd &lt;NEW-PACKAGE-NAME&gt; npm i (or yarn if you prefer) npm start (or yarn start if you prefer) Step 2. Run the dev server and test the build. To run the dev server, as instructed above: npm run start or yarn start and once the project is built for the first time, the browser will automatically open the dev server URL. You can also run the tests: npm run test or yarn test and the production build: npm run build or yarn build. Note: In order to run the tests for the first time, you must have built the project with either start or build. That’s it! Understanding the Project Structure package.json The initialization script will add several packages as dependencies. These three @ui5/ packages will serve as the foundation of your own package and Web Components. Package Type of Dependency Description @ui5/webcomponents-base dependency Base classes and framework @ui5/webcomponents-theming dependency Base theming assets @ui5/webcomponents-tools devDependency Build tools and configuration assets The initialization script will create several NPM scripts for you in package.json. Task Purpose clean Delete the dist/ directory with the build output. build Production build to the dist/ directory. lint Run a static code scan with eslint. start Build the project for development, run the dev server and watch for changes. watch Watch for changes only. serve Run the dev server only. test Run the dev server and execute the specs from the test/specs/ directory. create-ui5-element Create an empty Web Component with the given name. Files in the main directory The initialization script will create several files in your package’s main directory. File Purpose .eslintignore Excludes the dist/ and test/ directories from static code scans. package-scripts.js An nps package scripts configuration file. bundle.js Entry point for the bundle used for development and tests. You’ll likely only need to change bundle.js to import your new components there. The config/ directory The config/ directory serves as a central place for most build and test tools configuration assets. Normally, you don’t need to change any files there. Custom configuration The files in the config/ directory simply import UI5 Web Components default configuration for all tasks: rollup, wdio, eslint, etc. If you need to customize any configuration, simply put your own content into the respective file in config/. Examples: Modifying eslint settings. Open config/.eslintrc.js. It should look like this: module.exports = require(&quot;@ui5/webcomponents-tools/components-package/eslint.js&quot;); As you can see, this is just a proxy to UI5 Web Components default configuration. Put your own content instead: module.exports = { &quot;env&quot;: { &quot;browser&quot;: true, &quot;es6&quot;: true }, &quot;root&quot;: true, &quot;extends&quot;: &quot;airbnb-base&quot;, ............. } Modifying wdio settings. Open config/wdio.conf.js. It should look like this: module.exports = require(&quot;@ui5/webcomponents-tools/components-package/wdio.js&quot;); Again, this is a proxy to UI5 Web Components default configuration. You could just paste the content of @ui5/webcomponents-tools/components-package/wdio.js here and modify at will. However, let’s not replace the whole file by hand this time, but just modify the exported configuration object. const result = require(&quot;@ui5/webcomponents-tools/components-package/wdio.js&quot;); result.config.capabilities[0][&quot;goog:chromeOptions&quot;].args = [&#39;--disable-gpu&#39;]; // From: [&#39;--disable-gpu&#39;, &#39;--headless&#39;] module.exports = result; In this example, what we did was simply replace one option in the configuration object to disable headless mode so that we can use browser.debug() in our *.spec.js files. For more on testing, see Testing Web Components. The src/ directory This is where you’ll do most of the development. Let’s see the necessary files for a my-first-component component. Class and template files The main files describing a Web Component are: File Purpose src/MyFirstComponent.js Web Component class src/MyFirstComponent.hbs Handlebars template In order to understand how a UI5 Web Component works and what lies behind these two files, make sure you check the Developing Web Components section of the documentation. For the purposes of this tutorial, however, you don’t need to understand their internals, as they are automatically generated by the script and are in a working state already. Theming-related files A single set of CSS rules will be used for all themes. The only difference between themes may be the values of CSS Variables. Some CSS Vars, such as --sapBackgroundColor and --sapTextColor are standard and automatically managed by the framework. In addition, you can define your own CSS Vars and provide different values for them for the different themes. Set these CSS Vars in the parameters-bundle.css file for each theme. These files are the entry points for the styles build script. File Purpose src/themes/MyFirstComponent.css All CSS rules for the Web Component, same for all themes; will be inserted in the shadow root. src/themes/sap_belize/parameters-bundle.css Values for the component-specific CSS Vars for the sap_belize theme src/themes/sap_belize_hcb/parameters-bundle.css Values for the component-specific CSS Vars for the sap_belize_hcb theme src/themes/sap_belize_hcw/parameters-bundle.css Values for the component-specific CSS Vars for the sap_belize_hcw theme src/themes/sap_fiori_3/parameters-bundle.css Values for the component-specific CSS Vars for the sap_fiori_3 theme src/themes/sap_fiori_3_dark/parameters-bundle.css Values for the component-specific CSS Vars for the sap_fiori_3_dark theme src/themes/sap_fiori_3_hcb/parameters-bundle.css Values for the component-specific CSS Vars for the sap_fiori_3_hcb theme src/themes/sap_fiori_3_hcw/parameters-bundle.css Values for the component-specific CSS Vars for the sap_fiori_3_hcw theme Note: It’s up to you whether to put the CSS Vars directly in the parameters-bundle.css files for the different themes or to import them from separate .css files. You could have, for example, a MyFirstComponent-params.css file for each theme and import it into the parameters-bundle.css file: @import &quot;MyFirstComponent-params.css&quot;;. Again, to know more about how these files work, you could have a look at the Developing Web Components section of the documentation. i18n files You can define translatable texts as key-value pairs, separated by = in the messagebundle.properties file. Then you can provide translations for as many languages as needed. File Purpose src/i18n/messagebundle.properties Source file for all translatable texts src/i18n/messagebundle_de.properties Translations in German src/i18n/messagebundle_en.properties Translations in English etc. etc. Let’s have a look at the sample messagebundle.properties file, generated by the script. #please wait text for the sample component PLEASE_WAIT=wait Here’s where you define all i18n texts, optionally with comments for the translators (# Comment). And now let’s have a look at a sample file with translations, for example messagebundle_es.properties: PLEASE_WAIT=Espere Assets (additional themes, i18n texts, etc.) File Purpose src/Assets.js Entry point for your package assets. This module imports all base assets (such as CLDR and the base theme parameters), but also your own package assets (i18n and package-specific theme parameters). Users of your package will have to import this module in their production applications in order to get additional themes support and i18n support. Note: For easier development and testing, Assets.js is also imported in the dev/test bundle bundle.esm.js by the initialization script. The test/ directory File Purpose test/pages/* Simple .html pages used for development and tests. src/specs/* Test specs, based on WDIO. They use the test pages for setup. You can execute all specs by running yarn test or npm run test. For more on testing, see our Testing Web Components section. Public Consumption of Your Custom UI5 Web Components Package Once you’ve developed your package and published it to NPM, application developers can import from the dist/ directory of your package any of your Web Components, and optionally the Assets.js module, if they want additional themes and i18n. For example, if your package is called my-ui5-webcomponents, users will install it by: npm i my-ui5-webcomponents --save and then use it by: import &quot;my-ui5-webcomponents/Assets.js&quot;; // optional import &quot;my-ui5-webcomponents/dist/MyFirstComponent.js&quot;; // for my-first-component from this tutorial import &quot;my-ui5-webcomponents/dist/SomeOtherComponent.js&quot;; import &quot;my-ui5-webcomponents/dist/YetAnotherComponent.js&quot;; Next: Developing Custom UI5 Web Components",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/development/custom-ui5-web-components-packages/",
    "relUrl": "/playground/development/custom-ui5-web-components-packages/"
  },
  "3": {
    "id": "3",
    "title": "Development workflow",
    "content": "General Development Workflow This document aims to explain the steps component developers would have to perform on daily basis from forking the project to merging a change, emphasising on the Github workflow. 1. Fork the UI5 Web Components repository. See how to fork a repo here. 2. Clone the UI5 Web Components repository. See how to clone a repo here. 3. Run the project. 3.0. Make sure you have the following prerequisites installed: Yarn; Node.js (version 14 or higher). 3.1. Install all dependencies. yarn 3.2. Build and serve the project. yarn start Once the project is served, you can explore the components in the browser that will automaticall open the dev server URL, usually: http://localhost:8080/ The server will reload the pages whenever you make changes in the code. 4. Develop. 4.1. Read the dedicated tutorials for component developers: Development Conventions and Guidelines; Developing Custom UI5 Web Components; Testing UI5 Web Components; Understanding UI5 Web Components Metadata. 4.2. Create a local branch within your fork and work with it as usual. 4.3. Before committing, run the linter to check if your code is written according to the project eslint configuration. $ yarn lint 4.4. Before committing, run the test of the component you are working on (see the article for testing above) to catch issues as soon as possible. $ cd packages/main $ yarn test test/specs/Button.spec.js 5. Open pull request (PR) from fork. You can open a pull request to the upstream repository from any branch or commit in your fork. We recommend that you make changes in a topic branch (not in your local main branch), so that you can push followup commits if you receive feedback on your pull request. You can open a pull request from the Github UI. 5.1. Find the “Pull requests” tab and then press the “New pull request” button. 5.2. Compare the main branch of the upstream with a branch from your fork. Note: The full guide on how to open PR from fork can be found here. 5.3. Once the PR is created you would have to accept a Developer Certificate of Origin (DCO). Just follow the link posted in the PR by the CLA assistant. Note: This is required only for your first PR. 5.4. Immediately after the PR is created, a central build process starts to verify the change, building the project and running all tests. In case you are interested in the build output, you can follow the link at the bottom of the PR page. 5.5. Wait for our code review and approval. After the PR is approved, the UI5 Web Components team will merge the change into the main branch. 6. Update pull request, created from a fork. You often would need to update your pull request, especially when you need to address review comments. To update your pull request, you have to push commits to the branch, that the pull request is based on and the changes will be reflected in the pull request. Note: We recommend syncing your fork before pushing commits to resolve merge conflicts beforehand. Note: The full guide on how to update PR can be found here. 7. Sync the fork. With the time your fork will be out of sync with the original repository and you would need to update it. 7.1. Specify a new remote upstream repository that will be synced with the fork. $ git remote add upstream https://github.com/SAP/ui5-webcomponents.git 7.2. Fetch the branches and their respective commits from the upstream repository. Commits to main will be stored in a local branch, upstream/main. $ git fetch upstream 7.3. Check out your fork’s local main branch. $ git checkout main 7.4. Merge the changes from upstream/main into your local main branch. This brings your fork’s main branch into sync with the upstream repository, without losing your local changes. $ git merge upstream/main Note: The full guide on how to sync a fork can be found here.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/contributing/development-workflow/",
    "relUrl": "/playground/contributing/development-workflow/"
  },
  "4": {
    "id": "4",
    "title": "First steps",
    "content": "First Steps This section explains how to get started with UI5 Web Components. Distribution Model UI5 Web Components are distributed as ES6 modules across several NPM packages: The most commonly used ones are: @ui5/webcomponents - components library, containing bread-and-butter components (buttons, inputs, pickers, etc.); @ui5/webcomponents-fiori - components library, containing semantic, higher-order components; @ui5/webcomponents-icons - icons collection, containing general-purpose and business-oriented icons. Important: There is no CDN for UI5 Web Components. Each application is expected to import and bundle only the components (and any other resources) it is going to use. Bundling UI5 Web Components To build your UI5 Web Components project you can use any bundling tool that supports the following features: .json imports; dynamic ES6 imports. This is true of all modern bundlers. UI5 Web Components are shipped as ES6 modules and published on NPM. If you are already using a framework that handles bundling of ES6 modules, skip forward to Installation or check the Tutorials section. Creating a Project You can use any ES6 module-capable front-end tooling, but in case you don’t have a preference yet, you can start a new project using Vite. The only prerequisite is to have Node.js installed. npm init vite Select a project name: my-webcomponents-app Select a framework: vanilla Select a variant: JavaScript This command will create a project structure under my-webcomponents-app. Follow the instructions on the screen to install the initial depenednecies and start a dev server. cd my-webcomponents-app npm install npm run dev​ You should see a message that a server is running on Local: http://localhost:3000/. Launch your favourite IDE and change some code, the browser page will be automatically refreshed. Installation Install @ui5/webcomponents npm install @ui5/webcomponents This command downloads the published source code of the UI5 Web Components to the node_modules folder. Now, you can add them to your code to get them on the web page. Documentation Take a look at the available UI5 Web Components documentation in the playground. Usage 1. Import the needed Web Component. // src/main.js import &quot;@ui5/webcomponents/dist/Button.js&quot;; This line runs the code that registers the &lt;ui5-button&gt; tag with the browser. Now, when the browser sees such a tag, it knows how to render it. 2. Instantiate the Web Component. Next, change the application markup in the same file to display the button on the page: // src/main.js ... document.querySelector(&#39;#app&#39;).innerHTML = ` &lt;ui5-button&gt;Hello UI5 Web Components&lt;/ui5-button&gt; ` Check the browser to see the displayed button. You can now use UI5 Web Components just like normal HTML elements - set attributes on them, attach events, and more as described in the documentation. 3. Run a production build. If you want to deploy your project on a static hosting or in a Node.js project, run: npm run build The output will show what files were created along with their sizes: vite v2.3.4 building for production... ✓ 99 modules transformed. dist/assets/favicon.17e50649.svg 1.49kb dist/index.html 0.51kb dist/assets/index.ccce2ca3.css 0.16kb / brotli: 0.10kb dist/assets/index.4116dceb.js 0.12kb / brotli: 0.09kb dist/assets/vendor.c05c7785.js 114.92kb / brotli: 24.30kb The contents of the dist folder is ready to be deployed for productive usage. The hashes in the file names make them safe for caching and the produced bundle is optimized for production. 4. Enjoy UI5 Web Components. Next: Importing UI5 Web Components",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/getting-started/first-steps/",
    "relUrl": "/playground/getting-started/first-steps/"
  },
  "5": {
    "id": "5",
    "title": "Theme",
    "content": "Custom Theming with UI Theme Designer UI5 Web Components are fully compatible with UI Theme Designer, a tool for building a custom theme. You can create your own theme and effortlessly integrate it in your UI5 Web Components project on HTML level. On top, this does not prevent you from switching to and from officially supported themes, while having your own. Note: UI Theme Designer is available for SAP customers only. We are currently working on a new tool, that will be publicly available. Follow this simple tutorial to build a custom theme running with UI5 Web Components in 5 minutes: Open UI Theme Designer. Go to the official docs and set up the Theme Designer. Create your custom theme in UI Theme Designer. Click the Create a New Theme button. Choose which SAP stock theme will serve as the base of your custom theme and click the Create Theme button in the footer of the dialog. Proceed to change as many parameters as you wish. Once you are done customizing, choose Theme -&gt; Export from the main menu on top. A dialog will appear, asking for Theme ID (technical name of your new theme) and a title. The Theme ID you choose at this point will be the one you’ll use in order to switch to your custom theme, for example if you choose mytheme: index.html?sap-ui-theme=mytheme Important: Before clicking the Export button, thus dismissing the dialog and finishing theme creation, it is mandatory that you expand the Optional Settings (for Experts) panel, and select the Source Files + CSS Resources option. Otherwise, no CSS Variables will be generated. Download the custom theme .zip file: Your browser will then download a .zip file with the name of your new theme, e.g. mytheme.zip. Copy the css_variables.css file with all CSS Variables for your custom theme to your project. You can find this file inside the .zip in the Base baseLib &lt;your theme name&gt; directory. For example: mytheme.zip Base baseLib mytheme css_variables.css. Just copy this file to a directory in your project where it can be statically served. Include the file in your project .html page: The simplest option would be to use a &lt;link&gt; tag and point to where you copied the file: &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&lt;path-to-your-css-file&gt;/css_variables.css&quot;&gt; but you could as well use a &lt;style&gt; tag and paste the content of css_variables.css inside, if that’s what you prefer: &lt;style&gt; /* Here goes the content of css_variables.css */ &lt;/style&gt; And that’s it! Now you can use your custom theme by setting it either in the URL of your page, or in your configuration script: index.html?sap-ui-theme=mytheme or &lt;script data-ui5-config type=&quot;application/json&quot;&gt; { &quot;theme&quot;: &quot;mytheme&quot; } &lt;/script&gt; Note: Using a custom theme does not prevent you from using the official themes. You can freely switch to and from them. import { setTheme } from &quot;@ui5/webcomponents-base/dist/config/Theme.js&quot;; setTheme(&quot;sap_fiori_3&quot;); ... setTheme(&quot;mytheme&quot;); ... setTheme(&quot;sap_fiori_3_dark&quot;); For more on configuring themes, see Configuration. Next: Custom Fonts",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/customizing/theme/",
    "relUrl": "/playground/customizing/theme/"
  },
  "6": {
    "id": "6",
    "title": "Angular",
    "content": "Get Started with UI5 Web Components &amp; Angular In this tutorial, you will learn how to add UI5 Web Components to your application. The UI5 Web Components can be added both to new Angular applications and to already existing ones. Step 1. Install Angular CLI. npm install -g @angular/cli Step 2. Create a new Angular application. ng new ui5-web-components-application cd ui5-web-components-application Step 3. Add UI5 Web Components. npm install @ui5/webcomponents --save Step 4. Allow the use of custom elements in Angular. Before using UI5 Web Components, you have to allow the use of custom elements in Angular. To do so, import CUSTOM_ELEMENTS_SCHEMA in app.module.ts : import { ..., CUSTOM_ELEMENTS_SCHEMA } from &#39;@angular/core&#39;; After importing it, add it to the schemas array: imports: [ ... ], schemas: [ CUSTOM_ELEMENTS_SCHEMA ] Step 5. Import the components you are going to use. import &quot;@ui5/webcomponents/dist/Button.js&quot;; Step 6. Use the imported elements in your application. &lt;ui5-button&gt;Hello world!&lt;/ui5-button&gt; Step 7. Launch the application. ng serve -o Additional Info Two-Way Data Binding You can use two-way data binding with the following components: CheckBox, RadioButton, Input, DatePicker, Switch, TextArea. In order to use it, you have to use a library called Origami that provides advanced support for two-way data binding of custom elements. Example: 1. Install Origami. npm install @codebakery/origami 2. Import the OrigamiFormsModule from Origami. import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from &#39;@angular/core&#39;; import { BrowserModule } from &#39;@angular/platform-browser&#39;; import { OrigamiFormsModule } from &#39;@codebakery/origami/forms&#39;; import { AppComponent } from &#39;./app.component&#39;; @NgModule({ imports: [BrowserModule, OrigamiFormsModule], declarations: [AppComponent], schemas: [CUSTOM_ELEMENTS_SCHEMA], bootstrap: [AppComponent] }) export class AppModule {} 3. Use Origami in your template. &lt;ui5-input [(ngModel)]=&quot;value&quot; origami&gt;&lt;/ui5-input&gt; 4. Make Angular boot after UI5 Web Components are defined. Add the APP_INITIALIZER provider to the module where you are using UI5 Web Components. In order to do so, import APP_INITIALIZER and add it to the providers array like this (in this example we will add it to the app.module.ts): import { ..., APP_INITIALIZER } from &#39;@angular/core&#39;; import CheckBox from &quot;@ui5/webcomponents/dist/CheckBox&quot;; function onAppInit(): () =&gt; Promise&lt;any&gt; { return (): Promise&lt;any&gt; =&gt; { return CheckBox.define(); }; } @NgModule({ declarations: [ ... ], imports: [ ... ], providers: [ { provide: APP_INITIALIZER, useFactory: onAppInit, multi: true }, ], schemas: [ CUSTOM_ELEMENTS_SCHEMA ], bootstrap: [AppComponent] })",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/frameworks/angular/",
    "relUrl": "/playground/frameworks/angular/"
  },
  "7": {
    "id": "7",
    "title": "RTL and compact mode",
    "content": "Right-To-Left (RTL) and Compact Mode This section explains how to make UI5 Web Components render in RTL and compact mode. Note: Both of these settings are not properties of the components per se, but rather markers you set on some part of the HTML page that affect all components inside. RTL Support Some UI5 Web Components are RTL-aware, meaning they render differently when placed in an RTL-designated part of the DOM tree. Setting RTL To have the components render in RTL mode, just set the HTML attribute dir to rtl on the component itself, the body, html or any other relevant region of your application. Example 1: &lt;body dir=&quot;rtl&quot;&gt; ... &lt;/body&gt; (RTL will be set for all UI5 Web Components on the page.) Example 2: &lt;body&gt; &lt;ui5-button&gt;Button 1&lt;/ui5-button&gt; &lt;div dir=&quot;rtl&quot;&gt; &lt;ui5-button&gt;Button 2&lt;/ui5-button&gt; &lt;/div&gt; &lt;ui5-button dir=&quot;rtl&quot;&gt;Button 3&lt;/ui5-button&gt; &lt;/body&gt; (RTL will be set for Button 2 and Button 3.) Changing RTL Dynamically The first time UI5 Web Components are rendered, they will take into account the dir attribute of the respective part of the DOM tree they are placed in. However, if you change dir dynamically afterwards, you must call the applyDirection method to re-render all RTL-aware components. Example: import applyDirection from &quot;@ui5/webcomponents-base/dist/locale/applyDirection.js&quot;; document.body.dir = &quot;rtl&quot;; applyDirection(); Technical Note: Whenever you change the dir attribute, the browser will automatically re-render that part of the DOM tree (including any Web Components) by default. The applyDirection call is only needed to adjust paddings, margins and other CSS selectors that are not affected by dir. As more advanced CSS features become available in the near future, applyDirection will not be needed and will eventually be deprecated. Compact Mode Some UI5 Web Components support compact mode, meaning they can be rendered with smaller sizes, margins and paddings in order to preserve as much space as possible. To enable compact mode, use any of the following markers on the component itself, the body, html or any other relevant region of your application: data-ui5-compact-size attribute ui5-content-density-compact class Example 1: &lt;body data-ui5-compact-size&gt; ... &lt;/body&gt; (Compact mode is set for all UI5 Web Components on the page.) Example 2: &lt;body&gt; &lt;ui5-button&gt;Button 1&lt;/ui5-button&gt; &lt;div data-ui5-compact-size&gt; &lt;ui5-button&gt;Button 2&lt;/ui5-button&gt; &lt;/div&gt; &lt;ui5-button class=&quot;ui5-content-density-compact&quot;&gt;Button 3&lt;/ui5-button&gt; &lt;/body&gt; (Compact mode will be set for Button 2 and Button 3.) Unlike RTL, compact mode does not require additional APIs when its markers are changed dynamically. Next: Micro-Frontends and Custom Elements Scoping",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/advanced/rtl-and-compact-mode/",
    "relUrl": "/playground/advanced/rtl-and-compact-mode/"
  },
  "8": {
    "id": "8",
    "title": "Conventions and guidelines",
    "content": "Development Conventions and Guidelines JavaScript Coding Guidelines We enforce code style rules using ESLint. Execute npm run lint to check your code for style issues. You may also find an ESLint integration for your favorite IDE here. Testing Integration testing is based on Webdriver.io. You can run all tests using npm run test. If reasonable, take the time and write a test for the proposed change or fix. Learn more about testing at the Testing UI5 Web Components page. Git Guidelines We adhere to the Conventional Commits specification. Commit Message Style The commit message consists of three parts: header body (optional) footer (optional) Commit Header The commit header is the first line of the commit message. It consists of three parts: type, scope and description. Commit Type It must be one of the following: fix - a bug fix (note: this will indicate a release). If possible, include a test in your change. feat - a new feature (note: this will indicate a release) docs - documentation only changes style - changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc) refactor - a code change that neither fixes a bug nor adds a feature perf - a code change that improves performance test - adding missing tests chore - changes to the build process or auxiliary tools and libraries such as documentation generation revert - revert to a commit WIP - work in progress Commit Scope (optional) It points to a specific component which is affected by the change. For example, ui5-button, ui5-card and ui5-table. Commit Description Use the imperative present tense. Instead of “I added feature xy” or “Adding tests for” use “Add feature xy” or “Add tests for”. It should be no more than 100 characters long. Commit Body (optional) After the commit header, there should be an empty line followed by the optional commit body. Describe the intention and reasoning of the change. Commit Footer (optional) After the optional commit body, there should be an empty line followed by the optional footer. If the change introduces a breaking change, it should start with BREAKING CHANGE: followed by a description of the change. BREAKING CHANGE: remove press event If the change fixes an issue reported on GitHub, add the following line to the commit message: Fixes #&lt;issueNumber&gt; (e.g. Fixes #42) Example fix(ui5-button): correct focus with &#39;tab&#39; key The button should receive a correct focus outline when the &#39;tab&#39; key is pressed. Fixes #42",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/contributing/conventions-and-guidelines/",
    "relUrl": "/playground/contributing/conventions-and-guidelines/"
  },
  "9": {
    "id": "9",
    "title": "Custom UI5 Web Components",
    "content": "Developing Custom UI5 Web Components Note: All examples in this tutorial are taken from the Demo UI5 Web Component (ui5-demo), generated by the package initialization script. For more information on creating a new package with a demo Web Component inside, click here. The class definition The main file representing the Web Component is Demo.js. import UI5Element from &quot;@ui5/webcomponents-base/dist/UI5Element.js&quot;; import litRender from &quot;@ui5/webcomponents-base/dist/renderer/LitRenderer.js&quot;; import { getI18nBundle } from &quot;@ui5/webcomponents-base/dist/i18nBundle.js&quot;; // Template import DemoTemplate from &quot;./generated/templates/DemoTemplate.lit.js&quot;; // Styles import DemoCss from &quot;./generated/themes/Demo.css.js&quot;; import { PLEASE_WAIT } from &quot;./generated/i18n/i18n-defaults.js&quot;; const metadata = { tag: &quot;ui5-demo&quot;, properties: { }, slots: { }, events: { }, }; class Demo extends UI5Element { static get metadata() { return metadata; } static get render() { return litRender; } static get template() { return DemoTemplate; } static get styles() { return DemoCss; } static async onDefine() { Demo.i18nBundle = await getI18nBundle(&quot;my-ui5-web-components&quot;); } static get dependencies() { return []; // array of components used internally } get pleaseWaitText() { return Demo.i18nBundle.getText(PLEASE_WAIT); } } Demo.define(); export default Demo; The UI5Element base class Every UI5 Web Component must extend the base class UI5Element, provided by the @ui5/webcomponents-base package: import UI5Element from &quot;@ui5/webcomponents-base/dist/UI5Element.js&quot;; class Demo extends UI5Element { } export default Demo; The metadata object Metadata is a JavaScript object, containing information about the public interface of a UI5 Web Component (tag name, properties, slots, events, etc.). Metadata is passed via the metadata static getter: import UI5Element from &quot;@ui5/webcomponents-base/dist/UI5Element.js&quot;; const metadata = { tag: &quot;ui5-demo&quot;, properties: { }, slots: { }, events: { }, }; class Demo extends UI5Element { static get metadata() { return metadata; } } export default Demo; So far, we’ve defined a ui5-demo Web Component with no properties, slots or events. For a complete reference to all metadata entities, click here. The render engine UI5 Web Components are agnostic of the DOM render engine used. However, all standard UI5 Web Components (@ui5/webcomponents, @ui5/webcomponents-fiori, etc.) use lit-html as the rendering technology of choice. The render engine is defined via the render static getter: import UI5Element from &quot;@ui5/webcomponents-base/dist/UI5Element.js&quot;; import litRender from &quot;@ui5/webcomponents-base/dist/renderer/LitRenderer.js&quot;; const metadata = { tag: &quot;ui5-demo&quot;, properties: { }, slots: { }, events: { }, }; class Demo extends UI5Element { static get metadata() { return metadata; } static get render() { return litRender; } } export default Demo; Here we import LitRenderer.js from the @ui5/webcomponents-base package which is a very tiny wrapper around lit-html. The template Now that we’ve defined the rendering technology of choice, we can pass a template in that technology’s syntax. This is done via the template static getter: import UI5Element from &quot;@ui5/webcomponents-base/dist/UI5Element.js&quot;; import litRender from &quot;@ui5/webcomponents-base/dist/renderer/LitRenderer.js&quot;; // Template import DemoTemplate from &quot;./generated/templates/DemoTemplate.lit.js&quot;; const metadata = { tag: &quot;ui5-demo&quot;, properties: { }, slots: { }, events: { }, }; class Demo extends UI5Element { static get metadata() { return metadata; } static get render() { return litRender; } static get template() { return DemoTemplate; } } export default Demo; The standard UI5 Web Components use handlebars templates that are automatically converted to lit-html syntax by the build script. If you have a Demo.hbs file along with the Demo.js file, the build script is going to create for you generated/templates/DemoTemplate.lit.js file. Therefore, we pass the content of this file to the template static getter. For more information, see the next chapter of this tutorial. The CSS definitions You can pass CSS to be inserted in the Shadow Root of the UI5 Web Component by using the styles static getter: import UI5Element from &quot;@ui5/webcomponents-base/dist/UI5Element.js&quot;; import litRender from &quot;@ui5/webcomponents-base/dist/renderer/LitRenderer.js&quot;; // Template import DemoTemplate from &quot;./generated/templates/DemoTemplate.lit.js&quot;; // Styles import DemoCss from &quot;./generated/themes/Demo.css.js&quot;; const metadata = { tag: &quot;ui5-demo&quot;, properties: { }, slots: { }, events: { }, }; class Demo extends UI5Element { static get metadata() { return metadata; } static get render() { return litRender; } static get template() { return DemoTemplate; } static get styles() { return DemoCss; } } export default Demo; If you have a themes/Demo.css file, the build script will automatically generate for you a generated/themes/Demo.css.js file, which in addition to your component’s CSS, also contains definitions for all CSS Vars for the default theme. You can define your own CSS Vars for each theme in the respective theme directory in themes/: File Descriptions themes/sap_belize/parameters-bundle.css Values for the component-specific CSS Vars for the sap_belize theme. themes/sap_belize_hcb/parameters-bundle.css Values for the component-specific CSS Vars for the sap_belize_hcb theme. themes/sap_fiori_3/parameters-bundle.css Values for the component-specific CSS Vars for the sap_fiori_3 theme. themes/sap_fiori_3_dark/parameters-bundle.css Values for the component-specific CSS Vars for the sap_fiori_3_dark theme. For more information, see the CSS chapter of this tutorial. The dependencies You must import all other web components, used inside the .hbs template file. Otherwise, the internally used web components won’t be defined. Furthermore, in order to make use of the Scoping feature, you must list all the internally used web components in the dependencies static getter, as the framework reads the dependencies and scopes the tag names of the listed web components. For Example: If the ui5-icon tag (or any other standard or custom UI5 Web component) is used inside the template, you must import the Icon web component and add it to the dependencies static getter as shown below. import UI5Element from &quot;@ui5/webcomponents-base/dist/UI5Element.js&quot;; // Template import DemoTemplate from &quot;./generated/templates/DemoTemplate.lit.js&quot;; // Styles import DemoCss from &quot;./generated/themes/Demo.css.js&quot;; import Icon from &quot;@ui5/webcomponents/dist/Icon.js&quot;; const metadata = { tag: &quot;ui5-demo&quot;, properties: { }, slots: { }, events: { }, }; class Demo extends UI5Element { static get metadata() { return metadata; } static get render() { return litRender; } static get template() { return DemoTemplate; } static get styles() { return DemoCss; } static get dependencies() { return [Icon]; // array of components used internally } } export default Demo; Defining the Web Component Defining a Web Component is necessary in order to register it in the browser. This is done by calling the UI5Element.define static method: import UI5Element from &quot;@ui5/webcomponents-base/dist/UI5Element.js&quot;; import litRender from &quot;@ui5/webcomponents-base/dist/renderer/LitRenderer.js&quot;; // Template import DemoTemplate from &quot;./generated/templates/DemoTemplate.lit.js&quot;; // Styles import DemoCss from &quot;./generated/themes/Demo.css.js&quot;; const metadata = { tag: &quot;ui5-demo&quot;, properties: { }, slots: { }, events: { }, }; class Demo extends UI5Element { static get metadata() { return metadata; } static get render() { return litRender; } static get template() { return DemoTemplate; } static get styles() { return DemoCss; } static get dependencies() { return []; // array of components used internally } } Demo.define(); export default Demo; Adding i18n support There are 2 steps to do that: Get and assign an i18n bundle during component definition await Demo.i18nBundle = getI18nBundle(&quot;my-ui5-web-components&quot;); Get texts from the bundle, according to the currently configured language return Demo.i18nBundle.getText(PLEASE_WAIT); The getI18nBundle method is provided by the i18nBundle.js module from the @ui5/webcomponents-base package. So the final source code is: import UI5Element from &quot;@ui5/webcomponents-base/dist/UI5Element.js&quot;; import litRender from &quot;@ui5/webcomponents-base/dist/renderer/LitRenderer.js&quot;; import { getI18nBundle } from &quot;@ui5/webcomponents-base/dist/i18nBundle.js&quot;; // Template import DemoTemplate from &quot;./generated/templates/DemoTemplate.lit.js&quot;; // Styles import DemoCss from &quot;./generated/themes/Demo.css.js&quot;; import { PLEASE_WAIT } from &quot;./generated/i18n/i18n-defaults.js&quot;; const metadata = { tag: &quot;ui5-demo&quot;, properties: { }, slots: { }, events: { }, }; class Demo extends UI5Element { static get metadata() { return metadata; } static get render() { return litRender; } static get template() { return DemoTemplate; } static get styles() { return DemoCss; } static get dependencies() { return []; // array of components used internally } static async onDefine() { Demo.i18nBundle = await getI18nBundle(&quot;my-ui5-web-components&quot;); } get pleaseWaitText() { return Demo.i18nBundle.getText(PLEASE_WAIT); } } Demo.define(); export default Demo; Please, note that here we use the onDefine method of UI5Element in order to ensure that i18n resources have been fetched before the Web Component has been defined. The used namespace for resource registration (in this example my-ui5-web-components) is the name property of your package.json file. The template file The template of the Web Component is in the Demo.hbs file. In this particular example it looks like this: &lt;div&gt;This is: ui5-demo. &lt;/div&gt; The context in the template is the Web Component instance, therefore you can directly use any properties/getters on the object. Here, we see the pleaseWaitText getter, defined in the previous step. As explained above, the .hbs file is transformed by the build script to a .js file in the lit-html syntax. More specifically, this file is provided to the Web Component class. For a full description of the .hbs template features and syntax, see Understanding the Handlebars (.hbs) templates. The CSS Let’s inspect the following files (one with CSS declarations, the others with CSS Vars values for the themes). File Purpose themes/Demo.css All CSS rules for the Web Component, same for all themes; will be inserted in the shadow root. themes/sap_belize/parameters-bundle.css Values for the component-specific CSS Vars for the sap_belize theme. themes/sap_belize_hcb/parameters-bundle.css Values for the component-specific CSS Vars for the sap_belize_hcb theme. themes/sap_fiori_3/parameters-bundle.css Values for the component-specific CSS Vars for the sap_fiori_3 theme. themes/sap_fiori_3_dark/parameters-bundle.css Values for the component-specific CSS Vars for the sap_fiori_3_dark theme. In the Demo.css file, in addition to other selectors, we have: :host { border: 2px solid var(--ui5-demo-border-color); background-color: var(--sapBackgroundColor); color: var(--sapTextColor); } The CSS vars, starting with --sap are standard and provided by the framework. All the rest are custom for the specific Web Component. Respectively, the definitions file for, let’s say sap_fiori_3, contains: :root { --ui5-demo-border-color: green; } What’s important to understand here is that you author all the .css files listed in the table above, but the build script generates from them a single .js file for you, and this is namely the file you pass to the Web Component class: generated/themes/Demo.css.js. Next: Understanding UI5 Web Components Metadata",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/development/custom-ui5-web-components/",
    "relUrl": "/playground/development/custom-ui5-web-components/"
  },
  "10": {
    "id": "10",
    "title": "Fonts",
    "content": "Custom Fonts The data-ui5-font-face Font-Face style Tag Upon boot, the UI5 Web Components framework creates a &lt;style data-ui5-font-face&gt; tag in the &lt;head&gt; in order to load the necessary fonts. For example: &lt;style type=&quot;text/css&quot; data-ui5-font-face=&quot;&quot;&gt; @font-face { font-family: &quot;72&quot;; font-style: normal; font-weight: 400; src: local(&quot;72&quot;), url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Regular.woff2?ui5-webcomponents) format(&quot;woff2&quot;); } ................ &lt;/style&gt; Important: Notice the data-ui5-font-face attribute. It is unique and recognized by UI5 Web Components. Customizing Fonts You might need to customize fonts for several reasons: To provide different paths for the fonts (e.g. no public internet connection on the server). To provide additional declarations inside @font-face. To download additional fonts, such as e.g. 72-Light. Not to download any of the default fonts. To do that, just create a &lt;style type=&quot;text/css&quot; data-ui5-font-face=&quot;&quot;&gt; tag in the head of your HTML page and provide arbitrary content for it. Then, when the UI5 Web Components framework boots, it will detect the existence of this tag by the data-ui5-font-face attribute, and will not create it. The one you provided will be used instead. Example In order to use the 72-Light font in your app and have an additional setting (font-display), you could add the following markup in the &lt;head&gt; of your HTML page: &lt;style type=&quot;text/css&quot; data-ui5-font-face=&quot;&quot;&gt; @font-face { font-family: &quot;72&quot;; font-style: normal; font-weight: 200; font-display: swap; src: local(&quot;72-Light&quot;), url(https://sdk.openui5.org/resources/sap/ui/core/themes/sap_fiori_3/fonts/72-Light.woff2?ui5-webcomponents) format(&quot;woff2&quot;); } &lt;/style&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/customizing/fonts/",
    "relUrl": "/playground/customizing/fonts/"
  },
  "11": {
    "id": "11",
    "title": "Importing components",
    "content": "Importing UI5 Web Components This section explains how to import UI5 Web Components to your projects. Components Packages The UI5 Web Components project currently offers 2 NPM packages with Web Components. This separation is purely logical, as you can, and should, only import the components you are going to need from both packages. Project NPM Package Description Application Components List main @ui5/webcomponents “Bread-and-butter” components, such as buttons, pickers, inputs, list, table, etc. General web apps Explore fiori @ui5/webcomponents-fiori More semantic, higher-order components that implement Fiori patterns Mostly SAP Fiori apps Explore Usage Add one or both of the above packages as dependencies to your project. npm i @ui5/webcomponents npm i @ui5/webcomponents-fiori Import the components your app is going to use. import &quot;@ui5/&lt;PACKAGE-NAME&gt;/dist/&lt;COMPONENT-NAME&gt;.js&quot;; For example: import &quot;@ui5/webcomponents/dist/Button.js&quot;; // ui5-button import &quot;@ui5/webcomponents/dist/Input.js&quot;; // ui5-input import &quot;@ui5/webcomponents/dist/List.js&quot;; // ui5-list import &quot;@ui5/webcomponents/dist/StandardListItem.js&quot;; // ui5-li import &quot;@ui5/webcomponents-fiori/dist/Wizard.js&quot;; // ui5-wizard Use the components in your app. Once a component is imported, it is automatically registered and ready to use. For example: &lt;ui5-button id=&quot;btn&quot;&gt;This is a button&lt;/ui5-button&gt; &lt;ui5-input value=&quot;This is an input&quot;&gt;&lt;/ui5-input&gt; &lt;script&gt; btn.addEventListener(&quot;click&quot;, () =&gt; {}); &lt;/script&gt; Note: For most components the name of the module (f.e. Button.js, Icon.js) coincides with the name of the tag (ui5-button, ui5-icon), whereas for others this is not the case (f.e. StandardListItem.js and ui5-li). Always consult the documentation when in doubt. Next: Understanding UI5 Web Components APIs",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/getting-started/importing-components/",
    "relUrl": "/playground/getting-started/importing-components/"
  },
  "12": {
    "id": "12",
    "title": "Vue",
    "content": "Get Started with UI5 Web Components &amp; Vue.js In this tutorial you will learn how to add UI5 Web Components to your application. You can add UI5 Web Components both to new Vue.js applications and to already existing ones. Step 1. Install Vue CLI. npm install -g @vue/cli Step 2. Init a new app. vue create ui5-web-components-application cd ui5-web-components-application Step 3. Add UI5 Web Components. npm install @ui5/webcomponents --save Step 4a. In Vue 2.x add UI5 Web Components to Vue ignoredElement. Add the following line to your main.js file: Vue.config.ignoredElements = [/^ui5-/]; Step 4b. In Vue 3.x the web components check is performed during template compilation. There are two options to instruct the compiler to treat UI5 Web Components as custom elements. If using a build step: pass the isCustomElement option to the Vue template compiler. If using vue-loader, this should be passed via vue-loader’s compilerOptions option: // in webpack config rules: [ { test: / .vue$/, use: &#39;vue-loader&#39;, options: { compilerOptions: { isCustomElement: tag =&gt; tag.startsWith(&quot;ui5-&quot;) } } } ] If using on-the-fly template compilation, pass the check via app.config.isCustomElement: const app = createApp({}) app.config.isCustomElement = tag =&gt; tag.startsWith(&quot;ui5-&quot;); Step 5. Import the components that you are going to use. import &quot;@ui5/webcomponents/dist/Button.js&quot;; Step 6. Use the imported elements in your application. &lt;ui5-button&gt;Hello world!&lt;/ui5-button&gt; Step 7. Launch the application. yarn serve Additional Info Two-Way Data Binding v-model binding doesn’t work for custom elements. In order to use two-way data binding, you need to bind and update the value yourself like this: &lt;ui5-input :value=&quot;inputValue&quot; @input=&quot;inputValue = $event.target.value&quot;&gt; &lt;/ui5-input&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/frameworks/vue/",
    "relUrl": "/playground/frameworks/vue/"
  },
  "13": {
    "id": "13",
    "title": "Playground app",
    "content": "Running the UI5 Web Components Playground App Locally The deployed playground can be run locally to test your changes and samples. In order to do so, you have to follow the steps below: 1. Install Ruby. See how to install Ruby depending on your OS here. Note: Some OS might come with built-in Ruby, so you don’t have to install it on your own. (To check if Ruby is installed, run ruby -v in the terminal.) 2. Install Bundler. Bundler is a tool for managing dependencies in Ruby. You need to install version 2.02 of Bundler. In order to install it run: gem install bundler -v 2.0.2 3. Go to the playground package. 4. Install all of the playground dependencies. bundle install 5. Go to the project root folder. 6. Start the playground locally. In your terminal, run the following command: yarn start:playground This will build all the necessary assets and will start local server on your machine. To access the playground, visit: http://localhost:4000/",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/contributing/playground-app/",
    "relUrl": "/playground/contributing/playground-app/"
  },
  "14": {
    "id": "14",
    "title": "Scoping",
    "content": "Micro-Frontends and Custom Elements Scoping What does scoping mean? The scoping feature lets you add an arbitrary suffix to the names of all UI5 Web Components’ custom elements: Example: import { setCustomElementsScopingSuffix } from &quot;@ui5/webcomponents-base/dist/CustomElementsScope.js&quot;; setCustomElementsScopingSuffix(&quot;demo&quot;); Then all names can only be used with the supplied suffix: &lt;ui5-card-demo&gt; &lt;ui5-title-demo&gt;This card is scoped&lt;/ui5-title-demo&gt; &lt;ui5-button-demo&gt;Click me&lt;/ui5-button-demo&gt; &lt;/ui5-card-demo&gt; Trying to use them with the standard names will not work (the custom elements won’t be upgraded), so for example the following: &lt;ui5-button&gt;Click me&lt;/ui5-button&gt; will not have any effect. When do I need to use the scoping feature? The scoping feature is completely optional. It is not needed for application development, but it is strongly recommended when building libraries and micro-frontends. It ensures that the custom elements that your code uses have not already been reserved by another library or an older version of UI5 Web Components. If, for example, your code may be loaded on demand by unknown applications as a third-party service, there is always the risk that the app or another third-party library, loaded by the app, may use an older version of UI5 Web Components which means that all custom elements will be upgraded with this version, while your code may rely on newer features. Imagine the following integration scenario of an app, using several third-party libraries, loaded on demand (and not bundled with the app): &lt;body&gt; &lt;!-- Application code, using UI5 Web Components version 1.0.1 --&gt; &lt;div id=&quot;application-container&quot;&gt; &lt;ui5-title&gt;This is the new app with many third-party extensions!&lt;/ui5-title&gt; &lt;ui5-card&gt; &lt;ui5-button&gt;Hello&lt;/ui5-button&gt; &lt;ui5-input&gt;&lt;/ui5-input&gt; &lt;/ui5-card&gt; &lt;/div&gt; &lt;!-- Code inserted by &quot;common help&quot; library, using UI5 Web Components version 1.2.0 --&gt; &lt;div id=&quot;common-help-container&quot;&gt; &lt;ui5-button-chlp new-button-prop=&quot;1&quot;&gt;Help Menu&lt;/ui5-button-chlp&gt; &lt;ui5-input-chlp value=&quot;Type your question&quot;&gt;&lt;/ui5-input-chlp&gt; &lt;/div&gt; &lt;!-- Code inserted by &quot;global footer&quot; library, using UI5 Web Components version 1.3.0 --&gt; &lt;footer id=&quot;global-footer-container&quot;&gt; &lt;global-footer-main&gt; &lt;ui5-button-glob-foot new-button-prop=&quot;2&quot; even-newer-button-prop=&quot;3&quot;&gt;Profile&lt;/ui5-button-glob-foot&gt; &lt;ui5-link-glob-foot&gt;Contacts&lt;/ui5-link-glob-foot&gt; &lt;/global-footer-main&gt; &lt;/footer&gt; &lt;/body&gt; In the example above: The app itself is using an old version (1.0.1) of UI5 Web Components (which has already upgraded the ui5-card, ui5-button and ui5-input tags). The imaginary “common help” library, based on a newer version (1.2.0), uses the scoping suffix chlp. The imaginary “global footer” library, based on an even newer version (1.3.0), uses the scoping suffix glob-foot. This allows the libraries to use new ui5-button properties such as newButtonProp and evenNewerButtonProp that are not found in older versions. How can I fine-tune the scoping feature? import { setCustomElementsScopingSuffix, setCustomElementsScopingRules } from &quot;@ui5/webcomponents-base/dist/CustomElementsScope.js&quot;; setCustomElementsScopingSuffix(&quot;demo&quot;); setCustomElementsScopingRules({include: [/^ui5-/], exclude: [/^ui5-my-/, /-test-/]}); By default, all UI5 Web Components starting with ui5- are scoped when you call setCustomElementsScopingSuffix. However, you have full control over which tags are scoped and which not. In the example above, tags starting with ui5-my- and tags having the word -test- in their name are not scoped. Setting scoping rules is handy if, for example, your library uses both standard and custom UI5 Web Components and you don’t want to scope the custom ones (as no disambiguation will be necessary for them). Next: OpenUI5 Integration",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/advanced/scoping/",
    "relUrl": "/playground/advanced/scoping/"
  },
  "15": {
    "id": "15",
    "title": "Understanding components APIs",
    "content": "Understanding UI5 Web Components APIs UI5 Web Components are just HTML. Therefore, their usage is identical to the usage of standard HTML elements. Usually, Web Components creation and manipulation will be done internally by your framework of choice. This section explains UI5 Web Components APIs and usage in general terms. UI5 Web Components provide the following kinds of APIs: API Category Description properties / attributes Define the look and behavior of the component slots Define whether you can put text or other HTML elements (and if yes, what kind) as DOM children of the component events Define what events the component fires due to user interaction public methods Methods you can call on the component 1. How do I create a UI5 Web Component instance? The simplest way is to just add it somewhere in the &lt;body&gt; of your HTML page. &lt;ui5-button&gt;Click me&lt;/ui5-button&gt; You can also use document.createElement and then manually add the element to the HTML document. const myButton = document.createElement(&quot;ui5-button&quot;); document.body.appendChild(myButton); In most real-world scenarios, the above will be done by your framework of choice. 2. How do I set the properties/attributes of UI5 Web Components? You can use attributes and properties to the same effect. Keep in mind that attribute names are “kebab-case” (e.g. value-state) while property names are “camelCase” (e.g. valueState). Attributes can be set directly on the web component in HTML. &lt;ui5-checkbox id=&quot;cb&quot; value-state=&quot;Error&quot;&gt;&lt;/ui5-checkbox&gt; Properties can only be set programmatically. To set a property: const myCb = document.getElementById(&quot;cb&quot;); myCb.valueState = &quot;Error&quot;; To set an attribute: const myCb = document.getElementById(&quot;cb&quot;); myCb.setAttribute(&quot;value-state&quot;, &quot;Error&quot;); A note on Boolean attributes: in HTML Boolean attributes may have no value or any value (most commonly same as their name). In any case, the presence of the attribute means it is “true” and its absence - “false”. const myCb = document.getElementById(&quot;cb&quot;); myCb.setAttribute(&quot;checked&quot;, &quot;&quot;); // same as myCB.checked = true; myCb.removeAttribute(&quot;checked&quot;); // same as myCB.checked = false; 3. How do I set the content of UI5 Web Components? Some UI5 Web Components do not accept children or text. They are only modified by properties and attributes. An example of such a Web Component is the ui5-icon: &lt;ui5-icon name=&quot;add&quot;&gt;&lt;/ui5-icon&gt; The icon accepts no text or other HTML elements inside its opening and closing tags. Therefore, in the next example, the text inside the &lt;ui5-icon&gt; will be ignored. &lt;ui5-icon name=&quot;add&quot;&gt;This is an icon&lt;/ui5-icon&gt; Other UI5 Web Components, such as &lt;ui5-button&gt; accept text (and in addition HTML elements that make sense when writing text). &lt;ui5-button id=&quot;btn&quot;&gt;This is the content of the button&lt;/ui5-button&gt; &lt;ui5-button&gt;This is the &lt;strong&gt;content&lt;content&gt; of the button&lt;/ui5-button&gt; &lt;ui5-button&gt;This is the &lt;span class=&quot;myClass&quot;&gt;content&lt;span&gt; of the button&lt;/ui5-button&gt; You can change the content of these elements with any suitable DOM API. const myButton = document.getElementById(&quot;btn&quot;); myButton.textContent = &quot;New text&quot;; myButton.innerHTML = &quot;New text&quot;; // same effect as above myButton.childNodes[0].nodeValue = &quot;New text&quot; // same result again Usually, you’ll never have to do this manually either, as you’ll bind the content of the button via the means provided by the framework you’re using, and the framework will be the one updating it for you. Finally, there are UI5 Web Components that only accept other HTML elements. For example &lt;ui5-popover&gt; may contain any HTML element - standard elements and other custom elements alike. &lt;ui5-popover&gt; &lt;div&gt;This is my content&lt;/div&gt; &lt;p&gt;This is some more content&lt;/p&gt; &lt;ui5-button&gt;Button on a popover&lt;/ui5-button&gt; &lt;/ui5-popover&gt; Manipulating the content of such Web Components is done again with the standard DOM APIs. For example, to add something else to the popover above: const popover = document.getElementsByTagName(&quot;ui5-popover&quot;)[0]; const newChild = document.createElement(&quot;div&quot;); popover.appendChild(newChild); Again, normally you won’t need to do this manually, but your framework will do it for you. Now, let’s have a look at a Web Component that is intended to have only certain children: &lt;ui5-tabcontainer id=&quot;tc1&quot;&gt; &lt;ui5-tab text=&quot;Laptops&quot; additional-text=&quot;125&quot;&gt;&lt;/ui5-tab&gt; &lt;ui5-tab-separator&gt;&lt;/ui5-tab-separator&gt; &lt;ui5-tab text=&quot;Phones&quot; design=&quot;Positive&quot; additional-text=&quot;25&quot;&gt;&lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Tablets&quot; design=&quot;Negative&quot; additional-text=&quot;40&quot;&gt;&lt;/ui5-tab&gt; &lt;/ui5-tabcontainer&gt; The &lt;ui5-tabcontainer&gt; should only contain &lt;ui5-tab&gt; and &lt;ui5-tab-separator&gt;. The manipulation is exactly the same as with the other Web Components. For example, to add a new tab: const tc = document.getElementById(&quot;tc1&quot;); const newTab = document.createElement(&quot;ui5-tab&quot;); newTab.text = &quot;Smart Watches&quot;; newTab.design = &quot;Positive&quot;; tc.appendChild(newTab); And finally, some UI5 Web Components may render their children in different places, depending on the purpose of each child. Let’s have a look at the &lt;ui5-popover&gt; again. After consulting the documentation, we can see that this particular Web Component accepts three categories of children: default, footer, header. For footer and header the children can be any type of HTML Element (hence HTMLElement), while for default they can be both HTML Elements and text (hence Node). To tell the &lt;ui5-popover&gt; which child goes where, use the slot attribute on it. &lt;ui5-popover&gt; &lt;div slot=&quot;header&quot;&gt;This will be used as a header&lt;/div&gt; &lt;div&gt;Some popover content&lt;/div&gt; &lt;div&gt;Some more content&lt;/div&gt; This text will also go to the default slot. &lt;div slot=&quot;footer&quot;&gt; &lt;ui5-button&gt;Do some action&lt;/ui5-button&gt; &lt;/div&gt; &lt;/ui5-popover&gt; You do not have to supply the slot attribute for the default slot of any Web Component. Also, since text nodes cannot have attributes in HTML, this also means that only the default slot can accept text (can be of type Node) and all text nodes go there. Every UI5 Web Component that has slots, has at least a default slot. Here’s a summary of slot types: Slot Type Allowed Children Example Node All HTML elements and text ui5-button default slot HTMLElement HTML elements only (no text) ui5-popover header slot 4. How do I listen for events? For this task, you can again use standard DOM methods: const myMessage = document.getElementsByTagName(&quot;ui5-message-strip&quot;)[0]; myMessage.addEventListener(&quot;close&quot;, () =&gt; { console.log(&quot;The user dismissed the message&quot;); }); const myButton = document.getElementsByTagName(&quot;ui5-button&quot;)[0]; myButton.addEventListener(&quot;click&quot;, () =&gt; { console.log(&quot;The user clicked the button&quot;); }); For the events fired by each UI5 Web Component, consult the documentation. Like with most other tasks, you’ll use your framework’s syntax to bind to events, and you’ll rarely, if ever, need to call addEventListener yourself. Please, note, however that some frameworks (e.g. React) cannot use their standard syntax for binding to custom events (such as close), but only for standard ones (such as click). So, for custom events in React you’d have to get a reference to the element and call addEventListener manually. For more information, please check our React tutorial. 5. How do I call public methods? Get a reference to the UI5 Web Component and call the method on it, as you would with any other HTML element. const myDialog = document.getElementsByTagName(&quot;ui5-dialog&quot;)[0]; myDialog.show(); Consult the documentation for the available public methods for each UI5 Web Component. 6. Conclusion As you can see from this article, UI5 Web Components, being HTML elements in the first place, comply with the same rules. There are some novelties that come with the Web Components standard, such as slot, but otherwise everything else is what you already know and use from HTML. Next: Using Icons",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/getting-started/understanding-components-apis/",
    "relUrl": "/playground/getting-started/understanding-components-apis/"
  },
  "16": {
    "id": "16",
    "title": "Understanding components metadata",
    "content": "Understanding UI5 Web Components Metadata Metadata is a JavaScript object, containing information about the public interface of a UI5 Web Component (tag name, properties, etc.). Disclaimer: The information below is for UI5 Web Components development only. It is experimental and may change. Tag Defines the HTML tag for the Web Component. Example: { &quot;tag&quot;: &quot;ui5-my-element&quot;, } Properties / Attributes Defines the HTML properties for the Web Component. Note about attributes: By default, for each property an equivalent attribute is supported. Attributes have the same names as properties, but in kebab-case rather than camelCase. Properties of type Object, properties with multiple set totrue and properties with noAttribute set to true do not have an attribute equivalent. Example { &quot;properties&quot;: { &quot;message&quot;: { &quot;type&quot;: String, &quot;defaultValue&quot;: &quot;Hello&quot;, }, &quot;shown&quot;: { &quot;type&quot;: Boolean, &quot;noAttribute&quot;: true, }, &quot;settings&quot;: { &quot;type&quot;: Object, }, &quot;nums&quot;: { &quot;type&quot;: Integer, &quot;multiple&quot;: true, }, &quot;animationDuration&quot;: { &quot;type&quot;: Integer, }, }, } Property configuration settings Setting Type Default Description type Property type N/A The type of the property. For more information on types see the table below. defaultValue Any valid value for the type undefined Default value of the property. Cannot be set for type “Boolean”. Booleans are always false by default in HTML. multiple Boolean false Indicates whether the property represents a single value or is an array of values of the given type. noAttribute Boolean false No attribute equivalent will be created for that property. Always true for properties of type Object. The type setting is required. Types Type Class to Use Description string String String value boolean Boolean Boolean value - always false by default object Object JS Object custom type Extend @ui5/webcomponents-base/dist/types/DataType.js Used mainly for enumerations Examples of prebuilt custom types Type Class to Use Description Integer @ui5/webcomponents-base/dist/types/Integer.js Integer value ValueState @ui5/webcomponents-base/dist/types/ValueState.js Enumeration with: None, Error, Warning, Success values Slots Defines the slots that will be provided by this UI5 Web Component. Example { &quot;slots&quot;: { &quot;default&quot;: { &quot;type&quot;: Node, }, &quot;footer&quot;: { &quot;type&quot;: HTMLElement, }, &quot;rows&quot;: { &quot;type&quot;: HTMLElement, &quot;individualSlots&quot;: true, } } } Slot configuration settings Setting Type Default Description type * HTMLElement or Node N/A The type of the children that can go into that slot. individualSlots Boolean false If set to true, each child will have its own slot, allowing you to arrange/wrap the children arbitrarily. propertyName String N/A Allows to set the name of the property on the Web Component, where the children belonging to this slot will be stored. invalidateOnChildChange ** Boolean or Object false Experimental, do not use. Defines whether every invalidation of a UI5 Web Component in this slot should trigger an invalidation of the parent UI5 Web Component. * The type setting is required. ** Important: invalidateOnChildChange is not meant to be used with standard DOM Elements and is not to be confused with MutationObserver-like functionality. It rather targets the use case of components that slot abstract items (UI5Element instances without a template) and require to be invalidated in turn whenever these items are invalidated. The invalidateOnChildChange setting can be either a Boolean (true meaning invalidate the component on any change of a child in this slot) or an Object with properties and slots fields. They in turn can be either of type Boolean (true meaning invalidate on any property change or any slot change) or Array of strings indicating exactly which properties or slots lead to invalidation. Examples: In the following example, since invalidateOnChildChange is not used (false by default), the component will be invalidated whenever children are added/removed in the tabs slot, but not whenever a child in that slot changes. { managedSlots: true, slots: { &quot;default&quot;: { &quot;type&quot;: &quot;HTMLElement&quot;, &quot;propertyName&quot;: &quot;tabs&quot;, } } } Setting invalidateOnChildChange to true means: invalidate the component whenever a child in the tabs slot gets invalidated, regardless of the reason. { managedSlots: true, slots: { &quot;default&quot;: { &quot;type&quot;: &quot;HTMLElement&quot;, &quot;propertyName&quot;: &quot;tabs&quot;, &quot;invalidateOnChildChange&quot;: true } } } The example below results in exactly the same behavior as the one above, but it uses the more explicit Object format: { managedSlots: true, slots: { &quot;default&quot;: { &quot;type&quot;: &quot;HTMLElement&quot;, &quot;propertyName&quot;: &quot;tabs&quot;, &quot;invalidateOnChildChange&quot;: { &quot;properties&quot;: true, &quot;slots&quot;: true } } } } The following example uses the Object format again and means: invalidate the component whenever the children in this slot are invalidated due to property changes, but not due to slot changes. Here &quot;slots&quot;: false is added for completeness (as false is the default value for both properties and slots) { managedSlots: true, slots: { &quot;default&quot;: { &quot;type&quot;: &quot;HTMLElement&quot;, &quot;propertyName&quot;: &quot;tabs&quot;, &quot;invalidateOnChildChange&quot;: { &quot;properties&quot;: true, &quot;slots&quot;: false } } } } The final example shows the most complex format of invalidateOnChildChange which allows to define which slots or properties in the children inside that slot lead to invalidation of the component: { managedSlots: true, slots: { &quot;default&quot;: { &quot;type&quot;: &quot;HTMLElement&quot;, &quot;propertyName&quot;: &quot;tabs&quot;, &quot;invalidateOnChildChange&quot;: { &quot;properties&quot;: [&quot;text&quot;, &quot;selected&quot;, &quot;disabled&quot;], &quot;slots&quot;: [&quot;default&quot;] } } } } Notes: Children without a slot attribute will be assigned to the default slot. All HTML text nodes will be assigned to the default slot, as they cannot have a slot attribute. For all slots the Web Component will have a property created, with the name of the slot, to hold a list of all children assigned to this slot. For example, if you have a slot named “rows”, “this.rows” will be an array, holding references to all children with slot=&quot;rows&quot;, or no slot, if rows was default. For the default slot you can provide a propertyName setting. For example, if your default slot has a propertyName: &quot;items&quot;, then “this.items” will hold all children that were assigned to the default slot. #### Allowed slot types Type Description Node Accepts both Text nodes and HTML Elements HTMLElement Accepts HTML Elements only Managed slots Determines whether the framework should manage the slots of this UI5 Web Component. This setting is useful for UI5 Web Components that don’t just slot children, but additionally base their own rendering on the presence/absence/type of children. { &quot;managedSlots&quot;: true } When managedSlots is set to true: The framework will invalidate this UI5 Web Component, whenever its children are added/removed/rearranged (and additionally when invalidated, if invalidateOnChildChange is set). If any of this UI5 Web Component’s children are custom elements, the framework will await until they are all defined and upgraded, before rendering the component for the first time. The framework will create properties for each slot on this UI5 Web Component’s instances for easier access to the slotted children. For example, if there are header, content and footer slots, there will be respectively header, content and footer properties of type Array holding the slotted children for each slot. Note: You can use the propertyName metadata entity, described above, to modify these. In essence, set this to true if the UI5 Web Component you’re developing should be aware of its children for the purposes of its own state management and rendering (contrary to just displaying them). An example of a component that would benefit from managedSlots is a Tab Container that monitors its children (Tabs) in order to display a link on its Tab Strip for each Tab child. Therefore, it would need to be invalidated whenever Tabs are added/removed, in order to update its own state and visualization. Language-aware components The languageAware metadata setting determines if the component should be re-rendered whenever the language changes. { &quot;languageAware&quot;: true } You should use this setting if your component has translatable texts, therefore needs to be re-rendered when the app changes the language. Theme-aware components The themeAware metadata setting determines if the component should re-render whenever the theme changes. { &quot;themeAware&quot;: true } Important: You should almost never use this setting. Normally components are built in such a way that their structure is exactly the same for all themes and whenever the theme changes only CSS Variables are changed and the component itself does not need to be re-rendered - the browser automatically updates the styles when CSS Variables get new values. However, there are some very rare cases where a component must behave differently (opposed to just look differently) based on the theme. For example, the ui5-icon component must show different versions of the icons based on the theme. Use the themeAware setting in these exceptional cases to guarantee that your component will be re-rendered on theme change. Next: Understanding the Handlebars (.hbs) templates",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/development/understanding-components-metadata/",
    "relUrl": "/playground/development/understanding-components-metadata/"
  },
  "17": {
    "id": "17",
    "title": "OpenUI5 integration",
    "content": "OpenUI5 Integration OpenUI5 is an open-source framework in the same product family as UI5 Web Components. To enable OpenUI5 support: import &quot;@ui5/webcomponents-base/dist/features/OpenUI5Support.js&quot;; If your app uses both OpenUI5 and UI5 Web Components, UI5 Web Components can benefit from OpenUI5 configuration and resources. When you import the above module: OpenUI5 configuration takes precedence over UI5 Web Components configuration for all common entities (theme, language, etc.). In addition, changing the theme in OpenUI5 will also change the theme in UI5 Web Components. Fonts will not be loaded twice (just once by OpenUI5, and reused). Locale data assets will not be fetched twice (just once by OpenUI5, and reused). Therefore, if you intend to run both frameworks in the same browser window, it is highly recommended to enable OpenUI5 support and benefit from these optimizations. Next: Using the Framework",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/advanced/openui5-integration/",
    "relUrl": "/playground/advanced/openui5-integration/"
  },
  "18": {
    "id": "18",
    "title": "Understanding hbs templates",
    "content": "Understanding the Handlebars (.hbs) templates The preferred way to write the renderers for UI5 Web Components (and supported directly by the build tools) is to use standard Handlebars templates with some additional custom syntax. Handlebars compilation Design goals The context in .hbs files Global context Context in loops Accessing the global context from loops The .hbs syntax Bindings Conditions Loops Property assignment (the . prefix) Boolean attribute assignment (the ? prefix) Event handlers assignment (the @ prefix) Style maps Class maps Partials Include Using the slot element Rendering slots Individual slots 1. Handlebars compilation Handlebars templates (.hbs) are compiled during build/development to lit-html templates (.lit.js) and the lit templates are what’s actually executed during runtime. Example: The following src/Demo.hbs template &lt;button&gt;&lt;/button&gt; will be compiled to dist/generated/templates/DemoTemplate.lit.js with the following content: import { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from &quot;@ui5/webcomponents-base/dist/renderer/LitRenderer.js&quot;; const block0 = (context, tags, suffix) =&gt; html`&lt;button&gt;${ifDefined(context.text)}&lt;/button&gt;`; export default block0; and later tree-shaken by the bundler and bundled along with the rest of the component’s code. Therefore, the .hbs file is there just for convenience, the end result will always be optimized lit-html. 2. Design goals of the Handlebars templates Declarative: write HTML in a form as close as possible to what will eventually be in the DOM (rather than writing template functions directly). Abstract: the template could be compiled to other formats in the future (not just lit-html) so it should only use universal concepts and no lit-specific features. Separation of concerns: the template must be as simple as possible with no complex expressions or calculations - variables that control structures (for example, `` statements) should be precalculated. For these reasons, we would suggest you use .hbs templates and have them compiled to lit-html, instead of directly writing lit-html renderers, although that’s also possible if you prefer so. 3. The context in .hbs files 3.1 Global context The context in the .hbs file is the web component instance, and you do not have to write the this keyword (although you can). Therefore, you can directly use metadata entities (property, slot, event names) or any other Javascript property on the component directly: In the Demo.js file: this.age = 30; this.fullName = `${this.name} ${this.lastName}`; In the Demo.hbs file you can just use them directly: &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; The following code will have exactly the same result: &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;/p&gt; but this is optional, so it’s almost never used. 3.2 Context in loops In a loop the context is always the current item, and not the component itself. Example: In the Demo.js file: this.items = [ { id: &quot;item1&quot;, posinset: 1, setsize: 5, text: &quot;Item 1&quot; }, { id: &quot;item2&quot;, posinset: 2, setsize: 5, text: &quot;Item 2&quot; } ] In the Demo.hbs file: &lt;div id=&quot;&quot; role=&quot;option&quot; aria-posinset=&quot;&quot; aria-setsize=&quot;&quot; &gt;&lt;/div&gt; Again, you can use the this keyword, but it’s not necessary. The following code will be the same as the one above: &lt;div id=&quot;&quot; role=&quot;option&quot; aria-posinset=&quot;&quot; aria-setsize=&quot;&quot; &gt;&lt;/div&gt; The only use case where you must use the this keyword is when you want to refer to the looped over item directly (and not its properties). Example: &lt;div id=&quot;&quot; .item=&quot;&quot; &gt;&lt;/div&gt; Here, each div inside the loop gets assigned an item property that points to the respective item from the array we’re looping over. Here’s another example for the this keyword: In the Demo.js file: this.numbers = [ [1, 2, 3], [4, 5, 6] ]; In the Demo.hbs file: &lt;div&gt; &lt;span&gt;&lt;/span&gt; &lt;/div&gt; The result in the DOM would be: &lt;div&gt;&lt;span&gt;1&lt;/span&gt;&lt;span&gt;2&lt;/span&gt;&lt;span&gt;3&lt;/span&gt;&lt;/div&gt; &lt;div&gt;&lt;span&gt;4&lt;/span&gt;&lt;span&gt;5&lt;/span&gt;&lt;span&gt;6&lt;/span&gt;&lt;/div&gt; In this example, the first usage of this (in the nested #each) is the nested array (for example, [1, 2, 3]), and the second usage of this inside the span is the number itself. 3.3 Accessing the global context from loops You can access the global context inside loops with the “one-level-up” expression: ../ Example: In the Demo.js file: this.name = &quot;John Smith&quot;; this.items = [ { id: &quot;item1&quot; }, { id: &quot;item2&quot; } ] In the Demo.hbs file: &lt;div id=&quot;&quot;&gt;&lt;/div&gt; In this example, even though we’re looping over an item from the array, we can still access the global context and use the name property of the web component instance. 4. The .hbs syntax You can use the following features when writing .hbs templates: Bindings You can access any property from the context (generally the web component instance) in your .hbs template with ``. In the Demo.js file: this.tooltip = &quot;Some tooltip&quot;; this.txt = &quot;Some text&quot;; In the Demo.hbs file: &lt;button title=&quot;&quot;&gt;&lt;button/&gt; Note: You must always create valid HTML, so you can only use bindings for attribute values or text nodes. For example, the following is not allowed: &lt; =&quot;Hello&quot;&gt;This will not compile&lt;/&gt; You can access object properties: In the Demo.js file: this.person = { name: &quot;John&quot;, lastName: &quot;Smith&quot; } In the Demo.hbs file: &lt;p&gt; &lt;/p&gt; but you cannot use expressions inside .hbs templates. The following is not allowed: &lt;p&gt;&lt;/p&gt; Instead, you should precalculate the required value in the .js file and use it directly in the template: In the Demo.js file: get fullName() { return `${this.person.name} ${this.person.lastName}`; } In the Demo.hbs file: &lt;p&gt;&lt;/p&gt; By default, all content that you pass is escaped for security purposes. However, you can pass arbitrary HTML with }: In the Demo.js file: this.unsafeMessage = `&lt;span&gt;This is unsafe content&lt;/span&gt;`; In the Demo.hbs file: &lt;p&gt;}&lt;/p&gt; The result in DOM would be: &lt;p&gt;&lt;span&gt;This is unsafe content&lt;/span&gt;&lt;/p&gt; Note: Using } is strongly discouraged and should be avoided whenever possible. If you must use it, make sure you’ve sanitized your HTML manually beforehand. A common use-case for the } binding is to manually add &lt;strong&gt; tags to parts of a string to implement highlighting while the user is typing. Here’s an example: In the Demo.js file: this.userInput = `&lt;strong&gt;Arg&lt;/strong&gt;entina`; In the Demo.hbs file: &lt;div&gt;}&lt;/div&gt; Thus, if the user has typed “Arg” (while typing “Argentina”), this part of the name will be highlighted. Finally, it is possible to pass HTML elements (not just strings as in all examples above), and they will be rendered: In the Demo.js file: this.messageDiv = document.createElement(&quot;div&quot;); this.messageDiv.textContent = &quot;Hello&quot;; In the Demo.hbs file: &lt;p&gt;&lt;/p&gt; The result in DOM would be: &lt;p&gt;&lt;div&gt;Hello&lt;/div&gt;&lt;/p&gt; Note: This is not to be confused with }. The } binding expects a string, containing HTML, while the example above demonstrates passing an HTML element (hence Object, not String) directly. Note: Although this technique is allowed and has its uses (such as cloning slotted elements to another component), passing HTML directly is strongly discouraged. The best practice is to always write your HTML explicitly in the template. Conditions You can use if, else and unless to create conditions. Examples: &lt;label class=&quot;ui5-badge-text&quot;&gt;&lt;bdi&gt;&lt;slot&gt;&lt;/slot&gt;&lt;/bdi&gt;&lt;/label&gt; or &lt;label class=&quot;has-text&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/label&gt; &lt;label class=&quot;empty-label&quot;&gt;&lt;/label&gt; or &lt;p&gt;Some content&lt;/p&gt; You can chain if-else-if, as follows: &lt;slot&gt;&lt;/slot&gt; &lt;ui5-icon class=&quot;ui5-avatar-icon&quot; name=&quot;&quot; accessible-name=&quot;&quot;&gt;&lt;/ui5-icon&gt; &lt;span class=&quot;ui5-avatar-initials&quot;&gt;&lt;/span&gt; Again, you cannot use expressions, so the following is not allowed: &lt;p&gt;Show admin functionality&lt;/p&gt; Instead, you should have a precalculated value in your .js file, for example: In Demo.js: get isAdmin() { return this.person.access === &quot;admin&quot;; } and then use this value in Demo.hbs: &lt;p&gt;Show admin functionality&lt;/p&gt; Loops You can use each to loop over arrays. In the Demo.js file: this.items = [ { id: &quot;item1&quot;, posinset: 1, setsize: 5, text: &quot;Item 1&quot; }, { id: &quot;item2&quot;, posinset: 2, setsize: 5, text: &quot;Item 2&quot; } ] In the Demo.hbs file: &lt;div id=&quot;&quot; role=&quot;option&quot; aria-posinset=&quot;&quot; aria-setsize=&quot;&quot; &gt;&lt;/div&gt; See the previous section (especially the Context in loops part) for more examples and the meaning of the this keyword in loops. You can access the index of the currently looped item with the special variable. Note that is zero-based. For example, the following template: &lt;div id=&quot;&quot; part=&quot;item-&quot; &gt;&lt;/div&gt; will produce: &lt;div id=&quot;item1&quot; part=&quot;item-0&quot;&gt;&lt;/div&gt; &lt;div id=&quot;item2&quot; part=&quot;item-1&quot;&gt;&lt;/div&gt; This is a common technique to create unique shadow parts for items within a UI5 Web Component. Property assignment (the . prefix) The . prefix allows you to bind by property, rather than by attribute. Consider the following example: this.id = &quot;myId&quot;; this.someString = &quot;Some data&quot;; this.item = { a: 1, b: 2 }; this.text = &quot;Some text&quot;; &lt;div id=&quot;&quot; data-info=&quot;&quot; .item=&quot;&quot; &gt; &lt;/div&gt; While data-info is set as an attribute (default assignment), item is set as a property due to the . used. The result in the DOM would be: &lt;div id=&quot;myId&quot; data-info=&quot;Some data&quot;&gt;Some text&lt;/div&gt; There would be no item in the DOM at all, but the following code: document.getElementById(&quot;myId&quot;).item would return the item object because it was set as a property. Boolean attribute assignment (the ? prefix) The ? prefix signifies that an attribute must not be set in DOM at all, if the bound value is falsy. Consider the following example: this._id = &quot;myCB&quot;; this.checked = false; this.readonly = false; this.disabled = false; &lt;input id=&quot;-CB&quot; type=&#39;checkbox&#39; ?checked=&quot;&quot; ?readonly=&quot;&quot; ?disabled=&quot;&quot; tabindex=&quot;-1&quot; aria-hidden=&quot;true&quot; data-sap-no-tab-ref /&gt; Since the checked, readonly, and disabled attributes are all Boolean, they must not be in the DOM if we want the &lt;input&gt; to be interactive. The output in DOM would be: &lt;input id=&quot;myCB-CB&quot; type=&#39;checkbox&#39; tabindex=&quot;-1&quot; aria-hidden=&quot;true&quot; data-sap-no-tab-ref /&gt; All attributes that had the ? prefix and were bound to a falsy value are gone from DOM. However, if you did not use the ? prefix: &lt;input id=&quot;-CB&quot; type=&#39;checkbox&#39; checked=&quot;&quot; readonly=&quot;&quot; disabled=&quot;&quot; tabindex=&quot;-1&quot; aria-hidden=&quot;true&quot; data-sap-no-tab-ref /&gt; even though checked, readonly, and disabled are equal to false, the resulting DOM would be: &lt;input id=&quot;myCB-CB&quot; type=&#39;checkbox&#39; checked=&quot;&quot; readonly=&quot;&quot; disabled=&quot;&quot; tabindex=&quot;-1&quot; aria-hidden=&quot;true&quot; data-sap-no-tab-ref /&gt; which is not what we want, since boolean HTML attributes don’t need to have a value at all to be considered set, only their presence is required. Therefore, always bind boolean attributes with ?. Event handlers assignment (the @ prefix) You can bind events as follows: In the Demo.js file: this.onClick = event =&gt; {}; In the Demo.hbs file: &lt;button @click=&quot;&quot;&gt;&lt;/button&gt; Style maps Style maps are an easy and useful tool to apply multiple styles to an element dynamically. In order to use a style map in your .hbs template you must bind a styles property (or as in the next example, a getter called styles). Any binding to a styles object on a style attribute will be treated as a style map. In the Demo.js file: get styles() { return { root: { display: this.isBlock ? &quot;block&quot; : &quot;inline&quot;, width: `${this.x}px`, height: `${this.y}px` }, footer: { backgroundColor: this.bgColor } } } In the Demo.hbs file: &lt;div style=&quot;&quot;&gt; Some content &lt;footer style=&quot;&quot;&gt;&lt;/footer&gt; &lt;/div&gt; After the following code is run, both the div and the footer will have the respective CSS styles applied to them. Important: do not build styles manually. Always use style maps as they are CSP-compliant and they will not build style strings and assign them, but will use Javascript APIs to apply each style/CSS variable separately. The following is an anti-pattern and is not allowed in the latest version of the handlebars-to-lit compiler: this.display = &quot;block&quot;; this.styles = &quot;display: none; visibility: hidden&quot;; &lt;div style=&quot;display: &quot;&gt;&lt;/div&gt; &lt;div style=&quot;&quot;&gt;&lt;/div&gt; In the first example we build a style value manually, and in the second example we pass hard-coded styles as a string. None of these are CSP-compliant. The correct way would be to pass objects (as in the first example), in which case a style map will be used. Class maps Class maps are an easy tool to set multiple classes to an element - either conditionally, or unconditionally. In order to use a class map in your .hbs template you must bind a classes property (or as in the next example, a getter called classes) to a class attribute: get classes() { return { main: { &quot;ui5-demo-main&quot;: true, &quot;ui5-demo-mobile&quot;: isPhone() }, content :{ &quot;ui5-content-wide&quot;: this.width &gt; 1024 }, section: { &quot;ui5-section&quot;: true, &quot;ui5-section-with-items&quot;: this.items.length &gt; 0, &quot;ui5-section-desktop&quot;: !isPhone() &amp;&amp; !isTablet() } } } &lt;article class=&quot;&quot;&gt; &lt;div class=&quot;&quot;&gt;&lt;/div&gt; &lt;section class=&quot;&quot;&gt;&lt;/section&gt; &lt;/article&gt; Here, all 3 HTML elements will have their classes applied based on the conditions in the definition of the class map. Some entries in the class map are unconditional (ui5-demo-main and ui5-section) so these classes will always be set, however the rest are going to be set only if certain criteria are met. Partials You can use partials to reuse code in .hbs templates: You can define a partial with and use it with where NAME is the name of the partial. Consider the following example: &lt;div&gt; &lt;/div&gt; &lt;p&gt;Some more content&lt;/p&gt; &lt;div&gt; &lt;/div&gt; &lt;span&gt;&lt;/span&gt; Here we define some common code in the valueStateMessage partial and use it twice within the template. Partials are very often used to define hooks - extension points for other components. Example: In Demo.hbs: &lt;section&gt; &lt;span class=&quot;first-fe&quot; data-ui5-focus-trap tabindex=&quot;0&quot; @focusin=&gt;&lt;/span&gt; &lt;div style=&quot;&quot; class=&quot;&quot; @scroll=&quot;&quot; part=&quot;content&quot;&gt; &lt;slot&gt;&lt;/slot&gt; &lt;/div&gt; &lt;span class=&quot;last-fe&quot; data-ui5-focus-trap tabindex=&quot;0&quot; @focusin=&gt;&lt;/span&gt; &lt;/section&gt; Here we define two empty partials (beforeContent and afterContent) for others to implement. Note: Partials do not have their own context. When a partial is processed, its content is treated as if directly written at the partial’s insertion point. Include You can include other .hbs files with `` where PATH_TO_FILE is a relative or absolute path to the .hbs file you want to include. Example: Paths to .hbs files from other node_modules/ libraries are also supported. Example: The most common use case for `` is to include an .hbs file that has extension points (hooks) and implement them. Given the example from the previous section (about Partials), consider the following: In Demo2.hbs: &lt;span&gt;Implementation here&lt;/span&gt; &lt;span&gt;Another implementation here&lt;/span&gt; Then the Demo2 component will use the .hbs file of the Demo component, however with its own version of its partials. 5. Using the slot element Rendering slots The slot element allows you to render children, nested in your web component, in a desired place in the shadow DOM. You should render each slot, defined in your component’s metadata (see Understanding UI5 Web Components Metadata), somewhere in the .hbs template. To render the default slot simply render a slot tag: &lt;slot&gt;&lt;/slot&gt; and to render a named slot: &lt;slot name=&quot;tabs&quot;&gt;&lt;/slot&gt; Here’s a real-world example of a “page” component: In Page.js (metadata object): slots: { header: { type: HTMLElement }, &quot;default&quot;: { type: HTMLElement, propertyName: &quot;content&quot; }, footer: { type: HTMLElement } } In Page.hbs: &lt;div class=&quot;ui5-page-root&quot;&gt; &lt;header class=&quot;ui5-page-header-root&quot; id=&quot;ui5-page-header&quot;&gt; &lt;slot name=&quot;header&quot;&gt;&lt;/slot&gt; &lt;/header&gt; &lt;section part=&quot;content&quot; class=&quot;ui5-page-content-root&quot; style=&quot;&quot;&gt; &lt;slot&gt;&lt;/slot&gt; &lt;/section&gt; &lt;footer class=&quot;ui5-page-footer-root&quot; style=&quot;&quot;&gt; &lt;slot name=&quot;footer&quot;&gt;&lt;/slot&gt; &lt;/footer&gt; &lt;/div&gt; We render 3 slot elements - a default slot (unnamed) and 2 named slots - respectively with name equal to header and footer. All children, passed to the component, with no slot attribute will then be rendered by the browser where the default &lt;slot&gt;&lt;/slot&gt; is, and all children with attributes slot=&quot;header&quot; / slot=&quot;footer&quot; will be rendered where the respective named slot is. Individual slots All children, assigned to a certain slot, are rendered by the browser next to each other in the exact order in which they were passed to the component. Sometimes, however, each child must be placed separately in the shadow root, potentially wrapped in other HTML elements, to satisfy the UX design of the component. The individualSlots slot metadata configuration setting (see Understanding UI5 Web Components Metadata) allows you to have a separate physical slot for each child belonging to a certain slot. However, setting individualSlots: true in the metadata configuration only creates an _individualSlot property on each element belonging to the slot, but does not create any slots automatically. The individual slots must be explicitly rendered by the developer in the .hbs template. To do so, simply render a slot with a name property equal to the _individualSlot value for each child. Here’s an example: In Demo.js (metadata object): { slots: { &quot;default&quot;: { type: HTMLElement, propertyName: &quot;items&quot;, individualSlots: true } } } Since propertyName is set to items, the children of the default slot will be accessible on the web component instance with this.items; and since individualSlots is set to true, every child in this.items (every child slotted in the default slot) will have an _individualSlots property created by the framework. In Demo.hbs you must render a slot for each child with name equal to the _individualSlot property value for this child: &lt;div class=&quot;item-wrapper&quot;&gt; &lt;slot name=&quot;&quot;&gt;&lt;/slot&gt; &lt;/div&gt; The resulting DOM from the loop above will look like this: &lt;div class=&quot;item-wrapper&quot;&gt;&lt;slot name=&quot;items-1&quot;&gt;&lt;/slot&gt;&lt;/div&gt; &lt;div class=&quot;item-wrapper&quot;&gt;&lt;slot name=&quot;items-2&quot;&gt;&lt;/slot&gt;&lt;/div&gt; &lt;div class=&quot;item-wrapper&quot;&gt;&lt;slot name=&quot;items-3&quot;&gt;&lt;/slot&gt;&lt;/div&gt; This allows you to have arbitrary DOM around each child and implement complex UX design, otherwise impossible if all children were just normally rendered next to each other in a single slot. Next: Testing UI5 Web Components",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/development/understanding-hbs-templates/",
    "relUrl": "/playground/development/understanding-hbs-templates/"
  },
  "19": {
    "id": "19",
    "title": "Using icons",
    "content": "Using Icons This section explains how to load and use icons in your UI5 Web Components projects. One of the most commonly used UI5 Web Components is ui5-icon. Additionally, several UI5 Web Components have an icon property that expects an icon name as a value. Icon Collections The UI5 Web Components project currently offers 3 icon collections, provided as NPM packages: Project NPM Package Description Icons list icons UI5 Web Components - Icons A rich icon collection (SAP-icons), suitable for enterprise-grade apps Explore icons-tnt UI5 Web Components - Icons TNT A rich icon collection (SAP-icons-TNT), suitable for more technical apps Explore icons-business-suite UI5 Web Components - Icons Business Suite A rich icon collection (BusinessSuiteInAppSymbols), suitable for SAP Fiori apps Explore Usage Add one or more of the above packages as dependencies to your project. npm i @ui5/webcomponents-icons npm i @ui5/webcomponents-icons-tnt npm i @ui5/webcomponents-icons-business-suite Import either all icons from a package, or better - only the ones your app is going to use. Important: It is strongly recommended that you only import the icons that your app is going to use. This will keep your bundle small. Generally, importing all icons is required only if you do not know in advance which icons you are going to need. To import all icons from a package, use the dist/AllIcons.js module of that package: import &quot;@ui5/&lt;PACKAGE-NAME&gt;/dist/AllIcons.js&quot;; For example: import &quot;@ui5/webcomponents-icons/dist/AllIcons.js&quot;; import &quot;@ui5/webcomponents-icons-tnt/dist/AllIcons.js&quot;; import &quot;@ui5/webcomponents-icons-business-suite/dist/AllIcons.js&quot;; To import individual icons, use the individual modules for the required icons: import &quot;@ui5/&lt;PACKAGE-NAME&gt;/dist/&lt;ICON-NAME&gt;.js&quot;; For example: import &quot;@ui5/webcomponents-icons/dist/alert.js&quot;; import &quot;@ui5/webcomponents-icons/dist/bookmark.js&quot;; import &quot;@ui5/webcomponents-icons/dist/cart.js&quot;; import &quot;@ui5/webcomponents-icons-tnt/dist/actor.js&quot;; import &quot;@ui5/webcomponents-icons-business-suite/dist/add-point.js&quot;; Once an icon has been imported, it can be used. All collections but @ui5/webcomponents-icons require a prefix before the icon name. The prefix and icon name are separated by a /. Package Prefix Example @ui5/webcomponents-icons N/A alert @ui5/webcomponents-icons-tnt tnt tnt/actor @ui5/webcomponents-icons-business-suite business-suite business-suite/coins For example: &lt;ui5-icon name=&quot;alert&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-button icon=&quot;tnt/actor&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-avatar icon=&quot;business-suite/coins&quot;&gt;&lt;/ui5-avatar&gt; Custom Icon Collections Currently we use SVGs to display all standard icons. In addition, we provide an API to register custom SVG icon collections via the registerIconLoader method as follows: Register custom icon collection loader The loader must return an object with the following fields: collection name data object that describes the icons: names and SVG paths import {registerIconLoader } from &quot;@ui5/webcomponents-base/dist/asset-registries/Icons.js&quot;; registerIconLoader(&quot;my-custom-icons&quot;, () =&gt; { return { &quot;collection&quot;: &quot;my-custom-icons&quot;, &quot;data&quot;: { &quot;mark&quot;: { paths: [ // SVG path1, SVG path2, SVG path3... ], } }); Use the custom icons After the SVG icons collection is registered, you can use the custom icons everywhere you usually use the standard icons in UI5 Web Components (e.g. ui5-icon, ui5-button, etc): &lt;ui5-icon name=&quot;my-custom-icons/mark&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-button icon=&quot;my-custom-icons/mark&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-avatar icon=&quot;my-custom-icons/mark&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-li icon=&quot;my-custom-icons/mark&quot;&gt;&lt;/ui5-li&gt; Custom SVG icons In case you need to use a fully custom SVG with multiple SVG elements like circle and rect instead of only a custom path, you can provide a custom renderer and register it for usage in &lt;ui5-icon&gt;. First, create a template for the icon you need: BakeryDining.hbs &lt;g&gt; &lt;rect fill=&quot;none&quot; height=&quot;24&quot; width=&quot;24&quot; y=&quot;0&quot; /&gt; &lt;/g&gt; &lt;g&gt; &lt;g&gt; &lt;path d=&quot;M7.6,8.67l-2.01,0.8c-0.22,0.09-0.34,0.31-0.31,0.54l2.4,5.98h1.23l-0.62-6.9C8.25,8.75,7.91,8.54,7.6,8.67 z&quot; opacity=&quot;.3&quot; /&gt; &lt;path d=&quot;M3.07,16.1c-0.27,0.53,0.29,1.09,0.82,0.83l1.68-0.84l-1.08-2.71L3.07,16.1z&quot; opacity=&quot;.3&quot; /&gt; &lt;path d=&quot;M13.36,6.99h-2.71c-0.27,0-0.53,0.23-0.5,0.54l0.77,8.45h2.17l0.77-8.45C13.88,7.22,13.63,6.99,13.36,6.99z&quot; opacity=&quot;.3&quot; /&gt; &lt;path d=&quot;M18.41,9.47l-2.01-0.8c-0.31-0.12-0.65,0.09-0.68,0.42l-0.62,6.9h1.23l2.4-5.98 C18.75,9.78,18.63,9.56,18.41,9.47z&quot; opacity=&quot;.3&quot; /&gt; &lt;path d=&quot;M19.52,13.39l-1.08,2.7l1.68,0.84c0.52,0.26,1.09-0.3,0.82-0.83L19.52,13.39z&quot; opacity=&quot;.3&quot; /&gt; &lt;path d=&quot;M20.5,10.94c0.13-0.32,0.1-0.23,0.15-0.39c0.3-1.21-0.34-2.47-1.5-2.93l-2.01-0.8c-0.46-0.18-0.95-0.21-1.41-0.12 c-0.11-0.33-0.29-0.63-0.52-0.89C14.73,5.29,14.06,5,13.36,5h-2.71C9.94,5,9.27,5.29,8.8,5.81C8.56,6.07,8.38,6.37,8.27,6.69 C7.81,6.6,7.32,6.63,6.86,6.81l-2.01,0.8c-1.16,0.46-1.8,1.72-1.5,2.93l0.15,0.38C1.1,15.55,1,15.55,1,16.38 c0,0.91,0.46,1.74,1.24,2.22c1.42,0.88,2.49,0.14,4-0.61h11.53c1.52,0.76,1.86,1.01,2.63,1.01c1,0,2.61-0.77,2.61-2.61 C23,15.54,22.88,15.51,20.5,10.94z M3.88,16.93c-0.53,0.26-1.09-0.3-0.82-0.83l1.41-2.72l1.08,2.71L3.88,16.93z M7.68,15.99 l-2.4-5.98C5.25,9.78,5.37,9.56,5.59,9.47l2.01-0.8c0.31-0.12,0.65,0.08,0.68,0.42l0.62,6.9H7.68z M13.09,15.99h-2.17l-0.77-8.45 c-0.03-0.31,0.23-0.54,0.5-0.54h2.71c0.27,0,0.53,0.23,0.5,0.54L13.09,15.99z M16.32,15.99h-1.23l0.62-6.9 c0.03-0.33,0.37-0.54,0.68-0.42l2.01,0.8c0.22,0.09,0.34,0.31,0.31,0.54L16.32,15.99z M20.12,16.93l-1.68-0.84l1.08-2.7l1.41,2.71 C21.21,16.63,20.64,17.19,20.12,16.93z&quot; /&gt; &lt;/g&gt; &lt;/g&gt; The .hbs file must start exactly with the content &quot;&lt;g&gt;&quot; or &quot;&lt;g &quot; for correct compilation. The HBS compiler will generate a template that you can then import and register with the icon regsitry. bundle.esm.js import { registerIcon } from &quot;@ui5/webcomponents-base/dist/asset-registries/Icons.js&quot;; import iconBakeryDiningTemplate from &quot;./dist/generated/templates/BakeryDiningTemplate.lit.js&quot;; // create the icon data for registration const iconBakeryDining = { customTemplate: iconBakeryDiningTemplate, viewBox: &quot;0 0 24 24&quot;, collection: &quot;custom&quot;, } // register the icon registerIcon(&quot;bakery-dining&quot;, iconBakeryDining); The icon data object should fill the customTemplate property with a template that will be included inside the SVG of the &lt;ui5-icon&gt;. In that case, a path won’t be rendered. You can also specify a custom viewBox size, as the default one is 0 0 512 512. Finally, the icon can be used anywhere. &lt;ui5-icon name=&quot;custom/backery-dining&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-avatar icon=&quot;custom/backery-dining&quot; size=&quot;XS&quot;&gt;&lt;/ui5-avatar&gt; Tip: for multi-colored icons, you can specify multiple SVG elements and put a fill/color attribute with a specific value on each element. &lt;g fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot;&gt; &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; d=&quot;M11 3.055A9.001 9.001 0 1020.945 13H11V3.055z&quot; fill=&quot;aqua&quot;/&gt; &lt;path stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; d=&quot;M20.488 9H15V3.512A9.025 9.025 0 0120.488 9z&quot; /&gt; &lt;/g&gt; Next: Using Additional Assets",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/getting-started/using-icons/",
    "relUrl": "/playground/getting-started/using-icons/"
  },
  "20": {
    "id": "20",
    "title": "Other framework level APIs",
    "content": "Using the Framework This section mentions framework-level APIs that do not have a dedicated section. Most of the time you’ll be using the UI5 Web Components’ APIs to do your job. However, there are also certain framework-level APIs you should be aware of. Executing Code on Boot import { attachBoot } from &quot;@ui5/webcomponents-base/dist/Boot.js&quot;; The attachBoot function allows you to execute custom code when the framework has finished booting. Example: attachBoot(() =&gt; { console.log(&quot;Framework booted&quot;); }); Next: UI5 Web Components i18n for Apps",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/advanced/other-framework-level-apis/",
    "relUrl": "/playground/advanced/other-framework-level-apis/"
  },
  "21": {
    "id": "21",
    "title": "Testing UI5 Web Components",
    "content": "Testing UI5 Web Components Note: All examples in this tutorial are taken from the demo UI5 Web Component (ui5-demo), generated by the package initialization script. For more information on creating a new package with a demo Web Component inside, click here. 1. Prerequisites The test framework of choice for UI5 Web Components is WebdriverIO or WDIO for short. It has a straightforward API - https://webdriver.io/docs/api.html, and has excellent support for Web Components. The browser of choice for test execution is Google Chrome, respectively the used WebDriver is ChromeDriver. Managing ChromeDriver ChromeDriver is a peer dependency of @ui5/webcomponents-tools. Therefore, you are expected to install and upgrade it manually. You can install it with npm: npm i --save-dev chromedriver or with yarn: yarn add -D chromedriver Google Chrome and ChromeDriver need to be the same version to work together. Whenever you update Google Chrome on your system (or it updates automatically, if allowed), you are expected to also update ChromeDriver to the respective version. 2. Running the tests 2.1 Test configuration The configuration for WDIO can be found in the config/ directory under wdio.conf.js. As explained here in the section about the config/ directory, you can customize, or even completely replace the default configuration. However, before doing so, please note the following two benefits of working with the default configuration, provided by UI5 Web Components: Hooks, synchronizing the execution of all relevant WDIO commands (e.g. click, url, $, $$) with the rendering of the framework to ensure consistency when reading or changing the state of the components. Additional API methods: setProperty, setAttribute, removeAttribute, hasClass. So our recommendation would be to modify it, if necessary, but not completely replace it. 2.2 Running all tests npm run test or yarn test This will launch a static server and execute all tests found in the test/specs/ directory of your package. Note: Before running the tests for the first time, make sure you’ve built the project, or at least the dev server is running (build or start commands). 2.3 Running a single test spec npm run test test/specs/Demo.spec.js or yarn test test/specs/Demo.spec.js Note: Executing a single test spec only makes sense for debugging purposes, therefore no test server is launched for it. Make sure you’re running the start command while running single test specs, as it provides a server and the ability to change files, and test the changes on the fly. 3. Writing tests The simplest test would look something like this: describe(&quot;ui5-demo rendering&quot;, async () =&gt; { await browser.url(&quot;test/pages/index.html&quot;); it(&quot;tests if web component is correctly rendered&quot;, async () =&gt; { const innerContent = await browser.$(&quot;#myFirstComponent&quot;).shadow$(&quot;div&quot;); assert.ok(innerContent, &quot;content rendered&quot;); }); }); Key points: Load the test page with the browser.url command. You can do this once for each test suite or for each individual test. You can access the Web Components with $ or $$. You can access the shadow roots with shadow$ or shadow$$. Simulate mouse interaction with the Web Components by calling the click command on the Web Component itself or certain parts of its shadow root. Simulate keyboard with the keys command. You can read the DOM with commands such as getHTML, getProperty, getAttribute, etc. You can modify the DOM with commands such as setProperty, setAttribute etc. For WDIO capabilities, see: Official API: https://webdriver.io/docs/api.html. Additional commands provided in our standard WDIO configuration: setProperty, setAttribute, removeAttribute, hasClass. Note: The standard WDIO configuration we provide automatically synchronizes all test commands’ execution with the framework rendering cycle. Therefore, in the example above, the shadow$ command will internally wait for all rendering to be over before being executed. The same holds true for commands that modify the DOM such as setAttribute or click. 4. Debugging tests Debugging with WDIO is really simple. Just follow these 3 steps: Change the WDIO configuration file config/wdio.conf.js to disable headless mode for Google Chrome as follows: From: module.exports = require(&quot;@ui5/webcomponents-tools/components-package/wdio.js&quot;); to: const result = require(&quot;@ui5/webcomponents-tools/components-package/wdio.js&quot;); result.config.capabilities[0][&quot;goog:chromeOptions&quot;].args = [&#39;--disable-gpu&#39;]; // From: [&#39;--disable-gpu&#39;, &#39;--headless&#39;] module.exports = result; If you happen to debug often, it’s recommended to keep the file in this format and just comment out the middle line when you’re done debugging. Set a breakpoint with browser.debug somewhere in your test: it(&quot;tests if web component is correctly rendered&quot;, async () =&gt; { const innerContent = await browser.$(&quot;#myFirstComponent&quot;).shadow$(&quot;div&quot;); await browser.debug(); assert.ok(innerContent, &quot;content rendered&quot;); }); For more on debug, see https://webdriver.io/docs/api/browser/debug.html. Run the single test spec and wait for the browser to open and pause on your breakpoint: Run the dev server, if you haven’t already: yarn start or npm run start. Run the single test spec: yarn test test/specs/Demo.spec.js or npm run test test/specs/Demo.spec.js. Google Chrome will then open in a new window, controlled by WDIO via the ChromeDriver, and your test will pause on your breakpoint of choice. Proceed to debug normally. 5. Best practices for writing tests Do not overuse assert.ok When an assert.ok fails, the error you get is “Expected something to be true, but it was false”. This is fine when you’re passing a Boolean, but not ok when there is an expression inside assert.ok and you’d like to know which part of the expression is not as expected. For example, when assert.ok(a === b, &quot;They match&quot;) fails, the error just says that an expression that was expected to be true was false. However, if you use assert.strictEqual(a, b, &quot;They match&quot;), and it fails, the error will say that a was expected to be a certain value, but it was another value, which makes it much easier to debug. Prefer one of the following, when applicable: assert.notOk(a) instead of assert.ok(!a) assert.strictEqual(a, b) instead of assert.ok(a === b) assert.isBelow(a, b) instead of assert.ok(a &lt; b) assert.isAbove(a, b) instead of assert.ok(a &gt; b) assert.exists / assert.notExists when checking for null or undefined Do not overuse assert.strictEqual Use: assert.ok instead of assert.strictEqual(a, true) assert.notOk instead of assert.strictEqual(a, false) Use isExisting to check DOM Preferred: assert.ok(await browser.$(&lt;SELECTOR&gt;).isExisting()) instead of: assert.ok((await browser.$$(&lt;SELECTOR&gt;)).length) Do not use browser.executeAsync for properties We have custom commands such as getProperty and setProperty to fill in gaps in the WDIO standard command set. Use them instead of manually setting properties with executeAsync. Use assert.include instead of string functions Use: assert.include(text, EXPECTED_TEXT, &quot;Text found&quot;) assert.notInclude(text, NOT_EXPECTED_TEXT, &quot;Text not found&quot;) instead of: assert.ok(text.indexOf(EXPECTED_TEXT) &gt; -1, &quot;Text found&quot;) assert.ok(text.includes(EXPECTED_TEXT), &quot;Text found&quot;) assert.notOk(text.includes(NOT_EXPECTED_TEXT), &quot;Text not found&quot;) Extract variables before asserting Avoid complex expressions inside asserts by extracting parts of them to variables and only asserting the variables. 6. Using the synchronous syntax for writing texts WebdriverIO still supports (although now deprecated) the synchronous syntax for writing tests. Click here for more information on “sync vs async”. UI5 Web Components versions up to, including, 1.0.0-rc.15, used to recommend the synchronous syntax, as it is easier to use. If you have already written tests for your custom UI5 Web Components using the synchronous syntax, and you update to a later version than 1.0.0-rc.15, your tests will no longer run. You have 2 options: Rewrite all tests to use the asynchronous syntax. Click the link above to see some examples. This is the recommended approach, because the synchronous syntax will no longer work with future nodejs versions. For the time being, adapt your WebdriverIO configuration to continue supporting the synchronous syntax. 5.1 Supporting the synchronous syntax for writing tests Change your config/wdio.conf.js file’s content from: module.exports = require(&quot;@ui5/webcomponents-tools/components-package/wdio.js&quot;); to: module.exports = require(&quot;@ui5/webcomponents-tools/components-package/wdio.sync.js&quot;); This will give you the exact same WebdriverIO configuration, but with synchronous custom commands (such as getProperty, setProperty, hasClass, etc.). Manually install @wdio/sync You can install it with npm: npm i --save-dev @wdio/sync or with yarn: yarn add -D @wdio/sync Just installing the package (with no extra configuration) is enough to let WebdriverIO run the synchronous tests. Next: Deep dive and best practices",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/development/testing-ui5-web-components/",
    "relUrl": "/playground/development/testing-ui5-web-components/"
  },
  "22": {
    "id": "22",
    "title": "Using assets",
    "content": "Using Additional Assets Most UI5 Web Components packages offer additional assets. This section explains what these are and how to use them. What Are Additional Assets These are themes, text translations, locale data etc. that are not shipped as part of the components/icons themselves, but can be loaded separately, if needed. These assets are important for accessibility and globalization. Importing Additional Assets Import the dist/Assets.js file of the respective NPM package: import &quot;@ui5/&lt;PACKAGE-NAME&gt;/dist/Assets.js Project NPM Package Assets Module Notes main @ui5/webcomponents i18n, themes @ui5/webcomponents/dist/Assets.js Theming parameters and translations for the components Automatically imports also: @ui5/webcomponents-localization/dist/Assets.js and @ui5/webcomponents-theming/dist/Assets.js fiori @ui5/webcomponents-fiori i18n, themes @ui5/webcomponents-fiori/dist/Assets.js Theming parameters and translations for the components Automatically imports also: @ui5/webcomponents/dist/Assets.js icons @ui5/webcomponents-icons i18n @ui5/webcomponents-icons/dist/Assets.js Translations for the tooltips / “aria labels” of several icons icons-tnt @ui5/webcomponents-icons-tnt N/A N/A   icons-business-suite @ui5/webcomponents-icons-business-suite N/A N/A   localization * @ui5/webcomponents-localization CLDR @ui5/webcomponents-localization/dist/Assets.js Locale data, needed for date/time/currency-related components You don’t need to import the assets of this package directly. theming * @ui5/webcomponents-theming themes @ui5/webcomponents-theming/dist/Assets.js Additional themes’ base parameters You don’t need to import the assets of this package directly. * Only listed for completeness, included automatically by other packages. For example: import &quot;@ui5/webcomponents/dist/Assets.js&quot;; and use: &lt;ui5-date-picker&gt;&lt;/ui5-date-picker&gt; with another language and another theme: import { setLanguage } from &quot;@ui5/webcomponents-base/dist/config/Language.js&quot;; import { setTheme } from &quot;@ui5/webcomponents-base/dist/config/Theme.js&quot;; setLanguage(&quot;es&quot;); setTheme(&quot;sap_fiori_3_hcb&quot;); The ui5-date-picker component will have all translatable texts in Spanish, and the Spanish format settings (e.g. date format) will be used, and will be rendered with the sap_fiori_3_hcb accessibility theme instead of the default theme. Technical Aspects Additional assets are .json files with the respective data. When you import the dist/Assets.js file of a given package, assets are only registered, but not yet fetched. When they are needed, they are loaded on the fly with dymamic imports, and then used. Next: Using Additional Features",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/getting-started/using-assets/",
    "relUrl": "/playground/getting-started/using-assets/"
  },
  "23": {
    "id": "23",
    "title": "Deep dive and best practices",
    "content": "Deep dive and best practices This tutorial will cover some finer details and best practices when designing and developing UI5 Web Components. Before proceeding, please make sure you’ve read the other articles from this section, especially: Developing Custom UI5 Web Components Understanding UI5 Web Components Metadata Understanding the Handlebars (.hbs) templates as this article will expand on many of the notions, introduced there. Metadata deep dive Tag Properties Slots Events Wrapping up metadata Understanding rendering What is rendering? Physical and logical components What is invalidation? Lifecycle hooks constructor onBeforeRendering onAfterRendering onEnterDOM and onExitDOM The static area Preface What is the static area and why is it needed? Using the static area? Accessing the static area item Metadata deep dive The static get metadata() method defines the public API of your component. Among other things, here you define: the tag name what properties/attributes (and of what type) your component supports what slots your component supports what events your component fires Tag The tag name must include a - as required for any custom element: metadata: { tag: &quot;my-component&quot; } and then the usage is: &lt;my-component&gt;&lt;/my-component&gt; The tag, as defined in metadata, is sometimes also referred to as the “pure tag”, meaning it is not suffixed. See Scoping for more on using a suffix with tag names. Important: the pure tag name of every UI5 Web Component is always set as an attribute to the component too. For example, when you create a ui5-button: &lt;ui5-button id=&quot;b1&quot; class=&quot;button1&quot; design=&quot;Emphasized&quot;&gt;&lt;/ui5-button&gt; the framework will create an empty attribute with the name ui5-button too, so the actual DOM would look like this: &lt;ui5-button id=&quot;b1&quot; class=&quot;button1&quot; design=&quot;Emphasized&quot; ui5-button&gt;&lt;/ui5-button&gt; Even if a suffix for tag names is configured (as described in Scoping), the attribute with the pure tag name will be the same. For example, if the configured suffix is -demo and all components are used with this suffix: &lt;ui5-button-demo id=&quot;b1&quot; class=&quot;button1&quot; design=&quot;Emphasized&quot; ui5-button&gt;&lt;/ui5-button-demo&gt; the attribute will still be the same (ui5-button as opposed to the tag name of ui5-button-demo). Therefore, the best practice when developing UI5 Web Components is to write CSS selectors for the shadow roots using attribute selectors, instead of tag selectors. For example, if the Demo.hbs file looks like this: &lt;div class=&quot;my-component&quot;&gt; &lt;ui5-button id=&quot;openBtn&quot;&gt;Open&lt;/ui5-button&gt; &lt;div&gt; &lt;slot&gt;&lt;/slot&gt; &lt;/div&gt; &lt;ui5-list&gt;&lt;/ui5-list&gt; &lt;/div&gt; you should not write selectors by tag name for other components in the Demo.css file: ui5-button { width: 50px; } because, as stated above, the tag name could be suffixed and is not guaranteed to always be the same as the pure tag name. Instead, use the attribute selector: [ui5-button] { width: 50px; } or another type of selector (for example by ID): #openBtn { width: 50px; } Properties Properties are managed state The framework will create a getter/setter pair on your component’s prototype for each property, defined in the metadata. For example, after setting this metadata configuration: metadata: { properties: { text: { type: String } } } you can use the text getter/setter on this component’s instances: let t = myComponent.text; myComponent.text = &quot;New text&quot;; Whenever text is read or set, the framework-defined getter/setter will be called and thus the framework will be in control of the property. Properties vs attributes The properties section defines both properties and attributes for your component. By default, for each property (camelCase name) an attribute with the same name but in kebab-case is supported. Properties of type Object have no attribute counterparts. If you wish to not have an attribute for a given property regardless of type, you can configure it with noAttribute: true. Public vs private properties The framework does not distinguish between public and private properties. You can treat some properties as private in a sense that you can document them as such and not advertise them to users. The usual convention is that private properties start with an _, but this is not mandatory. In the end, all properties defined in the metadata, public or private, are component state, therefore cause the component to be invalidated and subsequently re-rendered, when changed. Property types and default values The most common types of properties are String, Boolean, Object, Integer and Float. The last two are custom types, provided by the framework, that you must import (they do not exist in the browser). Most property types can have a defaultValue set. Boolean is always false by default and Object is always {} by default, so defaultValue is not allowed for these types. You can also create custom property types by extending @ui5/webcomponents-base/dist/DataType.js and implementing its methods for your type. Properties with multiple: true If you configure a property with multiple: true, it will be an array of elements of the given type, and will be treated by the framework exactly as a property of type Object would be (as arrays are technically objects). For example, it will not have an attribute counterpart. Example: metadata: { properties: { numbers: { type: Integer, multiple: true } } } myComponent.numbers = [1, 2, 3]; Properties with multiple: true are rarely used in practice, as they are not DOM-friendly (cannot be set in a declarative way, only with Javascript). Their most common use case is as private properties for communication between related components. For example, the higher-order “date picker” component communicates with its “day picker”, “month picker”, and “year picker” parts by means of private multiple properties (to pass arrays of selected dates). If you need to use a property with multiple: true as part of your component’s public API, that is fine, but bear in mind the limitations (no declarative support as with all Objects, so no attribute for this property). The alternative would be to use abstract items, for example: &lt;my-component&gt; &lt;my-item slot=&quot;numbers&quot; value=&quot;1&quot;&gt;&lt;/my-item&gt; &lt;my-item slot=&quot;numbers&quot; value=&quot;2&quot;&gt;&lt;/my-item&gt; &lt;my-item slot=&quot;numbers&quot; value=&quot;3&quot;&gt;&lt;/my-item&gt; &lt;/my-component&gt; Here instead of having a numbers property of type Integer, configured with multiple: true, we have a numbers slot, and inside this slot we pass abstract items with a value property of type Integer. This is now completely declarative, and is preferable unless the number of items is very large (in which case the solution with the multiple property would likely be better). Examples Example of defining properties: import Integer from &quot;@ui5/webcomponents-base/dist/types/Integer.js&quot;; import Float from &quot;@ui5/webcomponents-base/dist/types/Float.js&quot;; ... metadata: { tag: &quot;my-component&quot;, properties: { text: { type: String, defaultValue: &quot;Hello&quot; }, width: { type: Integer, defaultValue: 1024, noAttribute: true }, scale: { type: Float, defaultValue: 0.5 } data: { type: Object }, /** * @private */ _isPhone: { type: Boolean } } } Here text, width, scale and data are public properties, and _isPhone private, but only by convention. If the user (or the component internally) changes any of these properties, the component will be invalidated. Best practices for using properties The best practice is to never change public properties from within the component (they are owned by the application) unless the property changes due to user interaction (f.e. the user typed in an input - so you change the value property; or the user clicked a checkbox - and you flip the checked property). It is also a best practice to always fire an event if you change a public property due to user interaction, to let the application know and synchronize its own state. As for private properties, the best practice is to only change them internally and never let the application know about their existence. Both public and private properties are great ways to create CSS selectors for your component with the :host() selector. The :host() selector targets the custom element itself, and can be combined with other selectors: :host { height: 5rem; width: 5rem; } :host([size=&quot;XS&quot;]) { height: 2rem; width: 2rem; } &lt;my-comopnent size=&quot;XS&quot;&gt;&lt;/my-comopnent&gt; &lt;!-- :host() targets my-component --&gt; Here for example, if the size property (respectively the attribute with the same name) is set to XS, the component’s dimensions will be changed from 5rem to 2rem. Using attribute selectors is the best practice as you don’t have to set CSS classes on your component - you can write CSS selectors with :host() by attribute. Metadata properties vs normal JS properties It is important not to confuse metadata-defined properties with regular Javascript properties. You can create any number of properties on your component’s instance, f.e.: constructor() { super(); this._isMobile = false; } However, only metadata-defined properties are managed by the framework: cause invalidation and are converted to/from attributes. Feel free to create as many regular JS properties for the purpose of your component’s functionality as you need, but bear in mind that they will not be managed by the framework. Slots While properties define the objective characteristics of a component, slots define the way a component can nest other HTML elements. You don’t need to define slots for every component - some components are not meant to hold any other HTML elements, and are fully operated by properties and events alone. You implement slots by configuring them with the slots metadata object, and rendering respective &lt;slot&gt; elements in your .hbs template. You can read more about the slot HTML Element here. Default slot and named slots For named slots you set the name you wish to use for the slot as the key in the slots metadata object. Example: slots: { items: { type: HTMLElement }, footer: { type: HTMLElement } } and then in your .hbs template you render respectively &lt;slot name=&quot;items&quot;&gt;&lt;/slot&gt; and &lt;slot name=&quot;footer&quot;&gt;&lt;/slot&gt;. The default slot on the other hand must be defined with the default key in the slots metadata object (also note the quotes around the default key as it is a reserved word): slots: { &quot;default&quot;: { type: Node, } } and then in the .hbs template you render &lt;slot&gt;&lt;/slot&gt;. Slot types Unlike properties, slots can be of only two types: HTMLElement and Node. HTMLElement means the slot accepts only other HTML Elements. You can use this type for any slot (default or named). Node means that the slot can accept both HTML Elements and Text nodes, and is allowed only for the default slot. The reason for this restriction is that text nodes in HTML cannot have attributes, hence they cannot be slotted as HTML Elements can. As a result, text can only go the default slot, hence Node is applicable only for default slots. Are slots managed state? Unlike metadata properties, which are always managed state (see the previous section), slots are not managed by the framework by default. Changes to slots do not trigger lifecycle events such as invalidation. However, you can change this by setting managedSlots: true in the metadata object. This setting is global and affects all slots for your component. managedSlots: true, slots: { items: { type: HTMLElement }, footer: { type: HTMLElement } } Now, if children are added/removed/rearranged in any of the above slots, the component will be invalidated. Slot accessors Additionally, when you set managedSlots: true, you get a read-only accessor for the children in that slot. Taking the example from above: managedSlots: true, slots: { items: { type: HTMLElement }, footer: { type: HTMLElement } } you will get the following accessors on your component’s instances: const childrenInItems = this.items; // array of all children in the items slot const childrenInFooter = this.footer; // array of all children in the footer slot Finally, it’s possible to define the property name for the accessor of the default slot (as using the default key is not convenient in Javascript). You can do this with the propertyName setting: managedSlots: true, slots: { &quot;default&quot;: { type: Node, propertyName: &quot;content&quot; }, items: { type: HTMLElement }, footer: { type: HTMLElement } } const childrenInDefaultSlot = this.content; // array of all children in the default slot const childrenInItems = this.items; // array of all children in the items slot const childrenInFooter = this.footer; // array of all children in the footer slot These getters are helpful if your code needs to analyze/communicate with the children in a certain slot. They are also often used in the .hbs template where you need for example to loop over the items of a component. Individual slots All children, assigned to a certain slot, are rendered by the browser next to each other in the exact order in which they were passed to the component. Sometimes, however, each child must be placed separately in the shadow root, potentially wrapped in other HTML elements, to satisfy the UX design of the component. The individualSlots slot metadata configuration setting (see Understanding UI5 Web Components Metadata) allows you to have a separate physical slot for each child belonging to a certain slot. Example: { managedSlots: true, slots: { &quot;default&quot;: { type: HTMLElement, propertyName: &quot;items&quot;, individualSlots: true } } } The framework will then create an _individualSlot property on each child, belonging to the slot. Just render these slots in the .hbs template to have all children belonging to the slot displayed by the browser separately in your HTML markup of choice. For more information on individual slots and how to render them in the .hbs template click here. The invalidateOnChildChange setting There is one last configuration setting for slots - invalidateOnChildChange. When set to true, whenever a child in a certain slot is invalidated, your component will be invalidated as well. managedSlots: true, slots: { &quot;default&quot;: { type: HTMLElement, propertyName: &quot;items&quot;, invalidateOnChildChange: true }, } Now, the component will be invalidated not only when children are added/removed/rearranged, but also when children themselves change. This is very handy for components working with abstract items. Read more about abstract items and invalidateOnChildChange in the Invalidation section later in this article. Events Most components fire events to notify the application of user interaction. You can list the events fired by your component in the events metadata object, but this is optional and mostly done for documentation purposes. Any event that you dispatch from your component will reach the application anyway. Here is an example how to fire an event from your component: Declare the event in your metadata (optional, but highly recommended for documentation purposes and clarity): events: { toggle: {} } In the .hbs template bind an event listener to some part of your component’s HTML to be able to take action on user interaction: &lt;div class=&quot;my-panel&quot;&gt; &lt;button class=&quot;my-panel-toggle&quot; @click=&quot;&quot;&gt;Toggle&lt;/button&gt; &lt;div class=&quot;my-panel-body&quot;&gt; &lt;slot&gt;&lt;/slot&gt; &lt;/div&gt; &lt;/div&gt; In this example we have a simplified “panel” component consisting of a toggle button and a slot for the panel content. We bind the click event of the &lt;button&gt; we’ll use for toggling our panel to the onPanelToggleClick method. For more on the .hbs template syntax and event listeners click here. Implement the event handler in your component: class MyPanel extends UI5Element { ... onPanelToggleClick(event) { this.togglePanel(); // do some work when the user clicks the button this.fireEvent(&quot;toggle&quot;); // fire the event } } The fireEvent method is provided by the base UI5Element.js class and is therefore available to all components. The best practice is to always use this method instead of simply calling the standard dispatchEvent function as fireEvent has framework-related enhanced functionality. That’s all it takes to manage an event’s lifecycle! Now your component’s users may listen for the toggle event: const panel = document.getElementsByTagName(&quot;my-panel&quot;)[0]; panel.addEventListener(&quot;toggle&quot;, () =&gt; {}); Working with event parameters The above example demonstrated an event with no parameters. However, you can send arbitrary data to the app when firing an event. Here’s how: Declare the event in your metadata and describe its parameters (again, optional, but good for consistency and documentation purposes): events: { selectionChange: { detail: { item: { type: HTMLElement }, oldItem: { type: HTMLElement } } } } Here we define a selectionChange event which gives the app two pieces of information: item (the newly selected item) and oldItem (the previously selected item). Respectively they will be accessible by the app with event.detail.item and event.detail.oldItem in the event handler, exactly like it works with native browser events. Pass the data when firing the event: class MyItemsList extends UI5Element { ... onSelectionChange(event) { ... this.fireEvent(&quot;selectionChange&quot;, { item: item, oldItem: oldItem, }); } } To pass parameters, simply provide a second parameter of type Object to fireEvent with keys for all event parameters. The usage of the event by the app will be exactly like in the case of a native HTML element: const list = document.getElementsByTagName(&quot;my-items-list&quot;)[0]; list.addEventListener(&quot;selectionChange&quot;, (event) =&gt; { console.log(event.detail.item); console.log(event.detail.oldItem); }); Events and noConflict mode By default, when using the fireEvent method, as demonstrated above, actually not just one, but two custom events are fired: one with the name, provided as the first argument to fireEvent, and one more with the same name, but prefixed by ui5-. For example, the following code: fireEvent(&quot;toggle&quot;); will dispatch two custom events by default: toggle ui5-toggle However, if you set the noConflict configuration setting to true, only the prefixed event will be dispatched. So, when noConflict: true is configured, the same code: fireEvent(&quot;toggle&quot;); would result in just: ui5-toggle Therefore, the best practice when binding to events, fired by other UI5 Web Components in your .hbs template, is to always use the prefixed (ui5-) event. Example: &lt;div class=&quot;my-component&quot;&gt; &lt;button @click=&quot;&quot;&gt;Click me&lt;/button&gt; &lt;ui5-button @ui5-click=&quot;&quot;&gt;Click me&lt;/ui5-button&gt; &lt;input @change=&quot;&quot; /&gt; &lt;ui5-input @ui5-change=&quot;&quot;&gt;&lt;/ui5-input&gt; &lt;ui5-list @ui5-item-click=&quot;&quot;&gt;&lt;/ui5-list&gt; &lt;/div&gt; Please note the following: For native HTML elements (input, button) we bind to their respective events (change, click) normally. For other UI5 Web Components (ui5-button, ui5-input, ui5-list), rendered by our component, we bind to the ui5- events as these are guaranteed to be dispatched even when noConflict is configured to true. If we used the non-prefixed versions: &lt;div class=&quot;my-component&quot;&gt; &lt;button @click=&quot;&quot;&gt;Click me&lt;/button&gt; &lt;ui5-button @click=&quot;&quot;&gt;Click me&lt;/ui5-button&gt; &lt;input @change=&quot;&quot; /&gt; &lt;ui5-input @change=&quot;&quot;&gt;&lt;/ui5-input&gt; &lt;ui5-list @item-click=&quot;&quot;&gt;&lt;/ui5-list&gt; &lt;/div&gt; this would work well only with the default configuration (where noConflict is false and both events are fired), but our code would “break” the moment an app sets noConflict: true since that would suppress UI5 Web Components from firing the non-prefixed versions and our event handlers (onUI5ButtonClick, onUI5InputChange, etc.) would never be executed. Wrapping up metadata Metadata determines most of your component’s API - describe its tag name, properties, slots and events there. For example, consider a component with the following metadata: { tag: &quot;my-demo-component&quot;, properties: { text: { type: String, defaultValue: &quot;Hello&quot; }, selected: { type: Boolean, noAttribute: true } }, managedSlots: true, slots: { &quot;default&quot;: { type: Node, propertyName: &quot;items&quot;, invalidateOnChildChange: true }, &quot;icon&quot;: { type: HTMLElement } }, events: { change: { detail: { newText: {type: String} } } } } This metadata conveys the following: This component will have the following getters/setters, created for it by the framework: this.text (getter/setter, due to the text property) with default value of “Hello” this.selected (getter/setter, due to the selected property) with default value of false (all Booleans are false by default in HTML and defaultValue cannot be configured for them) this.items (getter only, due to having managedSlots: true and the propertyName of the default slot being items) - an array of all Text Nodes and HTML Elements in the default slot this.icon (getter only, due to having managedSlots: true and the icon slot) - an array of all HTML Elements in the icon slot The component will have only 1 attribute: text due to the text property (the other property has noAttribute: true set) When the text property changes, the text attribute will also be reflected and vice-versa. The component fires 1 event: change with one string parameter: newText This component will be invalidated whenever any of its properties changes, any of its slots has new/removed/rearranged children, and additionally when any UI5 Web Component in the default slot is invalidated. In this component’s .hbs you are expected to render the two slots and to bind an event listener for the event: &lt;div class=&quot;my-demo-component&quot;&gt; &lt;header&gt; &lt;slot name=&quot;icon&quot;&gt;&lt;/slot&gt; &lt;input class=&quot;demo-input&quot; value=&quot;&quot; @change=&quot;&quot;&gt; &lt;/header&gt; &lt;div&gt; &lt;slot&gt;&lt;/slot&gt; &lt;/div&gt; &lt;/div&gt; and in the component’s class you are expected to fire the event, for example: class MyDemoComponent extends HTMLElement { ... onInputChange(event) { const newText = this.shadowRoot.querySelector(&quot;.demo-input&quot;).value; this.text = newText; event.stopPropagation(); this.fireEvent(&quot;change&quot;, { newText }); } } Whenever the user stops typing in the &lt;input&gt; and its change event is fired, our component’s onInputChange event handler will be executed. There we get the new value of the input, update the text metadata property to reflect its new state, stop the input’s native change event from propagating since we’ll be firing our custom event with the same name (and we don’t want the user to get 2 events with the same name), and finally we fire our metadata event (change) with the newText parameter. Understanding rendering What is rendering? In the context of UI5 Web Components the notion of rendering means creating the content of a shadow root (building the shadow DOM). Physical and logical components Each component that provides a static get template() method will be rendered (will have its shadow DOM built) initially and every time it gets invalidated. Example: import InputTemplate from &quot;./generated/templates/InputTemplate.lit.js&quot;; // this is the compiled Input.hbs template // This component will have shadow DOM since it provides a template static get template() { return InputTemplate; } Components that do not provide a static get template() method are considered logical or marker elements only. These components are never rendered (do not have a shadow root at all) and their only purpose is to serve as items for higher-order components. The classical example of a logical component is a select option. Example: &lt;ui5-select&gt; &lt;ui5-option&gt;Cozy&lt;/ui5-option&gt; &lt;ui5-option selected&gt;Compact&lt;/ui5-option&gt; &lt;ui5-option &gt;Condensed&lt;/ui5-option&gt; &lt;/ui5-select&gt; The ui5-option component does not provide a template, and is therefore never rendered. However, the ui5-select component, which is a physical component that has a template, renders HTML corresponding to each of its children (ui5-option instances) as part of its own shadow DOM. What is invalidation? Invalidation means scheduling an already rendered component for asynchronous re-rendering (in the next animation frame). If an already invalidated component gets changed again, before having been re-rendered, this will have no downside - it’s in the queue of components to be re-rendered anyway. Important: when a component is re-rendered, only the parts of its shadow DOM, dependent on the changed properties/slots are changed, which makes most updates very fast. A component becomes invalidated whenever: a metadata-defined property changes (not regular properties that f.e. you define in the constructor) children are added/removed/rearranged in any slot and the component has managedSlots: true set in the metadata object a slotted child in a slot configured with invalidateOnChildChange: true is invalidated. Changes to properties always cause an invalidation. No specific metadata configuration is needed. properties: { text: { type: String } } Whenever text changes, the component will be invalidated. Changes to slots do not cause an invalidation by default. Most components do not need to render differently based on whether they have any slotted children or not. The most common example for this are simple general-purpose containers (completely agnostic of their content). metadata: { slots: { &quot;default&quot;: { type: HTMLElement }, header: { type: HTMLElement }, footer: { type: HTMLElement } } } This component will not invalidate when children are added/removed from any of its slots. However, some components render differently based on whether they have children or not (e.g. show counters/other UX elements for the number of children, f.e. carousel; or have special styles when empty or have a child in a specific slot, f.e. button with an icon). If that is the case for the component you’re building, set managedSlots: true in your component’s metadata. Thus, your component will become invalidated whenever children are added, removed or swap places in any of its slots. managedSlots: true, slots: { &quot;default&quot;: { type: HTMLElement }, header: { type: HTMLElement }, footer: { type: HTMLElement } } Now that this component has managedSlots: true, changes to each slot will trigger an invalidation. Note that the managedSlots configuration is global (and not per slot). And finally, there are components that not only need to render differently based on the number/type of children they have, but they must also get invalidated whenever their children change. This holds true for all components that work with abstract items (such as select with options, combo box with combo box items) because these abstract items do not have a template (do not render themselves) and therefore rely on their parent to render some DOM for them in its own shadow root. So, when they get invalidated, they must also invalidate their parent. managedSlots: true, slots: { &quot;default&quot;: { type: HTMLElement, invalidateOnChildChange: true }, header: { type: HTMLElement }, footer: { type: HTMLElement } } Only changes to children in the “default” slot will trigger invalidation for this component. Note that invalidateOnChildChange is defined per slot (and not globally like managedSlots). Finally, invalidateOnChildChange allows for more fine-granular rules when exactly children can invalidate their parents - see Understanding UI5 Web Components Metadata. Lifecycle hooks Using the right lifecycle hook for the task is crucial to a well-designed and performant component. 1. constructor Use the constructor for one-time initialization tasks. What to do: initialize private variables bind functions to this (very common when using the ResizeHandler helper class) do one-time work when the first instance of a given component is created (f.e. instantiate a helper class or attach a special event listener to the window object) What not to do: anything rendering-related (use onBeforeRendering/onAfterRendering) anything related to the state (use onBeforeRendering) anything requiring DOM manipulation (the component isn’t attached to the DOM yet - use onAfterRendering or onEnterDOM/onExitDOM) Example: constructor() { super(); // initialize a variable for later use this._filteredItems = []; // bind a method once so that you can pass the same function to register/deregister-based helpers this._handleResizeBound = this._handleResize.bind(this); // do one-time work when the first instance of a component is created if (!isGlobalHandlerAttached) { document.addEventListener(&quot;mouseup&quot;, this._deactivate); isGlobalHandlerAttached = true; } // initialize a helper class for the instance this._itemNavigation = new ItemNavigation(this, { navigationMode: NavigationMode.Horizontal, getItemsCallback: () =&gt; this._getFocusableItems(), }); } 2. onBeforeRendering Use onBeforeRendering to prepare variables to be used in the .hbs template. What to do: prepare calculated (derived) state for use in the renderer What not to do: do not try to access the DOM (use onAfterRendering instead) Let’s take for example a component with the following metadata: { properties: { filter: { type: String } }, managedSlots: true, slots: { &quot;default&quot;: { type: HTMLElement, propertyName: &quot;items&quot;, individualSlots: true } } } This component has a filter property and a default slot that we want to call items (thus accessible with this.items). Let’s imagine we want to only show the items whose name property matches the value of our filter property - so we filter the items by name. constructor() { super(); this._filteredItems = []; } onBeforeRendering() { this._filteredItems = this.items.filter(item =&gt; item.name.includes(this.filter)); } In onBeforeRendering we prepare a _filteredItems array with some of the component’s children (only the ones that have the this.filter text as part of their name property) And finally, in the .hbs template we have for example: &lt;div class=&quot;my-filter-component&quot;&gt; &lt;div class=&quot;my-filtered-item&quot;&gt; &lt;slot name=&quot;&quot;&gt;&lt;/slot&gt; &lt;/div&gt; &lt;/div&gt; We loop over the _fiteredItems array that we prepared in onBeforeRendering and for each child we render a slot based on the child’s _individualSlot property, created automatically by the framework due to the default slot’s metadata configuration (individualSlots: true). The usage of this component would be for example: &lt;my-filter-component filter=&quot;John&quot;&gt; &lt;my-filter-item name=&quot;John Smith&quot;&gt;&lt;/my-filter-item&gt; &lt;my-filter-item name=&quot;Jane Doe&quot;&gt;&lt;/my-filter-item&gt; &lt;my-filter-item name=&quot;Jack Johnson&quot;&gt;&lt;/my-filter-item&gt; &lt;/my-filter-component&gt; The user would only see the first and third items as these are the only ones we rendered an individual slot for (the ones matching the filter value of “John”). In summary: onBeforeRendering is the best place to prepare all the variables you are going to need in the .hbs template. 3. onAfterRendering The onAfterRendering lifecycle hook allows you to access the DOM every time the component is rendered. You should avoid using this method whenever possible. It’s best to delegate all HTML manipulation to the framework: change the state of the component, the component will be invalidated, the template will be executed with the latest state, and DOM will be updated accordingly. It is an anti-pattern to manually change the DOM. In some cases, however, you must directly access the DOM since certain operations can only be performed imperatively (and not via the template): setting the focus; manually scrolling an element to a certain position; calling a public method on a DOM Element (for example, to close a popup); reading the sizes of DOM Elements; Example: &lt;div class=&quot;my-demo-component&quot;&gt; &lt;input id=&quot;first&quot;&gt; &lt;input id=&quot;second&quot;&gt; &lt;/div&gt; onAfterRendering() { this.shadowRoot.querySelector(&quot;#second&quot;).focus(); this._totalWidth = this.shadowRoot.querySelector(&quot;div.my-demo-component&quot;).offsetWidth; } 4. onEnterDOM and onExitDOM Unlike onBeforeRendering and onAfterRendering, which sound like parts of the same flow (but are not, and are actually used for completely independent tasks), onEnterDOM and onExitDOM should almost always be used together, therefore they are presented as a whole in this article. onEnterDOM is executed during the web component’s standard connectedCallback method’s execution onExitDOM is executed during the web component’s standard disconnectedCallback method’s execution If you have prior experience with web component development, you could think of onEnterDOM as connectedCallback and of onExitDOM as disconnectedCallback. Note that these hooks are completely independent of the component’s rendering lifecycle, and are solely related to its insertion and removal from DOM. Normally, when a web component is created, for example: const b = document.createElement(&quot;ui5-button&quot;); it is already fully operational, although it isn’t in DOM yet. Therefore, you should use onEnterDOM and onExitDOM only for functionality, related to the component being in the DOM tree at all (and not to rendering, stying or anything related to the shadow root). Common use cases are: registering/de-registering a ResizeHandler working with Intersection observer any work you want to carry out only if the component is in the DOM; Probably the best example of these hooks is the usage of the ResizeHandler helper class. The component has a private _width property, defined in its metadata: properties: { /** * @private */ _width: { type: Integer } } and the following code in its class: import ResizeHandler from &quot;@ui5/webcomponents-base/dist/delegate/ResizeHandler.js&quot;; import Integer from &quot;@ui5/webcomponents-base/dist/types/Integer.js&quot;; class MyComponent extends UI5Element { constructor() { super(); this._fnOnResize = this._onResize.bind(this); } onEnterDOM() { ResizeHandler.register(this, this._fnOnResize); } onExitDOM() { ResizeHandler.deregister(this, this._fnOnResize); } _onResize() { this._width = this.offsetWidth; } get styles() { return { valueStateMsgPopover: { &quot;max-width&quot;: `${this._width}px`, }, }; } } In the constructor we bind the _onResize method to the component’s instance to get a function with the correct context, and then in onEnterDOM and onExitDOM we register/deregister this function with the ResizeHandler helper class. Then, whenever the component resizes, the ResizeHandler will trigger the callback, the metadata _width property will be updated to a new value in _onResize, the component will be invalidated, and the template will be executed with the new value of _width, respectively styles. The static area Preface This section expands on the UI5 Web Components class structure, so if you haven’t, please check Developing Custom UI5 Web Components first. Normally, the whole HTML markup of a UI5 Web Component is found in one place - the shadow DOM of the custom element itself. Example: &lt;ui5-button id=&quot;button&quot;&gt;Click me&lt;/ui5-button&gt; All HTML, belonging to this ui5-button instance is in its own shadow DOM. Respectively, in the class where the button component is defined, we provide one template and one piece of CSS: import ButtonTemplate from &quot;./generated/templates/ButtonTemplate.lit.js&quot;; import buttonCss from &quot;./generated/themes/Button.css.js&quot;; class Button extends UI5Element { ... static get styles() { return buttonCss; } static get template() { return ButtonTemplate; } } These are respectively the template and CSS that are going to be used in the component’s shadow DOM. However, there are more complex components, whose HTML is split in two parts - the custom element’s shadow DOM (as is the case with the button), but also a so called static area part, holding all popups this component might open. This is the case with most components that have any kind of popup-related functionality (dropdowns, rich tooltips, popovers, dialogs). Prominent examples are ui5-select, ui5-combobox, ui5-textarea, ui5-date-picker. What is the static area and why is it needed? The static area is a special singleton custom element (ui5-static-area), placed automatically by the framework as the first child of the body. For each component, having a static area part, a ui5-static-area-item custom element is created inside the static area. &lt;body&gt; &lt;ui5-static-area&gt; &lt;!-- created automatically only once --&gt; &lt;ui5-static-area-item&gt;&lt;/ui5-static-area-item&gt; &lt;!-- created automatically for the ui5-select --&gt; &lt;ui5-static-area-item&gt;&lt;/ui5-static-area-item&gt; &lt;!-- created automatically for the ui5-date-picker --&gt; &lt;/ui5-static-area&gt; &lt;ui5-select&gt;&lt;/ui5-select&gt; &lt;!-- needs a static area part --&gt; &lt;ui5-date-picker&gt;&lt;/ui5-date-picker&gt; &lt;!-- needs a static area part --&gt; &lt;ui5-button&gt;&lt;/ui5-button&gt; &lt;!-- does not need a static area part --&gt; &lt;/body&gt; In this example 3 UI5 Web Components are used: ui5-select, ui5-date-picker, and ui5-button. Since two of them have static area parts, the framework has created a ui5-static-area (one for the whole page) and inside it a ui5-static-area-item for each component with a static area part. Thus, the HTML, defining the ui5-select and ui5-date-picker components is split in two parts of the HTML page: the shadow DOM of the custom element itself (ui5-select, ui5-date-picker) the shadow DOM of the static-area-item, created for the respective component. This is necessary because such a split is the only way to guarantee that a popup (dropdown, rich tooltip, popover, etc.) will always be positioned correctly on the HTML page, even if parts of the page have: transform: translate overflow: hidden z-index Since the ui5-statia-area is a top-level body child, it is guaranteed to be on top of everything else on the page with the correct CSS styles, regardless of the page structure and stacking context. If we did not use a static area, for example as in a component, defined like this: In the MySelect.js file: &lt;div class=&quot;my-select&quot;&gt; &lt;h1&gt;Click to open the dropdown:&lt;/h1&gt; &lt;button @click=&quot;&quot;&gt;Dropdown&lt;/button&gt; &lt;ui5-popover id=&quot;#popover&quot; ?open=&quot;&quot;&gt; &lt;ui5-list&gt; &lt;ui5-li&gt;&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;/ui5-popover&gt; &lt;/div&gt; In the MySelect.js file: class MySelect extends UI5Element { ... onOpenDropdownClick(event) { this.dropdownOpen = true; } } then when the user clicks the button, and the ui5-popover opens (due to its open property having been set to true), this popover might be partially or entirely “cut” or misplaced, depending on the position of the component on the page. Example 1: &lt;body&gt; &lt;my-select&gt;&lt;/my-select&gt; &lt;/body&gt; Here the my-select component would work just fine as it is the only component on the page and no other components create a stacking context or overflow. However, consider example 2: &lt;body&gt; &lt;div style=&quot;height: 20px; overflow: hidden;&quot;&gt; &lt;my-select&gt;&lt;/my-select&gt; &lt;/div&gt; &lt;/body&gt; Now, when the popover opens, only a 20px-high strip of it would be visible due to the parent element’s CSS. This is an oversimplified example that could easily be fixed, but in real-world scenarios there are often parts of the HTML page we cannot influence which cause problems with popups. Using the static area Here is how we can rework the component from the example above to take advantage of the static area: Split the template and CSS of the component: Instead of having the dropdown (ui5-popover) in the main template: &lt;div class=&quot;my-select&quot;&gt; &lt;h1&gt;Click to open the dropdown:&lt;/h1&gt; &lt;button @click=&quot;&quot;&gt;Dropdown&lt;/button&gt; &lt;ui5-popover id=&quot;#popover&quot; ?open=&quot;&quot;&gt; &lt;ui5-list&gt; &lt;ui5-li&gt;&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;/ui5-popover&gt; &lt;/div&gt; split MySelect.hbs into MySelect.hbs and MySelectDropdown.hbs: The MySelect.hbs file: &lt;div class=&quot;my-select&quot;&gt; &lt;h1&gt;Click to open the dropdown:&lt;/h1&gt; &lt;button @click=&quot;&quot;&gt;Dropdown&lt;/button&gt; &lt;/div&gt; The MySelectDropdown.hbs file: &lt;ui5-popover id=&quot;#popover&quot; ?open=&quot;&quot;&gt; &lt;ui5-list&gt; &lt;ui5-li&gt;&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;/ui5-popover&gt; Also, create the CSS of the component in 2 files: MySelect.css (with styles for the select itself, f.e. .my-select {}) MySelectDropdown.css (with styles for the dropdown only, f.e. #dropdown {}) Pass the new template and CSS to the component class The MySelect.js file: import MySelectTemplate from &quot;./generated/templates/MySelect.lit.js&quot;; import MySelectDropdownTemplate from &quot;./generated/templates/MySelectDropdown.lit.js&quot;; import mySelectCss from &quot;./generated/themes/MySelect.css.js&quot;; import mySelectDropdownCss from &quot;./generated/themes/MySelectDropdown.css.js&quot;; class MySelect extends UI5Element { ... static get styles() { return mySelectCss; } static get staticAreaStyles() { return mySelectDropdownCss; } static get template() { return MySelectTemplate; } static get staticAreaTemplate() { return MySelectDropdownTemplate; } } Creating the static get staticAreaTemplate() method is the indication that your component has a static area part, and will trigger the respective framework functionality to support it. Use the async getStaticAreaItemDomRef() method to create the static area item on demand, whenever necessary. class MySelect extends UI5Element { ... async onOpenDropdownClick() { await this.getStaticAreaItemDomRef(); // this line is new compared to the old implementation this.dropdownOpen = true; } } This is all it takes to make your component work with the static area. Important: please note that the static area item is only created on demand - when you call the async getStaticAreaItemDomRef() function. For most components this is when the user opens a menu/dropdown/hovers over an element for a tooltip, etc. Let’s go over the whole process in more detail: The browser renders a &lt;my-select&gt;&lt;/my-select&gt; component: &lt;body&gt; &lt;my-select&gt;&lt;/my-select&gt; &lt;/body&gt; The shadow root of the my-select component will be created with the content from the MySelect.hbs template, as it was provided as static get template(). Note that until this point nothing related to the static area has happened. The lifecycle of this component so far is not much different than that of a ui5-button. The user interacts with the component (clicks the “Dropdown” button) This will trigger the onOpenDropdownClick event handler we’ve bound in MySelect.hbs and once the first line of this event handler is executed (the await this.getStatiAreaItemDomRef part): async onOpenDropdownClick() { await this.getStaticAreaItemDomRef(); this.dropdownOpen = true; } the framework will create the ui5-static-area and a ui5-static-area-item and will create its shadow root with the content from the MySelectDropdown.hbs template, as it was provided as static get staticAreaTemplate(). The DOM would then look like this: &lt;body&gt; &lt;ui5-static-area&gt; &lt;ui5-static-area-item&gt; #shadow-root &lt;!-- The MySelectDropdown.hbs template was rendered here --&gt; &lt;/ui5-static-area-item&gt; &lt;/ui5-static-area&gt; &lt;my-select&gt; #shadow-root &lt;!-- The MySelect.hbs template was rendered here --&gt; &lt;/my-select&gt; &lt;/body&gt; If the user hadn’t clicked the button, the static area part would not have been created at all. Accessing the static area item The async getStaticAreaItemDomRef() function from the example above: async onOpenDropdownClick() { await this.getStaticAreaItemDomRef(); this.dropdownOpen = true; } returns a reference to the shadowRoot of the static area item for this component. You can therefore access it like this: const staticAreaItem = await this.getStaticAreaItemDomRef(); const popover = staticAreaItem.querySelector(&quot;[ui5-popover]&quot;); First, we get a reference to the static area item’s shadow root in staticAreaItem, and then we get the instance of the ui5-popover element by using the attribute selector ([ui5-popover]), as is the best practice. See Tag in the Metadata deep dive section above. Also, note that no matter how many times you call getStaticAreaItemDomRef, the static area item will be created only the first time.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/development/deep-dive-and-best-practices/",
    "relUrl": "/playground/development/deep-dive-and-best-practices/"
  },
  "24": {
    "id": "24",
    "title": "Using features",
    "content": "Using Additional Features Several UI5 Web Components packages offer additional features. This section explains what these are and how to use them. What Are Additional Features These are features that logically belong to a component, but are not needed for the component’s most common use cases, thus not part of the component’s code by default. The goal of features is to keep the components’ code base minimal and allow users greater flexibility over what code to bundle. If you intend to use a component’s additional feature, your app must import it explicitly. Importing Additional Features Import the feature file from the respective NPM package: import &quot;@ui5/&lt;PACKAGE-NAME&gt;/dist/features/&lt;FEATURE-NAME&gt;.js Currently, only a few components offer additional features: Package Affects Feature Import Description main ui5-color-palette @ui5/webcomponents/dist/features/ColorPaletteMoreColors.js Support for “more colors dialog” for the color palette component main ui5-input @ui5/webcomponents/dist/features/InputSuggestions.js Support for input suggestions while typing main Multiple (ui5-input, ui5-date-picker, etc…) @ui5/webcomponents/dist/features/InputElementsFormSupport.js Support for using input components in forms fiori ui5-shellbar @ui5/webcomponents-fiori/dist/features/CoPilotAnimation.js Support for a better (but bigger in size) animation for the “co-pilot” button in the shellbar component base Framework @ui5/webcomponents-base/dist/features/OpenUI5Support.js Integration with the OpenUI5 framework, allowing synchronization and resources re-use base Multiple components within all libraries @ui5/webcomponents-base/dist/features/F6Navigation.js Support for F6 fast groups navigation localization Multiple (ui5-date-picker, etc…) @ui5/webcomponents-localization/dist/features/calendar/Buddhist.js Buddhist calendar support localization Multiple (ui5-date-picker, etc…) @ui5/webcomponents-localization/dist/features/calendar/Islamic.js Islamic calendar support localization Multiple (ui5-date-picker, etc…) @ui5/webcomponents-localization/dist/features/calendar/Japanese.js Japanese calendar support localization Multiple (ui5-date-picker, etc…) @ui5/webcomponents-localization/dist/features/calendar/Persian.js Persian calendar support For example: import &quot;@ui5/webcomponents/dist/features/ColorPaletteMoreColors.js;&quot;; Next: Wrapping Up",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/getting-started/using-features/",
    "relUrl": "/playground/getting-started/using-features/"
  },
  "25": {
    "id": "25",
    "title": "Using i18n for apps",
    "content": "UI5 Web Components i18n for Apps This section explains how to use the UI5 Web Components i18n functionality for the purpose of your app’s translatable texts. None of the code below implies or requires the usage of UI5 Web Components, and can be used completely stand-alone. The @ui5/webcomponents-base package allows the usage of i18n functionality not just for UI5 Web Components, but for apps as well. Note: This section is dedicated to apps. For information on how to set up i18n for your custom components, please see Developing Web Components. Step-by-Step Tutorial This tutorial will show you how to use the UI5 Web Components i18n functionality for the purpose of your apps. 1. Start by creating some i18n resources in .properties format in a directory that can be served, for example: File Content assets/messagebundle_de.properties PLEASE_WAIT=Bitte warten assets/messagebundle_fr.properties PLEASE_WAIT=Patientez. assets/messagebundle_es.properties PLEASE_WAIT=Espere assets/messagebundle_en.properties PLEASE_WAIT=Please wait (This example demonstrates just one translatable text per file for simplicity. You can have any number of texts per file, each on a new line.) 2. Import the following i18n-related modules to your app: import parseProperties from &quot;@ui5/webcomponents-base/dist/PropertiesFileFormat.js&quot;; import { registerI18nLoader, getI18nBundle } from &quot;@ui5/webcomponents-base/dist/i18nBundle.js&quot;; The first one provides support for .properties files, as used in the example, and the second one - the functions that will allow you to take advantage of the i18n functionality. 3. Register a loader function that can retrieve and process the actual content of your message bundles: const supportedLocales = [&quot;en&quot;, &quot;fr&quot;, &quot;de&quot;, &quot;es&quot;]; supportedLocales.forEach(localeToRegister =&gt; { registerI18nLoader(&quot;myApp&quot;, localeToRegister, async (localeId) =&gt; { const props = await (await fetch(`./assets/messagebundle_${localeId}.properties`)).text(); return parseProperties(props); }); }); The first argument to registerI18nLoader is an ID that will be used to reference this message bundle, the second is the locale this loader can load, and the third is a function that can load and process the content for the specified package/locale combination. Note: For more assets, a loop is used to register a loader for each package/locale combination. The same loader function can be registered and its parameter can be used to distinguish which locale resource is requested. Note: This step takes care of registering assets only, no data will be fetched at this point. 4. Get and use the bundle: const bundle = await getI18nBundle(&quot;myApp&quot;); const pleaseWait = bundle.getText(&quot;PLEASE_WAIT&quot;); console.log(&quot;Please wait in the current language is: &quot;, pleaseWait); You can pass multiple additional values to getText for texts with placeholders. If your text looks like this CAROUSEL_DOT_TEXT=Item {0} of {1} displayed you can call getText bundle.getText(&quot;CAROUSEL_DOT_TEXT&quot;, 5, 20); which will finally result in Item 5 of 20 displayed. 5. Test your page using different languages, e.g. set ?sap-ui-language=de in the URL or change the configuration. Summary The whole code would look like this: import parseProperties from &quot;@ui5/webcomponents-base/dist/PropertiesFileFormat.js&quot;; import { registerI18nLoader, getI18nBundle } from &quot;@ui5/webcomponents-base/dist/i18nBundle.js&quot;; const supportedLocales = [&quot;en&quot;, &quot;fr&quot;, &quot;de&quot;, &quot;es&quot;]; supportedLocales.forEach(localeToRegister =&gt; { registerI18nLoader(&quot;myApp&quot;, localeToRegister, async (localeId) =&gt; { const props = await (await fetch(`./assets/messagebundle_${localeId}.properties`)).text(); return parseProperties(props); }); }); const bundle = await getI18nBundle(&quot;myApp&quot;); const pleaseWait = bundle.getText(&quot;PLEASE_WAIT&quot;); console.log(&quot;Please wait in the current language is: &quot;, pleaseWait); You register your assets for all supported languages, then you fetch the data for the currently active language, get a reference to the bundle and call the getText method to get texts for your app. Tips and Tricks You can skip the .properties format support import return await (await fetch(`./assets/messagebundle_${localeId}.json`)).json(); and return the data directly in .json format if you want to load a little bit less code in the runtime. File Content assets/messagebundle_de.json {&quot;PLEASE_WAIT&quot;: &quot;Bitte warten&quot;} assets/messagebundle_fr.json {&quot;PLEASE_WAIT&quot;: &quot;Patientez.&quot;} assets/messagebundle_es.json {&quot;PLEASE_WAIT&quot;: &quot;Espere&quot;} assets/messagebundle_en.json {&quot;PLEASE_WAIT&quot;: &quot;Please wait&quot;} Next: Accessibility",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/advanced/using-i18n-for-apps/",
    "relUrl": "/playground/advanced/using-i18n-for-apps/"
  },
  "26": {
    "id": "26",
    "title": "Accessibility",
    "content": "Accessibility in UI5 Web Components Accessibility refers to the possibility for everyone, including and especially people with disabilities, to access and use IT products. Making software work for more people should be of high priority. All users should be able to operate our software without loss of meaningful content, functionality, and efficiency when using assistive technologies. Following those principles in an ongoing approach, we at UI5 Web Components aim to bring accessibility to life by providing the appropriate accessibility features, and following precise accessibility requirements and processes. Web Components &amp; Accessibility Web Components allow developers to make their own custom components with native HTML and JavaScript with the usage of custom elements, shadow DOM, and templates. In HTML you can define an element using a role. When you use semantic elements, you don’t need to define a role as these elements receive all relevant aria mappings out of the box. However, this is not the case when you use custom elements where you should add all relevant accessibility attributes yourselves. This is not needed in UI5 Web Components, because when using our elements, all relevant accessibility attributes for a certain component will be applied in the shadow DOM, without further setup. Additionally, many accessibility-related APIs are available. They can be used to enhance the accessibility in the context of each application. As the Web Components are a new standard, there are still some gaps in regard to accessibility. For example - setting IDRef relationships is currently not possible due to the nature of the custom elements and their shadow DOM. This is a limitation in the ARIA support and there is a draft of a new AOM (Accessibility Object Model), which addresses this issue and many more, and aims at a better JS-based accessibility support for all web elements. We are continuously working on improving the existing limitations. For example, in order to create a Label-Input relationship, you can use the for property of the label component to bind the label to an input, or accessible-name-ref property of the input component to bind the input to a label. Accessibility Features Many accessibility features are built into the core design elements upfront and are available to app teams out of the box. Keyboard navigation and interaction, tab and reading order, as well as screen reader support are fundamental features enabled in UI5 Web Components. Visualization features like high contrast themes, consistency of icons, keyboard focus visualization, layout adaptation, and support for text resizing are also available. Screen Reader Support UI5 Web Components provide the prerequisites for screen reader support based on the HTML, ARIA, and WCAG standards support in order to aid people using screen reader software. Navigation with the keyboard and screen reader should work properly together. In order for this to happen, you need to use the correct ARIA attributes and to map them to their HTML counterparts. With UI5 Web Components you will receive ARIA mapped elements out of the box. For example let’s add a ui5-combobox component: &lt;ui5-combobox&gt; &lt;ui5-cb-item text=&quot;Item 1&quot;&gt;&lt;/ui5-cb-item&gt; &lt;/ui5-combobox&gt; By doing so, you receive an input element with role=&quot;combobox&quot; with all aria attributes relevant for this role in the shadow DOM. Also, if you set the disabled property, this will automatically add disabled to the shadow combobox element. Attribute mapping is available for all relevant properties - required, disabled, readonly, and more. In order to ease the setting of aria attributes, we have introduced properties that are available for developers to extend the accessibility support in the context of the application. More information about the available properties could be found in the Accessibility APIs section below. Invisible Messaging The Invisible Message provides a way to programmaticaly expose dynamic content changes in a way that can be announced by screen readers. It marks the dynamic content changes as ARIA live regions so that you are able to inform the users of assistive technologies for a change that has happened to the UI. The Invisible Messaging service is designed to be used both internally in the components logic and from the applications. Using the service, you have to specify the message to be announced by the screen reader and the mode which will be inserted in the aria-live attribute via the InvisibleMessage.announce(message, mode) method. The possible modes to choose from are: ` InvisibleMessageMode.Assertive` - indicates that updates to the region have the highest priority and should be presented to the user immediately. InvisibleMessageMode.Polite - indicates that updates to the region should be presented at the next graceful opportunity such as at the end of reading the current sentence, or when the user paused typing. According to the WAI-ARIA recommendations, the live regions should be initialised empty when the page is loaded. This way screen readers remember them and start to listen for changes of their value. Thus, we recommend to instantiate Invisible Message as early as possible in the application. Then, you should specify the text, that has to be announced by the screen reader and the live region’s mode using the announce method. Here is an example usage of the invisible messaging service - Dynamic MessageStrip Generator Sample Keyboard Handling All standard UI elements and controls are designed to be keyboard-enabled. All suitable input channels (such as mouse, keyboard, or touch) are treated equally according to the capabilities of the device or the individual preferences of the user. For example, some users may prefer using the keyboard instead of a mouse, which lets them work faster. Support for standard keystrokes, based on the role of the component element is available. Complex components also provide advanced keyboard handling, which is described in the Overview section of each component. Theming Theming is an important aspect when it comes to a UI5 Web Components application. The different colors shown on the UI need to have a good contrast to each other in order to be easily distinguishable. We ensure that the requirements for color contrast are fulfilled in all themes. High Contrast White and High Contrast Black themes are also available to support people with visual impairments. For more information regarding the available themes and how to use them, see the Configuration section. Accessibility APIs The mapping of the accessibility APIs to ARIA attributes is described in the following table: UI5 Web Components Property HTML attribute Description accessibleName aria-label Defines the text alternative of the component. If not provided, a default text alternative is set, if present. accessibleNameRef aria-label Alternative for aria-labelledby. Receives ID (or many IDs) of the elements that serve as labels of the component. Those labels are passed as a concatenated string to the aria-label attribute. accessibleRole role Sets the accessible aria role of the component. accessibilityTexts aria-label An object of strings that define several additional accessibility texts for further customization. accessibilityAttributes aria-expanded, aria-haspopup, aria-controls An object of strings that defines several additional accessibility attribute values for customization depending on the use case. accessibilityRoles role An object of strings that define several additional accessibility roles for further customization. required aria-required Defines whether the component is required. readonly aria-readonly Defines whether the component is read-only. disabled aria-disabled Defines whether the component is disabled. checked aria-checked Defines whether the component is checked. level, headerLevel aria-level Defines the heading level of a title. Available options are: “H6” to “H1”. interactive tabindex Defines if the component is interactive (focusable and pressable). accessibleName Setting the property on the custom element as: &lt;ui5-combobox accessible-name=&quot;Enter Value&quot;&gt; &lt;ui5-cb-item text=&quot;Item 1&quot;&gt;&lt;/ui5-cb-item&gt; &lt;/ui5-combobox&gt; Will result in the shadow DOM as: &lt;input role=&quot;combobox&quot; aria-label=&quot;Enter value&quot; ... &gt; The accessible-name property is currently supported in: Popups: Dialog, Popover User input components (e.g. Input, RadioButton) Panel Breadcrumbs Button Icon List CheckBox Rating Indicator Slider, Range Slider Table Tree Card accessibleNameRef Setting the property on the custom element as: &lt;ui5-label id=&quot;myLabel&quot; for=&quot;myInput&quot;&gt;Date of birth&lt;/ui5-label&gt; &lt;ui5-input id=&quot;myInput&quot; accessible-name-ref=&quot;myLabel&quot;&gt;&lt;/ui5-input&gt; Will result in the shadow DOM as: &lt;input aria-label=&quot;Date of birth&quot; ... &gt; The accessible-name-ref property is currently supported in: Popups: Dialog, Popover User input components (e.g. Input, RadioButton) Link Button List CheckBox Table Tree Card accessibilityTexts This property accepts object with property values for different parts of the FlexibleColumnLayout elements. For more detailed information on every object property, read the API description in FlexibleColumnLayout. Setting the property on the custom element as: &lt;ui5-flexible-column-layout id=&quot;component&quot;&gt;...&lt;/ui5-flexible-column-layout&gt; &lt;script&gt; const component = document.getElemetnById(&quot;component&quot;); component.accessibilityTexts = { startColumnAccessibleName: &quot;Products list&quot;, }; &lt;/script&gt; Will result in the shadow DOM as: &lt;div role=&quot;region&quot; aria-labelledby=&quot;component-startColumnText&quot; ... &gt; ... &lt;span id=&quot;component-startColumnText&quot; class=&quot;ui5-hidden-text&quot; ... &gt; Products list &lt;/span&gt; ... &lt;/div&gt; The accessibilityTexts property is currently supported in: FlexibleColumnLayout ShellBar accessibilityAttributes This property accepts an object with property values, which will be used to generate additinal accessibility attributes to the root element. For more detailed information on every object property, read the API description in Button. Setting the property on the custom element as: &lt;ui5-button id=&quot;button&quot;&gt;...&lt;/ui5-button&gt; &lt;ui5-dialog id=&quot;dialogIdentificator&quot;&gt;...&lt;/ui5-dialog&gt; &lt;script&gt; const component = document.getElemetnById(&quot;button&quot;); component.accessibilityAttributes = { hasPopup: &quot;dialog&quot;, controls: &quot;dialogIdentificator&quot; }; &lt;/script&gt; Will result in the shadow DOM as: &lt;button type=&quot;button&quot; class=&quot;ui5-button-root&quot; part=&quot;button&quot; aria-controls=&quot;dialogIdentificator&quot; aria-haspopup=&quot;dialog&quot;&gt; ... &lt;/button&gt; The accessibilityAttributes property is currently supported in: Button Link accessibilityRoles This property accepts object with property values for different parts of the FlexibleColumnLayout elements. For more detailed information on every object property, read the API description in FlexibleColumnLayout. Setting the property on the custom element as: &lt;ui5-flexible-column-layout id=&quot;component&quot;&gt;...&lt;/ui5-flexible-column-layout&gt; &lt;script&gt; const component = document.getElemetnById(&quot;component&quot;); component.accessibilityRoles = { startColumnRole: &quot;complimentary&quot;, }; &lt;/script&gt; Results in the shadow DOM as: &lt;div role=&quot;complimentary&quot; ... &gt; ... &lt;/div&gt; The accessibilityRoles property is currently supported in: FlexibleColumnLayout ShellBar accessibleRole Setting the property on the custom element as: &lt;ui5-panel accessible-role=&quot;Complementary&quot;&gt; ... &lt;/ui5-panel&gt; Will result in the shadow DOM as: &lt;div role=&quot;complementary&quot; ... &gt; ... &lt;/div&gt; The accessible-role property is currently supported in: User input components (e.g. Input, RadioButton) Panel List Icon Popover Dialog level, headerLevel Setting the property on the custom element as: &lt;ui5-title level=&quot;H3&quot;&gt;Title&lt;/ui5-title&gt; ... &lt;ui5-panel header-text=&quot;Panel Header&quot; header-level=&quot;H3&quot;&gt; &lt;/ui5-panel&gt; Will result in the shadow DOM as: &lt;h3 class=&quot;ui5-title-root&quot; ... &gt;...&lt;/h3&gt; ... &lt;div class=&quot;ui5-panel-root&quot; ... &gt; ... &lt;div role=&quot;heading&quot; aria-level=&quot;3&quot; ...&gt; Panel Header &lt;/div&gt; ... &lt;/div&gt; The level property is currently supported in: Title The header-level property is currently supported in: Panel interactive Setting the property on the custom element as: &lt;ui5-icon interactive&gt;&lt;/ui5-icon&gt; Will result in the shadow DOM as: &lt;svg tabindex=&quot;0&quot; role=&quot;button&quot; ... &gt;&lt;/svg&gt; The interactive property is currently supported in: Avatar Icon Testing Accessibility UI5 Web Components provide the prerequisites for screen reader support based on the HTML, ARIA, and WCAG standards. All screen readers that follow those standards should work fine. Nevertheless, there are deviations in the interpretation depending on the combination of browser and screen reader. UI5 Web Components focus on compliance with the standards by performing automated checks for accessibility and manual tests with reference testing environments. For Screen Reader Support, we recommend using JAWS 2021 + Chrome (latest), and for HTML/ARIA validation the recommended testing tool is Access Assistant. UI5 Web Components support other environments to the extent of providing a valid HTML and ARIA implementation following the WCAG standards. Please note that reference testing environments may change over time to reflect changes in the usage of different browsers, their maintenance period, and increased accessibility compliance. When reporting issues with different testing environments, please ensure that the issue is not false positive, a real accessibility concern is present, and there is an impact over the users. Therefore, we recommend to retest the issue using the mentioned reference testing tools and additionally with plain HTML. In order to process the issues correctly, we would like to have the following information provided: • Issue description • Reference to the suspected violated accessibility requirement (e.g. Web Content Accessibility Guidelines, WCAG 2.0, BITV 2.0, EN 301 549) • Isolated example • Steps to reproduce • UI5 Web Components version • OS/Platform: {…} • Browser: {…} • Testing Tool Note Have in mind that UI5 Web Components is optimized for the High Contrast mode of Windows when using Chrome and Edge. If you have enabled both the Windows High Contrast setting and the SAPUI5 High Contrast theme and you are using browser different than Chrome and Edge this may cause conflicts, and deficiencies in the theme can occur. In such cases, please switch off the Windows High Contrast setting or use different browser. Next: CSP",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/advanced/accessibility/",
    "relUrl": "/playground/advanced/accessibility/"
  },
  "27": {
    "id": "27",
    "title": "Ts",
    "content": "Typescript development Metadata Decorators We use decorators to describe metadata. List of all available decorators: import customElement from &quot;@ui5/webcomponents-base/dist/decorators/customElement.js&quot;; import property from &quot;@ui5/webcomponents-base/dist/decorators/property.js&quot;; import slot from &quot;@ui5/webcomponents-base/dist/decorators/slot.js&quot;; import event from &quot;@ui5/webcomponents-base/dist/decorators/event.js&quot;; import languageAware from &quot;@ui5/webcomponents-base/dist/decorators/languageAware.js&quot;; import themeAware from &quot;@ui5/webcomponents-base/dist/decorators/themeAware.js&quot;; import fastNavigation from &quot;@ui5/webcomponents-base/dist/decorators/fastNavigation.js&quot;; Types of decorators Class decorators These are used outside the class declaration and describe the class: import customElement from &quot;@ui5/webcomponents-base/dist/decorators/customElement.js&quot;; import event from &quot;@ui5/webcomponents-base/dist/decorators/event.js&quot;; import languageAware from &quot;@ui5/webcomponents-base/dist/decorators/languageAware.js&quot;; import themeAware from &quot;@ui5/webcomponents-base/dist/decorators/themeAware.js&quot;; import fastNavigation from &quot;@ui5/webcomponents-base/dist/decorators/fastNavigation.js&quot;; Example: @customElement(&quot;ui5-menu&quot;) @event(&quot;item-click&quot;, { detail: { item: { type: Object, }, text: { type: String, }, }, }) class MyClass extends UI5Element { } Property decorators These are used inside the class and are associated with accessors (class members). Such decorators are used for properties and slots: import property from &quot;@ui5/webcomponents-base/dist/decorators/property.js&quot;; import slot from &quot;@ui5/webcomponents-base/dist/decorators/slot.js&quot;; Example: class MyClass extends UI5Element { @property({ type: Boolean }) open!:boolean; } Defining the tag and other settings Use @customElement as a replacement for the metadata tag setting. Use @themeAware, @languageAware and @fastNavigation where needed. Note that these do not accept parameters. Example: @customElement(&quot;my-element-name&quot;) @languageAware @themeAware @fastNavigation Defining properties (@property) Pass an object with the settings (type, defaultValue, etc.), defining the property, as the only parameter to the @property decorator. String is the default type, no need to explicitly write it /** * Defines the header text of the menu (displayed on mobile). * * @name sap.ui.webc.main.Menu.prototype.headerText * @type {string} * @defaultvalue &quot;&quot; * @public */ @property() headerText!: string; use Typescript enum for enums (do not extend DataType) /** * Defines the component design. * * &lt;br&gt;&lt;br&gt; * &lt;b&gt;The available values are:&lt;/b&gt; * * &lt;ul&gt; * &lt;li&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/li&gt; * &lt;li&gt;&lt;code&gt;Emphasized&lt;/code&gt;&lt;/li&gt; * &lt;li&gt;&lt;code&gt;Positive&lt;/code&gt;&lt;/li&gt; * &lt;li&gt;&lt;code&gt;Negative&lt;/code&gt;&lt;/li&gt; * &lt;li&gt;&lt;code&gt;Transparent&lt;/code&gt;&lt;/li&gt; * &lt;li&gt;&lt;code&gt;Attention&lt;/code&gt;&lt;/li&gt; * &lt;/ul&gt; * * @type {sap.ui.webc.main.types.ButtonDesign} * @name sap.ui.webc.main.Button.prototype.design * @defaultvalue &quot;Default&quot; * @public */ @property({ type: ButtonDesign, defaultValue: ButtonDesign.Default }) design!: ButtonDesign; use validator instead of type for DataType descendants (although type still works for compatibility) /** * Defines component&#39;s timestamp. * &lt;b&gt;Note:&lt;/b&gt; set by the Calendar component * @type {sap.ui.webc.base.types.Integer} * @name sap.ui.webc.main.CalendarHeader.prototype.timestamp * @public */ @property({ validator: Integer }) timestamp?: number; The validator setting is preferable to type as it avoids confusion with the actual Typescript type (i.e. number in this example) Note the difference between Typescript types (string, boolean) and Javascript constructors (String, Boolean). The former are used for Typescript class members, and the latter (as before) for the metadata settings. @property({ type: Boolean }) hidden!: boolean; Important: set the @name JSDoc annotation for all public properties as JSDoc cannot associate the JSDoc comment with the property in the code. This will not be necessary once we’ve switched to TypeDoc. Use ? for all metadata properties that may be undefined, and ! for all other metadata properties. As a rule of thumb, String properties are always defined with ! unless you specifically set defaultValue: undefined and validator properties are always defined with ? unless you specify a default value. Boolean properties are always defined with ! as they always have a default value of false. Important: never initialize metadata properties. Use defaultValue instead. Wrong: class Button extends UI5Element { @property({ type: ButtonDesign }) design: ButtonDesign = ButtonDesign.Default; } Also Wrong: class Button extends UI5Element { @property({ type: ButtonDesign }) design: ButtonDesign; constructor() { super(); this.design = ButtonDesign.Default; } } Correct: class Button extends UI5Element { @property({type: ButtonDesign, defaultValue: ButtonDesign.Default }) design!: ButtonDesign; } Note the usage of ! to tell Typescript that this variable will always be defined, since Typescript does not know that the framework will create a special getter for it. Defining slots (@slot) There are 3 common patterns for defining slots: Default slot with propertyName Before: /** * @type {HTMLElement[]} */ &quot;default&quot;: { type: HTMLElement, propertyName: &quot;items&quot;, } After: /** * @name sap.ui.webc.main.SomeComponent.prototype.default * @type {HTMLElement[]} */ @slot({ &quot;default&quot;: true, type: HTMLElement }) items!: Array&lt;SomeItem&gt; Use the propertyName as the class member, set &quot;default&quot;: true in the decorator definition, and use prototype.default as the JSDoc @name. Named slot Before: /** * @type {HTMLElement[]} */ content: { type: HTMLElement, invalidateOnChildChange: true, } After: /** * @name sap.ui.webc.main.SomeComponent.prototype.content * @type {HTMLElement[]} */ @slot({ type: HTMLElement, invalidateOnChildChange: true }) content!: Array&lt;HTMLElement&gt; Use the slot name as the class member, and again in the JSDoc @name. Default slot without propertyName Before: /** * @type {HTMLElement[]} */ &quot;default&quot;: { type: HTMLElement, } After: /** * @name sap.ui.webc.main.SomeComponent.prototype.default * @type {HTMLElement[]} */ Only provide a JSDoc comment and do not create a class member for that slot. What about managedSlots? There isn’t a decorator for managedSlots (unlike for all other metadata entities). It is set automatically when you use at least one @slot decorator. In essence, this means that if you need to access the slot content in your component’s code, the slots automatically need to be managed. Therefore, whenever you use @slot, the managedSlots setting is automatically set. Defining events The @event decorator must be used outside the class (contrary to @property and @slot). You must provide a JSDoc @name annotation with # Example: /** * Fired when an item is activated, unless the item&#39;s &lt;code&gt;type&lt;/code&gt; property * is set to &lt;code&gt;Inactive&lt;/code&gt;. * * @event sap.ui.webc.main.List#item-click * @allowPreventDefault * @param {HTMLElement} item The clicked item. * @public */ @event(&quot;item-click&quot;, { detail: { item: { type: HTMLElement }, }, }) Events There are a couple of rules to follow when creating and using events Use the @event decorator: /** * Fired when an item is activated, unless the item&#39;s &lt;code&gt;type&lt;/code&gt; property * is set to &lt;code&gt;Inactive&lt;/code&gt;. * * @event sap.ui.webc.main.List#item-click * @allowPreventDefault * @param {HTMLElement} item The clicked item. * @public */ @event(&quot;item-click&quot;, { detail: { item: { type: HTMLElement }, }, }) Create a type for the event parameter type ListItemClickEventDetail { item: ListItemBase, } Use the type when firing events this.fireEvent&lt;ListItemClickEventDetail&gt;(&quot;item-click&quot;, { item }) Export the type for the event detail export type { ListItemClickEventDetail }; Then, the users of your component can import the detail type and pass it to CustomEvent, for example: onItemClick(e: CustomEvent&lt;ListItemClickEventDetail&gt;) { console.log(e.detail.item); }",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/development/ts/",
    "relUrl": "/playground/development/ts/"
  },
  "28": {
    "id": "28",
    "title": "Wrapping up",
    "content": "Wrapping Up In the previous chapters we covered bundling UI5 Web Components, using components, icons, additional assets and optional features. This section illustrates how all these concepts combine. Applying the Learnings in the vite App If you created the test app, described in Getting Started, you can enhance it as follows: 1) In the “Getting Started” section you installed the @ui5/webcomponents package. Now, let’s do the same for @ui5/webcomponents-icons: npm install @ui5/webcomponents-icons 2) Change the main.js file as follows: import &quot;@ui5/webcomponents/dist/Assets.js&quot;; // Assets for the main package import &quot;@ui5/webcomponents-icons/dist/Assets.js&quot;; // Assets for the icons package import &quot;@ui5/webcomponents/dist/Button.js&quot;; // ui5-button import &quot;@ui5/webcomponents/dist/ColorPalette.js&quot;; // ui5-color-palette import &quot;@ui5/webcomponents/dist/features/ColorPaletteMoreColors.js&quot;; // the &quot;more colors&quot; feature import &quot;@ui5/webcomponents-icons/dist/add.js&quot;; // the &quot;add&quot; icon, used inside the button You now import assets, components, features and icons. 3) Change the index.html file as follows: &lt;html&gt; &lt;body&gt; &lt;script type=&quot;module&quot; src=&quot;/main.js&quot;&gt;&lt;/script&gt; &lt;ui5-button icon=&quot;add&quot;&gt;Button with icon&lt;/ui5-button&gt; &lt;ui5-color-palette show-more-colors&gt; &lt;ui5-color-palette-item value=&quot;red&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;green&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;blue&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;/ui5-color-palette&gt; &lt;/body&gt; &lt;/html&gt; to use ui5-button with the add icon imported in main.js and the ui5-color-palette component with the show-more-colors feature. 4) Run the project. If vite is running, it will just refresh your browser, otherwise run the project again. npm run dev Go to your browser and observe the changes. 5) Test the assets. Try running the test page with the following URL parameters: sap-ui-theme=sap_belize_hcb&amp;sap-ui-language=de http://localhost:3000/?sap-ui-theme=sap_belize_hcb&amp;sap-ui-language=de You should be able to see the page with an accessibility theme, and in German language.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/getting-started/wrapping-up/",
    "relUrl": "/playground/getting-started/wrapping-up/"
  },
  "29": {
    "id": "29",
    "title": "CSP",
    "content": "CSP To learn about Content Security Policy (CSP), click here. Read this section if your site needs to be CSP-compliant. This article focuses on styles compliance. import { setUseLinks, setPackageCSSRoot } from &quot;@ui5/webcomponents-base/dist/CSP.js&quot;; These functions affect the way the UI5 Web Components framework manages CSS. This is important if you are aiming for CSP-compliance, since in order to be CSP-compliant, in the most general case, a site cannot use &lt;style&gt; tags. Background The UI5 Web Components framework can leverage CSS (for shadow roots and the &lt;head&gt;) in 3 ways: with Constructable StyleSheets (document.adoptedStyleSheets) for the browsers that support them, with &lt;style&gt; tags, and with &lt;link&gt; tags. Way to use CSS Supported by CSP Compliant Extra setup required Constructable Stylesheets (default for Chrome/Edge) Chrome / Edge Yes No &lt;style&gt; (default for Firefox/Safari) all No No &lt;link&gt; (optional for all browsers) all Yes Yes (CSS files must be statically served) In summary, Constructable Stylesheets are both CSP-compliant and require no extra work on your part. Therefore, browsers that can use them (Chrome, Edge) are CSP-compliant out of the box. Firefox and Safari, on the other hand, use &lt;style&gt; tags by default, for both the shadow roots of web components, and in the HTML document’s head, and are therefore not CSP-compliant by default. Turning on CSP Compliance for Firefox and Safari To make UI5 Web Components CSP-compliant also on Firefox and Safari, you need to copy the CSS resources for all relevant UI5 Web Components packages to where you can serve them, and use the setUseLinks and setPackageCSSRoot functions. Example: 1) First, copy the CSS files for all relevant packages to a directory that can be served, in this example, public/css/: cp -r node_modules/@ui5/webcomponents-base/dist/css/ public/css/base/ cp -r node_modules/@ui5/webcomponents-theming/dist/css/ public/css/theming/ cp -r node_modules/@ui5/webcomponents/dist/css/ public/css/main/ cp -r node_modules/@ui5/webcomponents-fiori/dist/css/ public/css/fiori/ Note: make these commands part of your build task, if your app needs to be CSP-compliant on all browsers. You will always need the CSS resources of the framework-level packages (@ui5/webcomponents-base and @ui5/webcomponents-theming), and additionally the ones of all components packages your app is going to use (such as @ui5/webcomponents and @ui5/webcomponents-fiori). By convention, the CSS files are found in the dist/css/ directory for each package that ships CSS resources. 2) Call the 2 functions, described above, as follows: import { setPackageCSSRoot, setUseLinks } from &quot;@ui5/webcomponents-base/dist/CSP.js&quot;; setUseLinks(!document.adoptedStyleSheets); // or &quot;true&quot;, to force all browsers to use links setPackageCSSRoot(&quot;@ui5/webcomponents-base&quot;, &quot;public/css/base/&quot;); setPackageCSSRoot(&quot;@ui5/webcomponents-theming&quot;, &quot;public/css/theming/&quot;); setPackageCSSRoot(&quot;@ui5/webcomponents&quot;, &quot;public/css/main/&quot;); setPackageCSSRoot(&quot;@ui5/webcomponents-fiori&quot;, &quot;public/css/fiori/&quot;); Calling setUseLinks with !document.adoptedStyleSheets as its argument is an easy way to tell the framework to use &lt;link&gt; tags only for the browsers that don’t support Constructable Stylesheets. However, you can call setUseLinks(true) to make all browsers consume CSS from &lt;link&gt;s, if you prefer so. Then, for each package, call setPackageCSSRoot and pass the directory, from which the CSS files will be served. You can pass relative paths to your HTML page, as in the example above, or fully qualified paths, for example: setPackageCSSRoot(&quot;@ui5/webcomponents-base&quot;, &quot;https://my.site/path/to/public/css/base/&quot;); setPackageCSSRoot(&quot;@ui5/webcomponents-theming&quot;, &quot;https://my.site/path/to/public/css/theming/&quot;); setPackageCSSRoot(&quot;@ui5/webcomponents&quot;, &quot;https://my.site/path/to/public/css/main/&quot;); setPackageCSSRoot(&quot;@ui5/webcomponents-fiori&quot;, &quot;https://my.site/path/to/public/css/fiori/&quot;); It’s simpler to just use relative paths, if your app is going to have one index.html file, and you can conveniently point to a directory, relative to it. However, in case components will be used in different pages across your site, or you are using URL re-writing, it would be safest to use fully qualified paths. Links Preloading By default, when using &lt;link&gt;s, they are preloaded in the browser’s &lt;head&gt; (even the ones for shadow roots) in order to avoid flashing of un-styled content. These preloads have the form: &lt;link rel=&quot;preload&quot; as=&quot;style&quot; ...&gt;. If, for any reason, you want to opt out of these preloads, you can do so by calling the setPreloadLinks function: import { setPreloadLinks } from &quot;@ui5/webcomponents-base/dist/CSP.js&quot;; setPreloadLinks(false); Summary By default, the UI5 Web Components framework manages CSS resources either with Constructable Stylesheets, or with &lt;style&gt; tags. Since Constructable Stylesheets are CSP-compliant, UI5 Web Components is CSP-compliant on browsers that support them (Chrome, Edge) out of the box. For the other browsers (Firefox, Safari), in order to achieve CSP-compliance, you must instruct the framework to use &lt;link&gt; instead of &lt;style&gt; tags, but then you must also copy the CSS resources to a directory you can serve them from.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/advanced/csp/",
    "relUrl": "/playground/advanced/csp/"
  },
  "30": {
    "id": "30",
    "title": "Scrollbars customization",
    "content": "Scrollbars customization By default some of the components provide additional CSS styles, which are applied to their scrollbars, in order to achieve their target design. Setting default scrollbar styles to components To use native scrollbar styles, you have to add the CSS style class .ui5-content-native-scrollbars on the body element of your application. Note: Because of some browser restrictions this setting takes affect if it is applied before the initial rendering of the compontents, which are using it. Example 1: &lt;body class=&quot;ui5-content-native-scrollbars&quot;&gt; ... &lt;/body&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/advanced/scrollbars-customization/",
    "relUrl": "/playground/advanced/scrollbars-customization/"
  },
  "31": {
    "id": "31",
    "title": "1.0.0",
    "content": "1.0.0 (2021-11-10) 👏 We are happy to announce our first stable 1.0.0 version of UI5 Web Components 👏",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.0.0.md/",
    "relUrl": "/playground/changelog/1.0.0.md/"
  },
  "32": {
    "id": "32",
    "title": "1.1.0",
    "content": "1.1.0 (2022-01-21) New Components ui5-dynamic-side-content: Initial implementation (#4379) (c36cb57) ui5-media-gallery: Initial implementation (#4427) (17cb225) ui5-split-button: Initial implementation (#4570) (295925b) Features framework: implement F6 Navigation Helper (#4490) (60d0dc1) framework: introduce runtimes and version info (#4491) (757577f) framework: add stable-dom-ref support for abstract items (#4604) (5526dea) ui5-button: implement accessibleNameRef property (#4474) (3f7eae3) ui5-checkbox: introduce accessibleName and accessibleNameRef (#4547) (6f285fd), closes #4500 ui5-combobox: add full keyboard handling (#4494) (fd4bb50) ui5-flexible-column-layout: introduce accessibilityRoles property (#4446) (f515f3d), closes #3804 #3796 ui5-icon: implement accessibleRole property (#4548) (6d6cf6f), closes #4499 ui5-input: add full keyboard support (#4414) (6133393) ui5-illustrated-message: add more illustrations to the default set (#4587) (417bd6a) ui5-link: implement accessibilityAttributes property (#4591) (9a16d61), closes #3546 ui5-list: make item-click event preventable (#4448) (12d3e8a) ui5-option: handle title attribute (#4546) (0c060aa) ui5-popup: add accessibleNameRef property (#4517) (0a7c1f3) ui5-radio-button: implement accessibleNameRef property (#4511) (83fdef5) ui5-rating-indicator: add full keyboard support (#4411) (0e41f41) ui5-segmented-button: implement accessibleName property (#4378) (e6a8b38) ui5-shellbar: introduce accessibilityTexts property (#4377) (f762e76), closes #4009 ui5-switch: implement accessibleNameRef property (#4472) (8538de9) ui5-tabcontainer: implement overflow functionality (#4403) (a38bbab), closes #2540 ui5-tabcontainer: show separators in overflow (#4507) (b646157) ui5-tree-item: add indeterminate state (#4397) (80bbc22) ui5-wizard: extend keyboard handling (#4444) (57151a3) Bug Fixes framework: Scoping issues corrected (#4573) (4e430d3) framework: prevent runtime error on malformed custom theme object (#4375) (3215c7d) ui5-bar: fix RTL support (#4496) (e5c0f2d) ui5-bar: remove unnecessary slot names (#4510) (32d4507) ui5-breadcrumbs: correct missing label for single breadcrumb (#4578) (42254d8), closes #4565 ui5-breadcrumbs: remove text-decoration from separator (#4568) (ed87ba5) ui5-card: adjust some classes in Playground samples (#4462) (2a9ed2a), closes #4200 ui5-card: update theming parameter (#4582) (622db2c) ui5-card-header: fix rtl support (#4536) (14a2a03) ui5-combobox: fix docs (#4553) (f0b1bf7) ui5-combobox: remove incorrect sample (#4482) (4b2720b) ui5-icon: correct tabindex value (#4509) (54698f6) ui5-input: make “change” event consistent (#4129) (09f9059) ui5-input: fix value truncation (#4467) (d9261f5) ui5-input: improve sample visualization (#4476) (b0fd49a) ui5-li-custom: remove height restriction (#4473) (e76f8c9), closes #4450 ui5-li-notification-group: fix close button functionality in ShellBar sample (#4408) (6a66797), closes #4202 ui5-link: add noopener to rel attribute (#4533) (3f2c3cd) ui5-multi-combobox: make readonly component focusable on mobile device (#4456) (755599d) ui5-panel: rotate button counterclockwise in RTL mode (#4470) (d3f6e39) ui5-popover: fix content truncation (#4359) (2e8d3bd), closes #4259 ui5-popover: make sample responsive for small devices (#4527) (fddf903), closes #4206 ui5-popover: restrict arrow going out of bounds (#4599) (41239a8), closes #4581 ui5-shellbar: allow selection with Enter key in overflow menu (#4577) (fb40514), closes #4556 ui5-side-navigation: correct styles for static area (#4526) (7d35bd6), closes #4515 ui5-tabcontainer: improve keyboard handling (#4486) (a934eb3), closes #2540 ui5-view-settings-dialog: implement single page functionality (#4419) (572a323) ui5-breadcrumbs: fix JS error when empty (#4563) (cfd9fa6) inputs: adjust value and placeholder styles (#4400) (b6014bc) inputs: value state message is not presented in readonly mode (#4329) (e1250ae) popups: block layer of popups now has a tabindex with value 0 (#4324) (0965738), closes #4187 ui5-badge: center text vertically (#4394) (e6d0f69) ui5-busy-indicator: Improve delay handling (#4321) (acb1729), closes #4108 ui5-button: clicking button is safari now gives it a focus (#4235) (baeb02d), closes #2951 ui5-carousel: fix playground sample (#4366) (67ace3a) ui5-checkbox: cursor style when disabled (#4392) (5d3e8f5) ui5-checkbox: fix position of checkmark in ie11 (#4320) (2745bbc) ui5-combobox: Keyboard navigation trough filtered items (#4143) (17e6e51) ui5-combobox, ui5-textarea: correct value state message placement in RTL mode (#4396) (6ab9edb) ui5-date-picker: enable date value strict parsing (#4428) (ac5ac2d), closes #4409 ui5-date-picker: remove title attribute from samples (#4422) (56a6724) ui5-date-time-picker: proper visualization on mobile (#4345) (7d8b93a) ui5-dialog: correct border radius when stretched on phones (#4327) (5aedc43), closes #4254 ui5-dialog: resize handle is no longer shown on phones (#4326) (9b3869f), closes #4253 ui5-input: fix event handling in firefox (#4447) (d973162) ui5-input, ui5-multi-combobox: value state popup now aligned properly in RTL mode (#4310) (ce0dcd2), closes #3830 ui5-li-notification-group: visual fixes for right-to-left mode (#4354) (13b7d68), closes #4255 #4256 #4257 ui5-list: remove hightlighting on items after tap on mobile (#4388) (c328ea9), closes #4258 ui5-message-strip: make speech output more comprehensive (#4416) (9442e05) ui5-popover: adjust top position when iOS keyboard is opened (#4333) (a4b03a3) ui5-radio-button: remove cursor pointer for disabled state (#4393) (d147df8) ui5-rating-indicator: not round values are correctly visualised in RTL mode (#4330) (d901386) ui5-slider, ui5-range-slider: remove focus outline on mobile (#4458) (a295dc1) ui5-table: adjust header row’s height according to the visual specification (#4424) (175fce3) ui5-table: check select all checkbox, when all rows are selected programatically (#4455) (7baabfa) ui5-tabcontainer, ui5-shellbar: adding stable selectors for tab container and shellbar (#4369) (9abdaba) ui5-textarea: apply specified scrollbar stylings (#4477) (84018fc) ui5-textarea: calc properly TextArea’s size for showExceeds property (#4152) (6f06963) ui5-token: apply correct background color in HC themes (#4464) (133e45d) ui5-token: border-radius adjusted to spec in in SAP Quartz HCB/HCW (#4323) (6691b3d) ui5-upload-collection: make buttons visible on small screens (#4361) (fcb7f62) ui5-upload-collection: removed active and hover states (#4360) (cb76902), closes #4258 ui5-wizard: adjust content and navigator paddings based on spec (#4479) (303ecb1) ui5-wizard: make playground sample fully usable (#4457) (1416d42) playground: fix broken links (#4440) (eb796f7) playground: fix js error for compact mode (#4325) (d9acff8) playground: adjust main wrapper paddings (#4480) (d742501) playground: apply RTL properly (#4468) (912a09e)",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.1.0.md/",
    "relUrl": "/playground/changelog/1.1.0.md/"
  },
  "33": {
    "id": "33",
    "title": "1.1.1",
    "content": "1.1.1 (2022-01-24) Bug Fixes ui5-media-gallery-item: add missing icon import (#4615) (d04cf8c) ui5-media-gallery-item: correct initialization order (#4614) (436f8f4), closes #4610 ui5-split-button: fix JS error when empty text content (#4612) (c407fd1), closes #4609 ui5-title: replace custom heading CSS vars with SAP theming-base vars (#4617) (baa02bb) Refactoring ui5-color-palette-popover: deprecate openPopover in favour of showAt (#4613) (4f2abdd)",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.1.1.md/",
    "relUrl": "/playground/changelog/1.1.1.md/"
  },
  "34": {
    "id": "34",
    "title": "1.1.2",
    "content": "1.1.2 (2022-01-26) Bug Fixes ui5-illustrated-message: remove uncompleted illustration (#4638) (adafeba) framework fix ipad recognition (#4632) (c0cc73d) framework remove import.meta.url (#4630) (604ce63) Features ui5-multi-input: improve keyboard handling support (#4495) (b978f4a)",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.1.2.md/",
    "relUrl": "/playground/changelog/1.1.2.md/"
  },
  "35": {
    "id": "35",
    "title": "1.10.0",
    "content": "Change Log All notable changes to this project will be documented in this file. See Conventional Commits for commit guidelines. 1.10.0 (2023-01-20) New component ui5-tree-item-custom: initial implementation (#5962) (b148c23) Typescript framework: rewrite the framework in Typescript and provide TS types for all framework APIs (#5982) (#6147) (#6159)(#6156) components: rewrite components in Typescript and provide TS types (#6076) (918b4fb) ui5-avatar: (#6272) (3f3a03f) ui5-bar: (#6194) ui5-badge: (#6287) ui5-breadcrumbs: (#6254) (02a6d64) ui5-button, ui5-date-picker, ui5-calendar: (#6173) (7232ca0), closes #6080 ui5-checkbox: (#6292) (49cef2d) ui5-card, ui5-card-header: (#6290) ui5-color-picker: (#6213) ui5-color-palette: (#6244) (ec3bf43) ui5-dialog: (#6276) ui5-daterange-picker: (#6246) (63986f5) ui5-dynamic-side-content: (#6209) ui5-file-uploader: (#6211) ui5-input: (#6235) ui5-illustrated-message: (#6195) (046c779) ui5-link: (#6204) ui5-list, ui5-li, ui5-li-custom: (#6166) (12b3570) ui5-menu: (#6224) ui5-message-strip: (#6248) (0325626) ui5-page: (#6205) ui5-panel: (#6202) ui5-popover: (#6235) ui5-progress-indicator: (#6201) ui5-responsive-popover: (#6288) ui5-slider: (#6251) (b9a082a) ui5-step-input: (#6225) ui5-split-button: (#6208) ui5-switch: (#6210) ui5-table, ui5-table-row, ui5-table-column, ui5-table-*: (#6253) ui5-timepicker: (#6240) (f1035eb) ui5-timeline: (#6206) ui5-viewsettings-dialog: (#6218) (ee3bbe4) ui5-upload-collection: (#6194) ui5-upload-collection-item: (#6296) Features framework: support decorators for defining custom elements metadata (#6072) (fc9ee6e) ui5-carousel: allow page indicator to always display numbers (#6245) (36ef5a6), closes #5409 ui5-icon: add new design property (#6261) (566c46b), closes #6019 ui5-illustrated-message: illustrations update in the default set (#6013) (329f80c) ui5-illustrated-message: updated missing illustration texts (#6075) (78c3227) ui5-input: correct disabled state style for horizon (#6046) (42a64e7) ui5-li: new imageContent slot is added (#6083) (2dc0d2c), closes #5462 ui5-li: navigation mode is enabled (#6024) (97afa69) ui5-menu: add open/opener functionality and open/close events (#5984) (951f09a) ui5-range-slider: expose shadow parts (#6258) (518fe86) ui5-shellbar: add new accessibilityAttributes property (#6117) (056ed9f) ui5-shellbar: programmatically show search field (#6085) (e0658a6), closes #5818 ui5-shellbar: use header semantic element (#6146) (9865eb2) ui5-table: add inline display property (#6007) (d41445f) ui5-textarea: integrate label enablement support (#6027) (e1b0271), closes #5710 ui5-wizard: adopt responsive paddings (#6061) (402bc28), closes #5597 ui5-card-header, ui5-radio-button, ui5-tabcontainer, ui5-dialog: display focus outline via keyboard only (#6084) (848997b) Bug Fixes framework: check and report validity of input components (#5987) (22d5f60) framework: add mapping for norwegian locale (#6284) (7fef62f), closes #6283 framework: fix processing of i18n text with formater (#6041) (f155dee) framework: set Content-Type header on testsuite (#6108) (fae3f91) ui5-multi-input, ui5-multi-combobox: remove value state message spacing (#6233) (fd13f96) ui5-avatar: fix icon rendering inside ui5-avatar (#6060) (9899466), closes #6043 ui5-avatar: fix incorrect img slot border alignment (#6133) (dc410d1), closes #5919 ui5-avatar: improve documentation of initials property (#6138) (8cc1303), closes #6136 ui5-button: adjust tooltip display (#5936) (98dd38e), closes #5083 ui5-calendar: adjust displayed width (#6196) (5eaf13c), closes #5641 ui5-calendar: set proper roledescription on the pickers (#6197) (ebd3cc0), closes #5858 ui5-carousel: fix screen readers reading when a page is changed (#6105) (5da4e5f) ui5-checkbox: fix focus outline (#6033) (3fa961c), closes #5915 ui5-date-picker: align styles to input (#6149) (8d3e3f1) ui5-dialog, ui5-popover: change header level to H1 (#6293) (a9130e8) ui5-dialog: fix block layers when multiple dialogs are open (#6183) (018f521) ui5-icon: add cursor “pointer” for interactive icons (#6042) (58fba64) ui5-icon: improve showTooltip property documentation (#6165) (10849b7) ui5-illustrated-message: fix i18n texts (#6037) (68350bc), closes #5974 ui5-illustrated-message: fix resizing issues (#6179) (d52c8af) ui5-input: correct input value on item re-selection (#6252) (17bedbe), closes #6091 ui5-input: fix typo in renderer (#6185) (0134ed1) ui5-input: make icons responsive when height is changed (#5908) (3d3f047) ui5-li: allow support for anchor tags in ListItem (#6126) (db51f59), closes #6121 ui5-li: bottom border is now visible in evening horizon (#6129) (3dbd53d), closes #6116 ui5-multi-combobox: delete long tokens when icon is clicked (#6069) (18e0b6e), closes #6048 ui5-multi-combobox: force tokenizer layouting when selected items are added (#6168) (9760c61), closes #6092 ui5-multi-combobox: prevent tokenizing of group headers (#6230) (ff920da), closes #6222 ui5-multi-input: focus input when all tokens are deleted (#6170) (f087209), closes #6073 ui5-panel: remove aria controls from expand button (#6167) (473e4bb), closes #6157 ui5-popover: clicking on iframe now closes an open popover (#6145) (f01e872), closes #6087 ui5-range-slider: fire change event after value swapping (#6057) (4134a7c) ui5-segmented-button: align mousedown and mouseup on item behaviour (#6142) (9d687d8), closes #5390 ui5-select: correct typo in –_ui5_select_label_color (#6217) (117b9f8) ui5-shellbar: fixed typo in samples (#6128) (c6799f4), closes #6116 ui5-shellbar: focus on popover fixed (#6113) (61c9989) ui5-side-navigation: fixed accessibility of the Popover (#6045) (e0e13e1), closes #5827 ui5-side-navigation: fixed accessibility roles and attributes when Side Navigation is collapsed (#5877) (92b9dc9), closes #5827 ui5-side-navigation: focus handling of tree inside popover (#6155) (cf024bd) ui5-split-button: add split-arrow-down icon to dependencies (#6065) (1473859) ui5-tabcontainer: added tab expand button tooltip (#6100) (8d81f01) ui5-tabcontainer: adding selected tab programatically deselects previously selected tab (#6036) (e73ec21), closes #5932 #5932 ui5-table: apply correct color to the header row text (#6232) (6ad1c4c) ui5-textarea: adjust styles according to the visual specification (#6274) (2075b2c) ui5-textarea: fix the minimum width of the component (#6054) (1b5b24a) ui5-tokenizer: apply correct color to N-more text (#6267) (7208c2f) ui5-tree: change isTreeItem getter visibility (#6200) (9a7c91a) ui5-tree: correct forwarding of mode value to items (#6277) (665107b) ui5-wizard: allow scrolling when step is bigger than viewport (#6241) (259b61a) ui5-wizard: prevent step overlapping in navigator (#6169) (9349e16), closes #6067",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.10.0.md/",
    "relUrl": "/playground/changelog/1.10.0.md/"
  },
  "36": {
    "id": "36",
    "title": "1.2.0",
    "content": "1.2.0 (2022-03-01) Features icons: add and update icons from 4.13 and 5.01 icon fonts (#4790) (a9e88f0) ui5-view-settings-dialog: add more event.details to confirm/cancel events (#4772) (a3eca7a), closes #4539 ui5-breadcrumbs: make item-click event preventable (#4589) (ccb4c83) ui5-button: add new tooltip property (#4737) (df8f013), closes #4689 ui5-button: implement accessibilityAttributes property (#4655) (d27c4b5), closes #3546 ui5-illustrated-message: add TNT illustrations (#4710) (822a73c) ui5-input: implement showClearIcon property (#4641) (b1c1620) ui5-link: provide accessible-name support (#4711) (6597afa), closes #4498 ui5-popover, ui5-responsive-popover, ui5-dialog: add open property (#4653) (af70586), closes #3527 ui5-popover, ui5-responsive-popover, ui5-dialog: аdd default responsive paddings (#4567) (ddc1e39), closes #4402 ui5-rating-indicator: add accessibility enhancements (#4736) (f8dc9f0) ui5-side-navigation: make selection-change event preventable (#4732) (d908465), closes #4700 ui5-switch: provide accessible-name attribute support (#4735) (ee6819f), closes #4147 ui5-table: extend keyboard handling (#4631) (f1f2b1b)(#4550) (8daa764), closes #3090 ui5-timeline: add accessible-name support (#4721) (0562e89), closes #4644 ui5-tokenizer: implement token range deletion (#4750) (cece8d7) ui5-tree: make item-click event preventable (#4708) (29967f0), closes #4502 docs: remove attribute name for Object props (#4680) (1741bd6), closes #4674 Bug Fixes framework: fix runtime JS error in base TabbableElements util (#4704) (650473f) framework: replace HTML comments with HBS ones (#4681) (ddc38eb) inputs: import used icons (#4712) (2041ff3) ui5-popover: correct list items height of input drop-downs (#4650) (11f8ada), closes #4616 ui5-badge: update color-scheme parameters (#4678) (c7d75ef), closes #3940 ui5-button: remove focus on phone and tablet (#4746) (31915d7) ui5-calendar: adjust picker styles (#4672) (3afe7a8) ui5-color-palette-popover: fix showDefaultColor works (#4802) (f93f22f) ui5-color-picker: adjust hue value update when user presses over the main color section (#4601) (4b03374), closes #4540 ui5-color-picker: enable hex value input change on enter (#4621) (cf45552), closes #4541 ui5-combobox: prevent dropdown closing on scroll (#4773) (199e860) ui5-date-picker: remove combobox role (#4706) (2d457c9) ui5-daterange-picker: fix runtime change of delimiter(#4693) (ec02855), closes #2925 ui5-file-uploader: fix the console warning (#4605) (197f3f9), closes #4592 ui5-flexible-column-layout: fix accessibility of hidden columns (#4811) (d9f514f), closes #4789 ui5-input: render aria-invalid properly (#4734) (81a00d7), closes #4723 ui5-input: delete whole value of ui5-input with type number when… (#4760) (0aa9979) ui5-input: improve lazy loading behaviour (#4763) (35342be) ui5-label: allow focusing elements linked with for attribute inside a shadow root (#4754) (bd7a8a1), closes #4751 ui5-li-tree: correct usage of i18nBudnle (#4668) (67848d7) ui5-list: fix separators in SAP Horizon (#4805) (6a814b3) ui5-list: fix initial focus target (#4809) (cf6dd1a) ui5-media-gallery-item: correct JS DOC (#4819) (5783fa7) ui5-multi-combobox: add value selection on focus (#4804) (08ea794) ui5-popover, ui5-dialog: body styles are no longer modified (#4813) (1754496), closes #4347 ui5-select: fix incorrect popover styles when value state is used (#4651) (2d8ce46) ui5-tabcontainer: fix overflow button runtime error (#4780) (08d75fa), closes #4770 ui5-tabcontainer: replace hardcoded text (#4815) (439033c), closes #4810 attached boot tasks always run (#4777) (ad4608c) describe all dependencies for some components (#4807) (1cf148f) ui5-slider: prevent handle jumping on focus (#4752) (dc2de5b) ui5-slider: sets correct color to tickmarks based on theme (#4677) (4aecd48) ui5-switch: adjust focus outline (#4665) (0cb6580), closes #2925 ui5-switch: adjust focus outline (#4717) (9d9d6c8) ui5-switch: role checkbox is changed to role switch (#4658) (ec6ca80), closes #4633 ui5-tabcontainer: await for renderFinished in resize handler (#4675) (cd8dc26), closes #4628 ui5-table-row: align checkbox vertically (#4696) (62ae8dc) ui5-textarea: enhance aria-invalid attribute handling (#4767) (f2fd6fb) ui5-view-settings-dialog: improve title text accessibility (#4783) (88a13df), closes #4660 ui5-wizard: prevent unnecessary content scrolling (#4774) (751db3f) docs: display methods in child components API (#4792) (1929d08)",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.2.0.md/",
    "relUrl": "/playground/changelog/1.2.0.md/"
  },
  "37": {
    "id": "37",
    "title": "1.2.1",
    "content": "1.2.1 (2022-03-02) Bug Fixes ui5-multi-combobox: prevent scrolling on page up/down (#4835) (6c85e8d) ui5-responsive-popover: fix auto close during re-rendering (#4828) (5859ce7), closes #4816 ui5-segmented-button-item: adopt inherited tooltip property (#4843) (b04db63), closes #4840 ui5-view-settings-dialog: fix circular dependency JS error (#4844) (057a7d8), closes #4837 ui5-multi-combobox, ui5-tokenizer: improve Home/End implementation (#4796) (8d83d33)",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.2.1.md/",
    "relUrl": "/playground/changelog/1.2.1.md/"
  },
  "38": {
    "id": "38",
    "title": "1.3.0",
    "content": "1.3.0 (2022-04-19) New Components ui5-menu: Initial implementation (#4742) (deac309) Features framework: configure default icon collection per theme (#5031) (7f84b83) inputs: implement SAP Horizon theme family (#5003) (26aff35) ui5-breadcrumbs: add position numbering scheme “x of y” (#4703) (35e2c96) ui5-button: implement SAP Horizon theme family (#4912) (43761ad) ui5-card: implement SAP Horizon theme family (#4974) (0137225), closes #5006 ui5-checkbox: implement required property (#5055) (d6a56cb), closes #4895 ui5-dialog: set horizon themes parameters (#4925) (1f3d212) ui5-fcl: implement SAP Horizon theme family (#5071) (7a2a568), closes #5008 ui5-icon: implement SAP Horizon theme family (#5080) (6db8956), closes #5008 ui5-input: introduce openPicker() public method (#4971) (7e08a75) ui5-link: implement SAP Horizon theme family (#5011) (ee44117) ui5-message-strip: implement SAP Horizon theme family (#4941) (8919965) ui5-multi-combobox: add cut/copy &amp; paste handling (#4854) (18c5912) ui5-multi-combobox: improve F4/Alt+Down focus handling (#4825) (01b56f3) ui5-multi-combobox, ui5-tokenizer: handle ‘Space’ key combinations (#4817) (0fbe1e1) ui5-multi-combobox, ui5-tokenizer: complete arrow navigation functionality (#4784) (25cc16c) ui5-option: add additional-text property (#5065) (84d9f5f), closes #4999 #4999 ui5-panel: implement SAP Horizon theme family (#5058) (67565d5), closes #5007 ui5-radio-button: implement new value states - Success and Information and implement SAP Horizon theme family (#4913) (c85ad95) ui5-select: add aria-roledescription attribute (#4921) (e19a914), closes #2910 ui5-tabcontainer: enable nested tabs (#4705) (3e715c4) ui5-tabcontainer: implement SAP Horizon theme family (#4981) (0b90287) ui5-table: add ‘accessibleName’ and ‘accessibleNameRef’ properties (#4994) (a4ef3cb) ui5-wizard: implement SAP Horizon theme (#5076) (801069d) busy indicator enablement (#4832) (c49c97f) ui5-table: implement SAP Horizon theme family (#4992) (5c2a056), closes #4938 ui5-textarea: implement SAP Horizon theme family (#5018) (f5d56e2) ui5-toast: implement SAP Horizon theme family (#4864) (346fa64) Bug Fixes framework: make listeners passive (#5012) (30f2dc7) framework: fix F6 navigation on windows browsers (#4886) (36fd3d1) framework: fix submit event handling in forms (#4942) (883809f) framework: add 72-* font as system styles (#4934) (4b45d32) framework: fix scoping of self tag (#4952) (8d53e95) framework: fix js error if “sh” locale set (#4905) (979bca2), closes #4904 playground: fix search results (#4948) (af4aac1) ui5-avatar: align to latest sap_horizon specification (#4951) (80c1f42) ui5-avatar: fix wrong border-radius (#4877) (cb9f55f), closes #4873 ui5-card-header: prevent events from action slot to trigger header’s click event (#4965) (547ce9e), closes #4891 ui5-checkbox: align to latest sap_horizon specification (#4972) (be9e6bc) ui5-color-palette: adapt components with responsive paddings (#4985) (9de7198), closes #4869 ui5-color-picker: fix RTL visual issues (#4966) (ae76500), closes #4892 ui5-combobox: disable autocomplete on Android (#5088) (7353188) ui5-date-picker: adjust initial value formatting (#4967) (304e73b), closes #4958 #4958 ui5-date-picker: handle date selection via enter keyboard key (#4863) (fc2cec0), closes #4826 ui5-date-picker: remove aria-expanded attribute (#4866) (381c884), closes #4865 ui5-date-picker: remove timezone test (#4829) (14552cf) ui5-date*-picker: adjust the date and time pickers accessibility attributes (#4996) (229efcc), closes #4946 ui5-datetime-picker: adapt components with responsive paddings (#4977) (6c5e516), closes #4869 ui5-datetime-picker: enable secondary calendar type (#4970) (6a096cb), closes #4959 ui5-flexible-column-layout: correct column border styles for RTL (#4919) (660f639), closes #4906 ui5-illustrated-message: remove offensive characters (#4929) (cbf5b02) ui5-illustrated-message: update illustrations (#4950) (6ff4e1b) ui5-input: activeElement is now correct in case of nested components (#5005) (199d974) ui5-label: prevent screenreader announcement of colon and asterisk (#5072) (b5d5a3f), closes #4830 ui5-li: correct focus handling (#4935) (2b82342) ui5-link: remove double click event (#5038) (4b95bc8), closes #4963 #4963 ui5-list: correct keyboard handling (#4890) (8c27355) ui5-media-gallery: correct overflow label (#4903) (4f28a6e) ui5-multi-combobox: display placeholder consistently (#4920) (359d1a3), closes #4897 ui5-multi-input: correct header paddings in nMore popover (#5040) (b06d608) ui5-multi-input: improve backspace and home handling (#4646) (fa2a700) ui5-page: Allow developers to be able to overwrite responsive paddings (#5056) (b09dd35) ui5-popover: fix auto close when opener is outside the viewport (#4847) (c944efd), closes #4716 ui5-popover: prevent arrow placement over popover’s rounded corners (#4960) (994871d), closes #4599 #4797 ui5-responsive-popover: allow opening a popover from component (#5070) (241a112), closes #5028 ui5-shellbar: searchfield placeholder color (#5079) (aba6aab) ui5-step-input: align the min width to visual specification (#4884) (197fef1), closes #4786 ui5-tabcontainer: add missing dependency in Tab (#5069) (b03c56b), closes #5037 ui5-shellbar, ui5-breadcrumbs, ui5-barcode-scanner-dialog: align popover paddings (#4894) (b947d1b), closes #4872 ui5-tabcontainer: fix overflow button visibility (#4836) (8e67748), closes #4690 ui5-time-picker: firing change event after input change submit (#4962) (2e3f428), closes #4918 ui5-view-settings-dialog: adjust scrollbar behavior (#4795) (8f58fd5), closes #4724 #4725 #4860 ui5-view-settings-dialog: fixing comments from previous commit (#4851) (3fc5814) ui5-view-settings-dialog: including title in initial reading (#4827) (685d4ba), closes #4660 ui5-view-settings-dialog: replacement of the slot with ui5 li element (#5013) (839ddf8), closes #4888 ui5-view-settings-dialog: visual alignment (#4867) (8a628df), closes #4102 #3744 #4838 popups: correct responsive padding in some consumers of popups (#4926) (b501153), closes #4870",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.3.0.md/",
    "relUrl": "/playground/changelog/1.3.0.md/"
  },
  "39": {
    "id": "39",
    "title": "1.3.1",
    "content": "Change Log All notable changes to this project will be documented in this file. See Conventional Commits for commit guidelines. 1.3.1 (2022-04-27) Refactoring framework: upgrade lit-html to 2.2.2",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.3.1.md/",
    "relUrl": "/playground/changelog/1.3.1.md/"
  },
  "40": {
    "id": "40",
    "title": "1.4.0",
    "content": "Change Log All notable changes to this project will be documented in this file. See Conventional Commits for commit guidelines. 1.4.0 (2022-05-25) New Themes SAP Horizon (updated to latest specs) SAP Horizon Dark SAP Horizon High Contrast Black SAP Horizon High Contrast White Features icons: use icon name as default module export (#5207) (c03d769), closes #5122 ui5-multi-combobox: add accessibleName and accessibleNameRef properties (#5187) (0d80a2c) ui5-input: implement type ahead (autocomplete) (#5211) (ec44888) ui5-rating-indicator: implement small icons for readonly and disabled (#5233) (405a598) ui5-tabcontainer: enable semantic icons in High Contrast themes (#5124) (3a13acf), closes #2540 Bug Fixes framework: use fonts from proper SDK URL (#5141) (2e49248) framework: fix keydown events for all inputs (#5188) (11dfe94) framework: fix passive listeners for mobile (#5153) (3ffec52) framework: fix fallback to default theme (#5185) (0fc2f0d), closes #5136 #5136 ui5-breadcrumbs: set aria-current to the focused element (#5214) (20d8b83) ui5-calendar: adjust previous and next button styles (#5226) (87f6b36), closes #5117 ui5-calendar: correct month button text localization (#5246) (04f2b08) ui5-calendar: fix displayed month name (#5212) (b03c3ea) ui5-color-palette: align buttons to spec (#5170) (9f7f382), closes #4976 ui5-color-picker: align the slider to horizon spec (#5209) (fd97a42) ui5-color-picker: provide meaningful labels for the inner input components (#5217) (a7de0cd), closes #5015 #5023 ui5-illustrated-message: make component language aware (#5158) (5b6502b) ui5-input: adjust maxlength property documentation (#5253) (0c01d9f) ui5-input: correct value-state styles in readonly and disabled (#5208) (87bea32) ui5-input: prevent exception if there are suggestion but property is false (#5219) (eb57cef) ui5-multi-combobox: set correct height to items checkboxes (#5216) (0946207) ui5-page: remove unnecessary scrollbar (#5258) (8ef6289) ui5-panel: animate just the icon without button (#5164) (fe4ce06) ui5-panel: fix typo in CSS var name (#5202) (854673d), closes #5201 ui5-rating-indicator: use SVG icons (#5191) (0782cf7) ui5-select: correct picker width (#5240) (9bd9d24) ui5-select: select correct item by typing text (#5252) (24401b2) ui5-switch: adjust additional description announcements (#4927) (4fb44e8), closes #4887 ui5-tabcontainer: provide unique names for each disabled slot (#5241) (3582127), closes #5178 ui5-table: adjust colspan value in MultiSelect mode (#5256) (405702c) ui5-textarea: adjust focus outline offset (#5101) (cc5c3bd) ui5-textarea: adjust placeholder styling (#5179) (fab2b61) ui5-textarea: prevent valueState if maxlength is exceeded (#5237) (ed9d74f)",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.4.0.md/",
    "relUrl": "/playground/changelog/1.4.0.md/"
  },
  "41": {
    "id": "41",
    "title": "1.5.0",
    "content": "1.5.0 (2022-07-03) Bug Fixes framework: fix F6Navigation on Windows OS (#5424) (a494f85) framework: fix form support to respect required attribute (#5133) (ff044b0), closes #3498 framework: correct use of arrow keys for ItemNavigation in RTL (#5408) (cec8119), closes #5166 ui5-avatar-group: adapt width calculations in composite layouts (#5357) (d176800), closes #5333 ui5-badge: correctly detect if default slot is provided (#5334) (0dceaf5), closes #5328 ui5-button: adjust icon role (#5355) (1aac3c5), closes #5288 ui5-card: refactor header to avoid nesting interactive elements (#5301) (9b33bad) ui5-carousel: correct navigation buttons behavior (#5302) (34027cd), closes #5125 ui5-checkbox: correct label color in Horizon (#5375) (659cd7f), closes #5364 ui5-combobox: change event is now fired on Enter if value is cha… (#5284) (b8a4854) ui5-combobox, ui5-multi-combobox: adjust dropdown width according to the visual specification (#5371) (e585304) ui5-dialog: add height to footer and samples achieving fiori footer design (#5338) (03269f4) ui5-dialog: improved shrinking dialog when resizing (#5291) (997f2a2), closes #5265 ui5-dialog: make header text bold (#5266) (42c0cbe), closes #5230 ui5-dialog: reposition on screen resize (#5283) (c2341e8) ui5-input: fix typeahead on mobile devices (#5292) (edcdd24) ui5-input: refactor change event (#5296) (17465e3) ui5-li: correct accessible-name mappings (#5280) (21ed1ee) ui5-link: enable overstyling (#5366) (a359ebf), closes #5267 #5218 ui5-panel: set pointer cursor only over the header (#5275) (04c23b9) ui5-popover: avoid dangling aria-labelledby attribute (#5428) (21d5457), closes #3956 ui5-rating-indicator: apply correct styles for focus in HC themes (#5289) (4531582) ui5-rating-indicator: import ui5-icon as used in template (#5320) (885e359), closes #5318 ui5-shellbar: correct accessibility DOM (#5395) (aba5fb5) ui5-shellbar: document new accessibility property (#5425) (8d4db8b), closes #4009 cldr url (#5397) (a4df0bd) document new accessibility properties (#5417) (40e80e4), closes #4500 #3546 ui5-slider, ui5-range-slider: adjust padding to spec (#5343) (bfbd23f), closes #4801 ui5-tabcontainer: make disabled tabs focusable in overflow (#5300) (c39917f) ui5-timeline-item: align text in title link (51954b7), closes #5163 Features ui5-datetime-picker: make change event preventable (#5286) (7395dc3), closes #4684 #5121 ui5-illustrated-message: implement size` property (#5405) (c58690d) ui5-link, ui5-breadcrumbs: add modifiers detals to click event (#5228) (379cc7b) ui5-multi-combobox: implement type ahead (autocomplete) (#5358) (b8e46f4) ui5-multi-combobox: introduce grouping` functionality (#5250) (597a6f2) ui5-view-settings-dialog: iplement behaviour for external setting of confirmed settings (#5222) (7fbb235)",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.4.0.md/",
    "relUrl": "/playground/changelog/1.4.0.md/"
  },
  "42": {
    "id": "42",
    "title": "1.6.0",
    "content": "Change Log All notable changes to this project will be documented in this file. See Conventional Commits for commit guidelines. 1.6.0 (2022-07-25) Features InvisibleMessage: make it available for application usage (#5468) (c6bcc02) ui5-calendar: show months and years from both primary and secondary calendar (#5412) (d5dc7ec) ui5-radio-button: add accessibleName property (#5548) (967b441), closes #5516 ui5-shellbar: new property accessibilityRoles (#5551) (eef5c50), closes #4775 Bug Fixes Form Enablement: correct submit event behaviour (#5500) (07237ec) Invisible Message: clear announcement after a while (#5446) (af213f1) All Inputs: adjust placeholder styling (#5547) (c427344) ui5-bar: implement resize handlers for each slot (#5482) (a8a4acd) ui5-card: correct accessibility attribute (#5479) (48ff032) ui5-combobox: annouce group item’s text when accessed via keyboard (#5478) (0f60574) ui5-combobox: correct ok and close buttons behavior on mobile (#5541) (fdf25c3) ui5-combobox: correctly fire change event on item press (#5447) (0218c19), closes #5432 ui5-date-picker: adjust background color (#5466) (7ea3f49), closes #5396 ui5-date-picker: adjust value help icon role (#5419) (56cc995), closes #5378 ui5-input: enhance lazy loading (#5370) (73010dc) ui5-input, ui5-multi-input, ui5-combobox, ui5-multi-combobox: announce value state type (#5515) (82317d0), closes #5392 ui5-li: correct accessibility attribute to checkbox (#5475) (88f278b) ui5-li-groupheader: use group role on UL nodes only (#5518) (1010f73), closes #5400 ui5-list: focus handling on nested lists (#5502) (5d4ae79) ui5-multi-combobox: fix component scoping (#5553) (9c26e8e), closes #5521 ui5-panel: add tooltip to expand/collapse icon (#5543) (533469d) ui5-panel: enhance aria-labelledby handling (#5539) (410dee1) ui5-radio-button: correct keyboard navigation in RTL (#5529) (bc726a9) ui5-select: announce value state type (#5538) (c0f8a2a) ui5-table: render selectAll checkbox only in case ui5-table is not empty (#5523) (cbf23d1) ui5-title: use correct font-family for Horizon Themes (#5457) (62c4c20) framework: fix create-package bugs (#5517) (f528f5c)",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.6.0.md/",
    "relUrl": "/playground/changelog/1.6.0.md/"
  },
  "43": {
    "id": "43",
    "title": "1.7.0",
    "content": "Change Log All notable changes to this project will be documented in this file. See Conventional Commits for commit guidelines. 1.7.0 (2022-09-02) Bug Fixes framework: correctly calculate accessibleNameRef (#5520) (a872c9b), closes #5452 framework: fix usage of quotes in translated texts (#5655) (3484b74) framework: regenarete base styles on change (#5599) (8a4ccdb) framework: remove woff files and woff/ttf usage (#5629) (e4175cd) ui5-avatar-group: fix width calculations for (non-)Chromium browsers (#5737) (2741705), closes #5643 ui5-badge: correct imports of horizon Badge CSS files (#5673) (583a63d) ui5-bar: adjust resizing behavior (#5678) (b6efba2) ui5-breadcrumbs: current location misalignment is fixed (#5585) (b685860) ui5-button: adjust icon role (#5714) (5b446f5), closes #5505 #5596 #5687 ui5-button: announce is now correct when button is icon only with tooltip (#5592) (7703945), closes #5386 ui5-button: correct calculation of the min width of an icon button (#5701) (005ada0) ui5-button: correct text shadow in contrast themes (#5750) (7fb7e4c), closes #5420 ui5-button: provide tooltip for icon-only buttons (#5734) (d49427f), closes #5687 #5596 #5505 ui5-calendar: adjust high contrast belize themes (#5756) (4d19f91), closes #5377 ui5-calendar: adjust the role attribute of the header actions elements (#5723) (3acd9bf), closes #5708 ui5-calendar: align year and month picker focus to horizon (#5692) (02816a9), closes #5644 ui5-date-picker: focus out now closes the popup (#5603) (0a7fcac), closes #5532 ui5-date-picker: remove background whitespace (#5764) (2ad0c44), closes #5640 ui5-daterange-picker: handle single date value (#5769) (ce8a446) ui5-input: additional check added for robustness (#5619) (7275652), closes #5580 ui5-input: allows changing value in selection change event handler (#5677) (46b175f) ui5-input: correction of change event (#5671) (b89f91c) ui5-input: fix item selection bugs (#5372) (274efaa) ui5-li-notification: align actions’ texts to the left (#5706) (f746016), closes #5704 ui5-link: fix multiple click events (#5642) (74fd5b9) ui5-list: remove unexpected spaces between group items (#5726) (d69932c), closes #3869 #5720 ui5-menu: opening a submenu no longer throws a console error (#5591) (1b5caf7), closes #5582 ui5-menu: prevent closing sub menu when hovering over icon (#5670) (36cb3d2), closes #5669 ui5-multi-input: prevented token-delete event firing when readonly (#5613) (c8f4178), closes #5448 ui5-panel: make heading accessible (#5628) (6f1b250) ui5-panel: toggle ui5-panel correctly on Enter key (#5660) (137d8f3) ui5-popup: allow synchronous opening of popup from another popup with Enter key (#4975) (1bb87f5), closes #4861 ui5-select: selected option in dropdown is now read out (#5589) (f8ab6ed) ui5-slider, ui5-range-slider: apply correct handle’s icon (#5612) (1706174) ui5-tabcontainer: update tab strip on tab selection (#5449) (bbc9246), closes #5172 #5116 ui5-textarea: show exceeded text when maxLength is 0 (#5691) (52db670), closes #5384 ui5-time-picker: remove ampm translation (#5751) (4943ef9), closes #5181 ui5-tokenizer: adjust scrolling behavior (#5281) (572ca8d) ui5-tree: include targetItem in selection-change event (#5631) (dc73fe2), closes #5430 ui5-view-settings-dialog: focus correct page on open (#5746) (d7a8e10), closes #5451 ui5-view-settings-dialog: update setConfirmedSettings param string type from String to Object (#5534) (da16e2c) Features framework: add CSS class to reset scrollbar styles (#5623) (c3f3063) framework: support registering SVG icons with multiple paths (#5630) (ce17ca5), closes #5347 #5526 icons-business-suite: add new icons (#5763) (e4bfc82) icons: update to 4.14.0 and 5.0.2 SAP-Icons font (#5605) (d794c0b) ui5-avatar: introduce badge support (#5418) (816edf0) ui5-carousel: add new CSS Shadow part (#5700) (b60ff3f) ui5-dialog: add state property (#5587) (c680e7c) ui5-illustrated-message: introduce title slot (#5611) (16ec3a8), closes #5503 ui5-menu-item: add new accessibleName property (#5727) (51987c8), closes #5514 #5656 ui5-popover: add new type DOMReference for opener (#5609) (1a4de12) ui5-tabcontainer: make tab-select event preventable (#5661) (928f4fc), closes #5116",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.7.0.md/",
    "relUrl": "/playground/changelog/1.7.0.md/"
  },
  "44": {
    "id": "44",
    "title": "1.8.0",
    "content": "Change Log All notable changes to this project will be documented in this file. See Conventional Commits for commit guidelines. 1.8.0 (2022-10-03) Bug Fixes framework: remove .com from URL font-face 72Black (#5822) (d2fc095) framework: improve fastgroup navigation (#5844) (f44f57b) playground: improved landing page responsveness (#5801) (ada5804) ui5-breadcrumbs-popover: aligned footer items (#5821) (b1aa6e7), closes #5810 ui5-dialog: correct imports in HC theme bundles (#5851) (3cef0d5), closes #5832 ui5-dialog: fix text selection when the dialog is draggable (#5724) (9e0c79f) ui5-illustrated-message: remove redundant scrollbar in RTL (#5819) (676adcd), closes #5788 ui5-input,ui5-combobox: remove ‘selected’ announcement (#5864) (e04adde) ui5-input: announce suggestion text once (#5817) (6225e10) ui5-input: enable autocomplete deletion by Meta/Alt + backspace (#5729) (df0fff6) ui5-input: handle deletion in numeric input (#5676) (3858adb), closes #4932 ui5-multi-combobox: apply focus when invoked explicitly (#5850) (212b2ef) ui5-panel: improve focus outline visualization (#5811) (83b244c) ui5-radio-button: correct syncing radio group when exiting DOM (#5859) (0dca9b2), closes #5803 ui5-side-navigation: toggle icon no longer shrinks with long text (#5837) (8a69be2), closes #5825 ui5-static-area-item: add tag as attr on the host (#5845) (885b20f) ui5-tabcontainer: fix closing overflow on mobile (#5855) (996714e), closes #5854 ui5-tabcontainer: fix error when no tabs (#5793) (cfb8951) ui5-tabcontainer: fix tabs accessibility issues (#5846) (e633b8b) ui5-table: add bottom border in Horizon themes (#5807) (63bbf89) ui5-table: adjust samples according to the guidelines (#5828) (debf472) ui5-table: apply correct padding in RTL mode (#5805) (301fc4e) ui5-table: count header row as first one (#5800) (9bef86f) ui5-textarea: announce value state type (#5798) (a689502), closes #5716 ui5-tokenizer: return correct token on delete event (#5744) (d694a88) Features icons: create type-definitions for icon imports (#5753) (2de4a04), closes #5747 #5335 icons: add support for custom SVG icons (#5865) (d8b7200) ui5-illustrated-message: add accessible-name-ref (#5765) (51165df) ui5-menu-item: implement additional-text (#5867) (bf991b6) ui5-tree: introduce accessibleName and accessibleNameRef properties (#5804) (2e3452a)",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.8.0.md/",
    "relUrl": "/playground/changelog/1.8.0.md/"
  },
  "45": {
    "id": "45",
    "title": "1.9.0",
    "content": "Change Log All notable changes to this project will be documented in this file. See Conventional Commits for commit guidelines. 1.9.0 (2022-10-31) Bug Fixes framework: fix activeElement in F6Nav when shadow root doesn’t exist (#5910) (f8a69b2) framework: remove additional fields from ACC tree in Forms(#5922) (fed99ed), closes #5917 framework: fix contexts management in hbs-2-lit compiler (#5958) (94d1619), closes #4701 framework: make static are items recognizable to OpenUI5 dialogs (#5888) (efaa1d6), closes #5634 playground: fix styles breaking on larger screens and visual issues (#5988) (93ef131) ui5-bardcode-scanner: imports of UMD modules work in all kinds o… (#5901) (af203b9) ui5-combobox: announce additional text of selected item (#5943) (4c1ca7d) ui5-icon: visualize the icons properly in Safari (#5871) (3f255d9) ui5-illustrated-message: prevent infinite resize (#5882) (a8413ad), closes #5852 ui5-input: type composition characters correctly (#5869) (5f61d11) ui5-label: improve “for” attribute accessibility reading (#5872) (b9ffaa6) ui5-li: apply proper border radius to avatar with image (#5942) (f200a76) ui5-listitem: prevent default event action when fire custom press event (#5928) (ed1efcc) ui5-multi-input: import value help icon (#5972) (b36be95) ui5-notifications: add missing imports for used icons (#5907) (a50a22f), closes #5905 ui5-radio-button: improve acc (#5880) (6616897) ui5-shellbar: outline buttons color on focus fixed for quartz (#5868) (f61df7e) ui5-tabcontainer: translate semantic design aria description (#5883) (f256d0b) ui5-table-row: refactor navigated property (#5976) (ba264af) ui5-table: announce whether a row is selected or not (#5930) (4d34fe9) ui5-table: enable focus navigation in popin content (#5900) (9fd81e2) ui5-table: remove role row as it is redundant (#5939) (a7fe699) ui5-time-picker: enable text spacing (#5940) (da7ae70), closes #5792 Features framework: add custom theme support for external CSS (#5887) (c7e2668) framework: fetch illustrations on demand (#5927) (f8e1033) framework: generate custom elements manifest (#5964) (0d62770) ui5-avatar: support of 3 letters is enabled (#5870) (43338e1) bf2fc4b43bea86d330eb66fbe60dc226e9e9f550)) ui5-li: introduce deleteButton slot (#5971) (ca40efd), closes #5826 ui5-link: make acceessibleRole property public (#5879) (6ce8b2d), closes #5686 ui5-radiobutton: add “required” property (#5937) (621b87a) ui5-switch: provide tooltip property (#5954) (5b5db73), closes #5552 ui5-table-row: added navigated property (#5946) (3c2a8a3) Refactoring ui5-barcodescanner: downgraded to lower helper version (#5925) ([bf2fc4b](https://github.com/SAP/ui5-webcomponents/commit/",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.9.0.md/",
    "relUrl": "/playground/changelog/1.9.0.md/"
  },
  "46": {
    "id": "46",
    "title": "1.9.1",
    "content": "Change Log All notable changes to this project will be documented in this file. See Conventional Commits for commit guidelines. 1.9.1 (2022-11-10) Bug Fixes tools: fix paths for generating illustration imports (#5997) (e932f7d)",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.9.1.md/",
    "relUrl": "/playground/changelog/1.9.1.md/"
  },
  "47": {
    "id": "47",
    "title": "1.9.2",
    "content": "Change Log All notable changes to this project will be documented in this file. See Conventional Commits for commit guidelines. 1.9.2 (2022-12-15) Features ui5-tree-item-custom: introduce new component https://github.com/SAP/ui5-webcomponents/commit/b148c23cf7ed11b4e17c9eda61a20fc48882ba4f theming update theming-base-content to 1.1.48https://github.com/SAP/ui5-webcomponents/commit/d642e7caaade0609e667837aaa50c5e28915ed32 Fixes ui5-side-navigation: fix focus handling of tree inside popover ([#5962]https://github.com/SAP/ui5-webcomponents/pull/5962)",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.9.2.md/",
    "relUrl": "/playground/changelog/1.9.2.md/"
  },
  "48": {
    "id": "48",
    "title": "1.9.3",
    "content": "Change Log All notable changes to this project will be documented in this file. See Conventional Commits for commit guidelines. 1.9.3 (2022-12-16) Documentation docs: fix JS Doc generation for Tree, TabContainer e932f7d",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/1.9.3.md/",
    "relUrl": "/playground/changelog/1.9.3.md/"
  },
  "50": {
    "id": "50",
    "title": "72override",
    "content": "&lt;!DOCTYPE html&gt; Button Đỗ",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/72override/",
    "relUrl": "/playground/main/pages/72override/"
  },
  "51": {
    "id": "51",
    "title": "Animanition Off",
    "content": "&lt;!DOCTYPE html&gt; Animations off This is a demo how to use the &quot;expand&quot; event. Some short text. Expandable but not expanded This is a demo how to use the &quot;expand&quot; event. Some short text.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/AnimanitionOff/",
    "relUrl": "/playground/main/pages/AnimanitionOff/"
  },
  "52": {
    "id": "52",
    "title": "Avatar",
    "content": "&lt;!DOCTYPE html&gt; Avatar Avatar - Basic sample Avatar - special characters in image path Avatar - Square [ XS, S, M, L, XL ] Avatar - Circle [ XS, S, M, L, XL ] Avatar - UI5 Icons Avatar - UI5 Icons Avatar - Background colors [ Accent1, Accent2, Accent3, Accent4, Accent5, Accent6, Accent7, Accent8, Accent9, Accent10, Placeholder ] Avatar - Initials Avatar - Custom Avatar with custom size Avatar with custom size and imageFitType=&quot;Contain&quot; Avatar - test Avatar - interactive Avatar - Visual affordance Avatar - Custom visual affordance 1 Avatar with three initials Avatar with three overflowing initials - icon should be shown",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Avatar/",
    "relUrl": "/playground/main/pages/Avatar/"
  },
  "53": {
    "id": "53",
    "title": "Avatar",
    "content": "Avatar v1.0.0-rc.6 @ui5/webcomponents &lt;ui5-avatar&gt; Basic Avatar &lt;ui5-avatar&gt; &lt;img src=&quot;../../../assets/images/avatars/man_avatar_1.png&quot; alt=&quot;Woman 1&quot;&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_4.png&quot; alt=&quot;Woman 4&quot;&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar shape=&quot;Square&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_5.png&quot; alt=&quot;Woman 5&quot;&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar shape=&quot;Square&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/man_avatar_3.png&quot; alt=&quot;Man 3&quot;&gt; &lt;/ui5-avatar&gt; Avatar Shapes &lt;ui5-avatar shape=&quot;Circle&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_3.png&quot; alt=&quot;Woman 3&quot;&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar shape=&quot;Square&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_4.png&quot; alt=&quot;Woman 4&quot;&gt; &lt;/ui5-avatar&gt; Avatar Sizes &lt;ui5-avatar size=&quot;XS&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_3.png&quot; alt=&quot;Woman 3&quot;&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;S&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_4.png&quot; alt=&quot;Woman 4&quot;&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;M&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_5.png&quot; alt=&quot;Woman 5&quot;&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;L&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/man_avatar_1.png&quot; alt=&quot;Man 1&quot;&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;XL&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/man_avatar_3.png&quot; alt=&quot;Man 3&quot;&gt; &lt;/ui5-avatar&gt; Avatar with UI5 Icons &lt;ui5-avatar icon=&quot;employee&quot; size=&quot;XS&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-avatar icon=&quot;employee&quot; size=&quot;S&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-avatar icon=&quot;employee&quot; size=&quot;M&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-avatar icon=&quot;employee&quot; size=&quot;L&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-avatar icon=&quot;employee&quot; size=&quot;XL&quot;&gt;&lt;/ui5-avatar&gt; Avatar with Initials &lt;ui5-avatar initials=&quot;XS&quot; color-scheme=&quot;Accent1&quot; size=&quot;XS&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-avatar initials=&quot;S&quot; color-scheme=&quot;Accent2&quot; size=&quot;S&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-avatar initials=&quot;M&quot; color-scheme=&quot;Accent3&quot; size=&quot;M&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-avatar initials=&quot;L&quot; color-scheme=&quot;Accent4&quot; size=&quot;L&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-avatar initials=&quot;XL&quot; color-scheme=&quot;Accent5&quot; size=&quot;XL&quot;&gt;&lt;/ui5-avatar&gt; Avatar object-fit types: Contain and Cover &lt;ui5-avatar id=&quot;myCustomAvatar&quot; shape=&quot;Square&quot; size=&quot;XL&quot; style=&quot;width: 250px; height: 250px; border: 1px solid var(--sapField_BorderColor)&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/Lamp_avatar_01.jpg&quot; alt=&quot;Lamp&quot; style=&quot;object-fit: cover&quot;&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar id=&quot;myCustomAvatar1&quot; shape=&quot;Square&quot; size=&quot;XL&quot; style=&quot;width: 250px; height: 250px; border: 1px solid var(--sapField_BorderColor)&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/Lamp_avatar_01.jpg&quot; alt=&quot;Lamp&quot; style=&quot;object-fit: contain&quot;&gt; &lt;/ui5-avatar&gt; Avatar with Visual Affordance 1 &lt;ui5-avatar shape=&quot;Circle&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_3.png&quot; alt=&quot;Woman 3&quot;&gt; &lt;ui5-badge slot=&quot;badge&quot;&gt; &lt;ui5-icon slot=&quot;icon&quot; name=&quot;filter&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-badge&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar initials=&quot;AB&quot; size=&quot;L&quot; shape=&quot;Circle&quot;&gt; &lt;ui5-badge slot=&quot;badge&quot;&gt; &lt;ui5-icon slot=&quot;icon&quot; name=&quot;document&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-badge&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar shape=&quot;Square&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_4.png&quot; alt=&quot;Woman 4&quot;&gt; &lt;ui5-badge slot=&quot;badge&quot;&gt; &lt;ui5-icon slot=&quot;icon&quot; name=&quot;accept&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-badge&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar initials=&quot;CD&quot; size=&quot;L&quot; shape=&quot;Square&quot;&gt; &lt;ui5-badge slot=&quot;badge&quot;&gt; &lt;ui5-icon slot=&quot;icon&quot; name=&quot;employee&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-badge&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar initials=&quot;AB&quot; color-scheme=&quot;Accent1&quot;&gt; &lt;span slot=&quot;badge&quot; class=&quot;custom-badge&quot;&gt;1&lt;/span&gt; &lt;/ui5-avatar&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; An image-like component that has different display options for representing images and icons in different shapes and sizes, depending on the use case. The shape can be circular or square. There are several predefined sizes, as well as an option to set a custom size. &lt;h3&gt;Keyboard Handling&lt;/h3&gt; [SPACE, ENTER, RETURN] - Fires the click event if the interactive property is set to true. [SHIFT] - If [SPACE] is pressed, pressing [SHIFT] releases the component without triggering the click event. ES6 Module Import import &quot;@ui5/webcomponents/dist/Avatar.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text alternative of the component. If not provided a default text alternative will be set, if present. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.7&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; colorScheme &lt;br&gt; &lt;code&gt;color-scheme&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;AvatarColorScheme&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Accent6&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the background color of the desired image. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Accent1&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Accent2&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Accent3&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Accent4&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Accent5&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Accent6&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Accent7&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Accent8&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Accent9&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Accent10&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Placeholder&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the name of the UI5 Icon, that will be displayed. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If &lt;code&gt;image&lt;/code&gt; slot is provided, the property will be ignored. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; You should import the desired icon first, then use its name as &quot;icon&quot;. &lt;br&gt;&lt;br&gt; import &quot;@ui5/webcomponents-icons/dist/{icon_name}.js&quot; &lt;br&gt; &lt;pre&gt;&amp;lt;ui5-avatar icon=&quot;employee&quot;&gt;&lt;/pre&gt; See all the available icons in the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; initials &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the displayed initials. &lt;br&gt; Up to three Latin letters can be displayed as initials. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; interactive &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the avatar is interactive (focusable and pressable). &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; shape &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;AvatarShape&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Circle&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the shape of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Circle&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Square&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; size &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;AvatarSize&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;S&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines predefined size of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;XS&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;S&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;M&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;L&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;XL&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;badge&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the optional badge that will be used for visual affordance. &lt;b&gt;Note:&lt;/b&gt; While the slot allows for custom badges, to achieve the Fiori design, please use &lt;code&gt;ui5-badge&lt;/code&gt; with &lt;code&gt;ui5-icon&lt;/code&gt; in the corresponding &lt;code&gt;icon&lt;/code&gt; slot, without text nodes. &lt;br&gt;&lt;br&gt; Example: &lt;br&gt;&lt;br&gt; &amp;lt;ui5-avatar&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;ui5-badge slot=&quot;badge&quot;&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;ui5-icon slot=&quot;icon&quot; name=&quot;employee&quot;&gt;&amp;lt;/ui5-icon&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/ui5-badge&gt;&lt;br&gt; &amp;lt;/ui5-avatar&gt; &lt;br&gt;&lt;br&gt; &lt;ui5-avatar initials=&quot;AB&quot; color-scheme=&quot;Accent1&quot;&gt; &lt;ui5-badge slot=&quot;badge&quot;&gt; &lt;ui5-icon slot=&quot;icon&quot; name=&quot;accelerated&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-badge&gt; &lt;/ui5-avatar&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Receives the desired &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag &lt;b&gt;Note:&lt;/b&gt; If you experience flickering of the provided image, you can hide the component until it is being defined with the following CSS: &lt;br /&gt; &lt;br /&gt; &lt;code&gt; ui5-avatar:not(:defined) { &lt;br /&gt; &amp;nbsp;visibility: hidden; &lt;br /&gt; } &lt;br /&gt; &lt;/code&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Avatar/",
    "relUrl": "/playground/components/Avatar/"
  },
  "54": {
    "id": "54",
    "title": "Avatar Group",
    "content": "&lt;!DOCTYPE html&gt; avatar-group Fiori 3 Fiori 3 Dark Fiori 3 High Contrast Black Fiori 3 High Contrast White Belize Belize High Contrast Black Belize High Contrast White or in the browser console, for example: window[&#39;sap-ui-webcomponents-bundle&#39;].configuration.setTheme(&quot;sap_belize_hcb&quot;) English | German | Spanish | French Test your web components here Business card this is footer Business card John Doe Software Developer this is footer Test Fired Events TargetRef Tag Name: Event Overflow Button Clicked: Avatars clicked count: Reset fields &quot;XS&quot; size &quot;S&quot; size Unordinary group AvatarGroup with user defined overflow button +99",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/AvatarGroup/",
    "relUrl": "/playground/main/pages/AvatarGroup/"
  },
  "55": {
    "id": "55",
    "title": "Avatar Group",
    "content": "Avatar Group v1.0.0-rc.11 @ui5/webcomponents &lt;ui5-avatar-group&gt; Avatar Group - type &quot;Individual&quot; John Doe Software Developer &lt;ui5-popover header-text=&quot;Person Card&quot; class=&quot;personPopover&quot; style=&quot;width: 300px&quot; placement-type=&quot;Bottom&quot; prevent-focus-restore&gt; ... &lt;ui5-avatar id=&quot;popAvatar&quot;&gt;&lt;/ui5-avatar&gt; ... &lt;/ui5-popover&gt; &lt;ui5-popover header-text=&quot;My people&quot; class=&quot;peoplePopover&quot; style=&quot;width: 400px&quot; placement-type=&quot;Bottom&quot;&gt; ... &lt;div class=&quot;placeholder&quot; style=&quot;display: flex; flex-wrap: wrap;&quot;&gt;&lt;/div&gt; ... &lt;/ui5-popover&gt; &lt;ui5-avatar-group type=&quot;Individual&quot;&gt; &lt;ui5-avatar size=&quot;M&quot; icon=&quot;employee&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;M&quot; initials=&quot;JD&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;M&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_5.png&quot; alt=&quot;Woman Avatar 5&quot;&gt; &lt;/ui5-avatar&gt; ... &lt;/ui5-avatar-group&gt; &lt;script&gt; const avatarGroup = document.querySelector(&quot;ui5-avatar-group&quot;); const peoplePopover = document.querySelector(&quot;.peoplePopover&quot;); const personPopover = document.querySelector(&quot;.personPopover&quot;); function onAvatarClicked(avatarRef) { personPopover.showAt(avatarRef); } function onButtonClicked(targetRef) { let html = &quot;&quot;; const firstHiddenIndex = avatarGroup.items.length - avatarGroup.hiddenItems.length; avatarGroup.hiddenItems.forEach((avatar, index) =&gt; { html += `&lt;ui5-avatar ... color-scheme=&quot;${avatarGroup.colorScheme[firstHiddenIndex + index]}&quot; &lt;/ui5-avatar&gt;`; }); placeholder.innerHTML = html; peoplePopover.showAt(targetRef); } avatarGroup.addEventListener(&quot;click&quot;, function (event) { if (event.detail.overflowButtonClicked) { onButtonClicked(event.detail.targetRef); } else { onAvatarClicked(event.detail.targetRef); } }); &lt;/script&gt; Avatar Group - type &quot;Group&quot; &lt;ui5-popover header-text=&quot;My people&quot; class=&quot;peoplePopover&quot; style=&quot;width: 400px&quot; placement-type=&quot;Bottom&quot;&gt; ... &lt;div class=&quot;placeholder&quot; style=&quot;display: flex; flex-wrap: wrap;&quot;&gt;&lt;/div&gt; ... &lt;/ui5-popover&gt; &lt;ui5-avatar-group type=&quot;Group&quot;&gt; &lt;ui5-avatar size=&quot;M&quot; icon=&quot;employee&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;M&quot; initials=&quot;JD&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;M&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_5.png&quot; alt=&quot;Woman Avatar 5&quot;&gt; &lt;/ui5-avatar&gt; ... &lt;/ui5-avatar-group&gt; &lt;script&gt; const slider = document.querySelector(&quot;ui5-slider&quot;); const avatarGroup = document.querySelector(&quot;ui5-avatar-group&quot;); const peoplePopover = document.querySelector(&quot;.peoplePopover&quot;); function onAvatarGroupClick(targetRef) { peoplePopover.showAt(targetRef); } avatarGroup.addEventListener(&quot;click&quot;, function (event) { onAvatarGroupClick(event.detail.targetRef); }); &lt;/script&gt; Avatar Group Sizes &lt;ui5-avatar-group type=&quot;Individual&quot;&gt; &lt;ui5-avatar size=&quot;S&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/man_avatar_1.png&quot; alt=&quot;Man Avatar 1&quot;&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;S&quot; initials=&quot;JD&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;S&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_5.png&quot; alt=&quot;Woman Avatar 5&quot;&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;S&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/man_avatar_3.png&quot; alt=&quot;Man Avatar 3&quot;&gt; &lt;/ui5-avatar&gt; &lt;/ui5-avatar-group&gt; &lt;br&gt; &lt;ui5-avatar-group type=&quot;Individual&quot;&gt; &lt;ui5-avatar size=&quot;M&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/man_avatar_1.png&quot; alt=&quot;Man Avatar 1&quot;&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;M&quot; initials=&quot;JD&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;M&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_5.png&quot; alt=&quot;Woman Avatar 5&quot;&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;M&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/man_avatar_3.png&quot; alt=&quot;Man Avatar 3&quot;&gt; &lt;/ui5-avatar&gt; &lt;/ui5-avatar-group&gt; &lt;br&gt; &lt;ui5-avatar-group type=&quot;Group&quot;&gt; &lt;ui5-avatar size=&quot;L&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/man_avatar_1.png&quot; alt=&quot;Man Avatar 1&quot;&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;L&quot; initials=&quot;JD&quot;&gt;&lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;L&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_5.png&quot; alt=&quot;Woman Avatar 5&quot;&gt; &lt;/ui5-avatar&gt; &lt;ui5-avatar size=&quot;L&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/man_avatar_3.png&quot; alt=&quot;Man Avatar 3&quot;&gt; &lt;/ui5-avatar&gt; &lt;/ui5-avatar-group&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; Displays a group of avatars arranged horizontally. It is useful to visually showcase a group of related avatars, such as, project team members or employees. The component allows you to display the avatars in different sizes, depending on your use case. The AvatarGroup component has two group types: &lt;ul&gt; &lt;li&gt;Group type: The avatars are displayed as partially overlapped on top of each other and the entire group has one click/tap area.&lt;/li&gt; &lt;li&gt;Individual type: The avatars are displayed side-by-side and each avatar has its own click/tap area.&lt;/li&gt; &lt;/ul&gt; Responsive Behavior When the available space is less than the width required to display all avatars, an overflow visualization appears as a button placed at the end with the same shape and size as the avatars. The visualization displays the number of avatars that have overflowed and are not currently visible. Usage Use the AvatarGroup if: &lt;ul&gt; &lt;li&gt;You want to display a group of avatars.&lt;/li&gt; &lt;li&gt;You want to display several avatars which have something in common.&lt;/li&gt; &lt;/ul&gt; Do not use the AvatarGroup if: &lt;ul&gt; &lt;li&gt;You want to display a single avatar.&lt;/li&gt; &lt;li&gt;You want to display a gallery for simple images.&lt;/li&gt; &lt;li&gt;You want to use it for other visual content than avatars.&lt;/li&gt; &lt;/ul&gt; Keyboard Handling The component provides advanced keyboard handling. When focused, the user can use the following keyboard shortcuts in order to perform a navigation: - type Individual: &lt;ul&gt; &lt;li&gt;[TAB] - Move focus to the overflow button&lt;/li&gt; &lt;li&gt;[LEFT] - Navigate one avatar to the left&lt;/li&gt; &lt;li&gt;[RIGHT] - Navigate one avatar to the right&lt;/li&gt; &lt;li&gt;[HOME] - Navigate to the first avatar&lt;/li&gt; &lt;li&gt;[END] - Navigate to the last avatar&lt;/li&gt; &lt;li&gt;[SPACE],[ENTER],[RETURN] - Trigger ui5-click event&lt;/li&gt; &lt;/ul&gt; - type Group: &lt;ul&gt; &lt;li&gt;[TAB] - Move focus to the next interactive element after the component&lt;/li&gt; &lt;li&gt;[SPACE],[ENTER],[RETURN] - Trigger ui5-click event&lt;/li&gt; &lt;/ul&gt; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; type &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;AvatarGroupType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Group&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the mode of the &lt;code&gt;AvatarGroup&lt;/code&gt;. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Group&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Individual&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the items of the component. Use the &lt;code&gt;ui5-avatar&lt;/code&gt; component as an item. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The UX guidelines recommends using avatars with &quot;Circle&quot; shape. Moreover, if you use avatars with &quot;Square&quot; shape, there will be visual inconsistency as the built-in overflow action has &quot;Circle&quot; shape.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;overflowButton&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the overflow button of the component. &lt;b&gt;Note:&lt;/b&gt; We recommend using the &lt;code&gt;ui5-button&lt;/code&gt; component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If this slot is not used, the component will display the built-in overflow button.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the component is activated either with a click/tap or by using the Enter or Space key. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.11&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;targetRef&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The DOM ref of the clicked item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;overflowButtonClicked&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; indicates if the overflow button is clicked&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;overflow&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the count of visible &lt;code&gt;ui5-avatar&lt;/code&gt; elements in the component has changed &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.13&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/AvatarGroup/",
    "relUrl": "/playground/components/AvatarGroup/"
  },
  "56": {
    "id": "56",
    "title": "Badge",
    "content": "&lt;!DOCTYPE html&gt; Badge Badges This is an info label Required Required Required Hello world Damn you are right Solution provided Available Required Required Required IN WAREHOUSE Done In Process Pending sap_horizon Grey Blue Teal Green Mango Red Pink Indigo",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Badge/",
    "relUrl": "/playground/main/pages/Badge/"
  },
  "57": {
    "id": "57",
    "title": "Badge",
    "content": "Badge v0.12.0 @ui5/webcomponents &lt;ui5-badge&gt; Basic Badge available 1 required 2 3K bug 4 in process 5 in warehouse 6 7$ solution provided 8 pending release 9 customer action 10 This would truncate as it is too long &lt;ui5-badge color-scheme=&quot;1&quot;&gt;available 1&lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;2&quot;&gt;required 2&lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;3&quot;&gt;3&lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;4&quot;&gt;bug 4&lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;5&quot;&gt;in process 5&lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;6&quot;&gt;in warehouse 6&lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;7&quot;&gt;7&lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;8&quot;&gt;solution provided 8&lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;9&quot;&gt;pending release 9&lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;10&quot;&gt;customer action 10&lt;/ui5-badge&gt; &lt;ui5-badge style=&quot;width:200px;&quot;&gt;This would truncate as it is too long&lt;/ui5-badge&gt; Badge with Icon done in process pending &lt;ui5-badge color-scheme=&quot;1&quot;&gt; &lt;ui5-icon name=&quot;accept&quot; slot=&quot;icon&quot;&gt;&lt;/ui5-icon&gt;done &lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;2&quot;&gt; &lt;ui5-icon name=&quot;sap-ui5&quot; slot=&quot;icon&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;3&quot;&gt; &lt;ui5-icon name=&quot;add-equipment&quot; slot=&quot;icon&quot;&gt;&lt;/ui5-icon&gt;in process &lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;4&quot;&gt; &lt;ui5-icon name=&quot;lab&quot; slot=&quot;icon&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;5&quot;&gt; &lt;ui5-icon name=&quot;email-read&quot; slot=&quot;icon&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;6&quot;&gt; &lt;ui5-icon name=&quot;pending&quot; slot=&quot;icon&quot;&gt;&lt;/ui5-icon&gt;pending &lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;7&quot;&gt; &lt;ui5-icon name=&quot;lightbulb&quot; slot=&quot;icon&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-badge&gt; &lt;ui5-badge color-scheme=&quot;8&quot;&gt; &lt;ui5-icon name=&quot;locked&quot; slot=&quot;icon&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-badge&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-badge is a small non-interactive component which contains text information and color chosen from a list of predefined color schemes. It serves the purpose to attract the user attention to some piece of information (state, quantity, condition, etc.). Usage Guidelines If the text is longer than the width of the component, it doesn’t wrap, it shows ellipsis. When truncated, the full text is not visible, therefore, it’s recommended to make more space for longer texts to be fully displayed. Colors are not semantic and have no visual representation in High Contrast Black (sap_belize_hcb) theme. ES6 Module Import import &quot;@ui5/webcomponents/dist/Badge&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; colorScheme &lt;br&gt; &lt;code&gt;color-scheme&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;1&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the color scheme of the component. There are 10 predefined schemes. Each scheme applies different values for the &lt;code&gt;background-color&lt;/code&gt; and &lt;code&gt;border-color&lt;/code&gt;. To use one you can set a number from &lt;code&gt;&quot;1&quot;&lt;/code&gt; to &lt;code&gt;&quot;10&quot;&lt;/code&gt;. The &lt;code&gt;colorScheme&lt;/code&gt; &lt;code&gt;&quot;1&quot;&lt;/code&gt; will be set by default. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Color schemes have no visual representation in High Contrast Black (sap_belize_hcb) theme. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the text of the component. &lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;icon&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the icon to be displayed in the component.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Badge/",
    "relUrl": "/playground/components/Badge/"
  },
  "58": {
    "id": "58",
    "title": "Bar",
    "content": "&lt;!DOCTYPE html&gt; Bar test page Title Title Header design Title Title Subheader design Start Button Basic Label Middle1 Button Middle2 Button Basic Label End Button Agree Decline Cancel Footer design Agree Decline Cancel FloatingFooter design Agree Decline Cancel ... Change Title",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/Bar/",
    "relUrl": "/playground/fiori/pages/Bar/"
  },
  "59": {
    "id": "59",
    "title": "Bar",
    "content": "Bar v1.0.0-rc.11 @ui5/webcomponents-fiori &lt;ui5-bar&gt; Header Bar Header Title &lt;ui5-bar design=&quot;Header&quot;&gt; &lt;ui5-button icon=&quot;home&quot; tooltip=&quot;Go home&quot; design=&quot;Transparent&quot; slot=&quot;startContent&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-label&gt;Header Title&lt;/ui5-label&gt; &lt;ui5-button icon=&quot;action-settings&quot; tooltip=&quot;Go to settings&quot; slot=&quot;endContent&quot;&gt;&lt;/ui5-button&gt; &lt;/ui5-bar&gt; Subheader Bar Subheader Title &lt;ui5-bar design=&quot;Subheader&quot;&gt; &lt;ui5-button icon=&quot;home&quot; tooltip=&quot;Go home&quot; slot=&quot;startContent&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-label&gt;Subheader Title&lt;/ui5-label&gt; &lt;ui5-button icon=&quot;action-settings&quot; tooltip=&quot;Go to settings&quot; slot=&quot;endContent&quot;&gt;&lt;/ui5-button&gt; &lt;/ui5-bar&gt; Footer Bar Agree Decline Cancel &lt;ui5-bar design=&quot;Footer&quot;&gt; &lt;ui5-button design=&quot;Positive&quot; slot=&quot;endContent&quot;&gt;Agree&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Negative&quot; slot=&quot;endContent&quot;&gt;Decline&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Transparent&quot; slot=&quot;endContent&quot;&gt;Cancel&lt;/ui5-button&gt; &lt;/ui5-bar&gt; FloatingFooter Bar Agree Decline Cancel &lt;ui5-bar design=&quot;FloatingFooter&quot;&gt; &lt;ui5-button design=&quot;Positive&quot; slot=&quot;endContent&quot;&gt;Agree&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Negative&quot; slot=&quot;endContent&quot;&gt;Decline&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Transparent&quot; slot=&quot;endContent&quot;&gt;Cancel&lt;/ui5-button&gt; &lt;/ui5-bar&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The Bar is a container which is primarily used to hold titles, buttons and input elements and its design and functionality is the basis for page headers and footers. The component consists of three areas to hold its content - startContent slot, default slot and endContent slot. It has the capability to center content, such as a title, while having other components on the left and right side. Usage With the use of the design property, you can set the style of the Bar to appear designed like a Header, Subheader, Footer and FloatingFooter. Note: Do not place a Bar inside another Bar or inside any bar-like component. Doing so may cause unpredictable behavior. Responsive Behavior The default slot will be centered in the available space between the startContent and the endContent areas, therefore it might not always be centered in the entire bar. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-bar exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;bar - Used to style the wrapper of the content of the component&lt;/li&gt; &lt;/ul&gt; Keyboard Handling Fast Navigation This component provides a build in fast navigation group which can be used via F6 / Shift + F6 or Ctrl + Alt(Option) + Down / Ctrl + Alt(Option) + Up. In order to use this functionality, you need to import the following module: import &quot;@ui5/webcomponents-base/dist/features/F6Navigation.js&quot; ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/Bar.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; design &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;BarDesign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Header&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the component&#39;s design. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Header&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Subheader&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Footer&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;FloatingFooter&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content in the middle of the bar&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;endContent&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content at the end of the bar&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;startContent&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content at the start of the bar&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Bar/",
    "relUrl": "/playground/components/Bar/"
  },
  "60": {
    "id": "60",
    "title": "Barcode Scanner Dialog",
    "content": "&lt;!DOCTYPE html&gt; Barcode Scanner Scan",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/BarcodeScannerDialog/",
    "relUrl": "/playground/fiori/pages/BarcodeScannerDialog/"
  },
  "61": {
    "id": "61",
    "title": "Barcode Scanner Dialog",
    "content": "BarcodeScannerDialog v1.0.0-rc.15 @ui5/webcomponents-fiori &lt;ui5-barcode-scanner-dialog&gt; Usage Scan &lt;ui5-barcode-scanner-dialog id=&quot;dlgScan&quot;&gt;&lt;/ui5-barcode-scanner-dialog&gt; &lt;ui5-button id=&quot;btnScan&quot; icon=&quot;camera&quot; tooltip=&quot;Start Camera&quot;&gt;Scan&lt;/ui5-button&gt; &lt;ui5-label id=&quot;scanResult&quot;&gt;&lt;/ui5-label&gt; &lt;ui5-label id=&quot;scanError&quot;&gt;&lt;/ui5-label&gt; &lt;script&gt; btnScan.addEventListener(&quot;click&quot;, function(event) { dlgScan.show(); }); dlgScan.addEventListener(&quot;scan-success&quot;, function(event) { scanResult.innerHTML = event.detail.text; dlgScan.close(); }); dlgScan.addEventListener(&quot;scan-error&quot;, function(event) { scanError.innerHTML = event.detail.message; dlgScan.close(); }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The BarcodeScannerDialog component provides barcode scanning functionality for all devices that support the MediaDevices.getUserMedia() native API. Opening the dialog launches the device camera and scans for known barcode formats. A scanSuccess event fires whenever a barcode is identified and a scanError event fires when the scan failed (for example, due to missing permisions). Internally, the component uses the zxing-js/library third party OSS. For a list of supported barcode formats, see the zxing-js/library documentation. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;scan-error&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fires when the scan fails with error. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;message&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the error message&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;scan-success&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fires when the scan is completed successfuuly. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;text&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the scan result as string&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;rawBytes&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Object &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the scan result as a Uint8Array&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Closes the dialog and the scan session.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;show&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Shows a dialog with the camera videostream. Starts a scan session.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/BarcodeScannerDialog/",
    "relUrl": "/playground/components/BarcodeScannerDialog/"
  },
  "62": {
    "id": "62",
    "title": "Breadcrumbs",
    "content": "&lt;!DOCTYPE html&gt; Breadcrumbs turn lights Resize last container: Resize last link: Breadcrumbs with current location Link1 Link2 Link3 Link4 Link5 Link6 Link7 Location Breadcrumbs with no current location Link1 Link2 Link3 Link4 Link5 Link6 Link7 Breadcrumbs with specific separator style Slash BackSlash DoubleBackSlash DoubleGreaterThan DoubleSlash GreaterThan Link1 Link2 Link3 Location Breadcrumb items with accessible name Link1 Link2 Link3 Link4 Link5 Breadcrumbs with overflowing links Link1 Link2 Link3 Link4 Link5 Link6 aaaaa Location Breadcrumbs with links and preventDefault Link1 Link2 Link3 Link4 Location Empty Breadcrumbs Empty Breadcrumbs with Location only Location Last pressed link:",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Breadcrumbs/",
    "relUrl": "/playground/main/pages/Breadcrumbs/"
  },
  "63": {
    "id": "63",
    "title": "Breadcrumbs",
    "content": "Breadcrumbs v1.0.0-rc.15 @ui5/webcomponents &lt;ui5-breadcrumbs&gt; Standard Breadcrumbs Root Page Parent Page Current Page &lt;ui5-breadcrumbs&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot; target=&quot;_blank&quot;&gt;Root Page &lt;/ui5-breadcrumbs-item&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot;&gt;Parent Page&lt;/ui5-breadcrumbs-item&gt; &lt;ui5-breadcrumbs-item&gt;Current Page&lt;/ui5-breadcrumbs-item&gt; &lt;/ui5-breadcrumbs&gt; Breadcrumbs with no current page Root Page Parent Page &lt;ui5-breadcrumbs design=&quot;NoCurrentPage&quot;&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot; target=&quot;_blank&quot;&gt;Root Page &lt;/ui5-breadcrumbs-item&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot;&gt;Parent Page&lt;/ui5-breadcrumbs-item&gt; &lt;/ui5-breadcrumbs&gt; Breadcrumbs with specific separator Root Page Parent Page Current Page Root Page Parent Page Current Page Root Page Parent Page Current Page Root Page Parent Page Current Page Root Page Parent Page Current Page Root Page Parent Page Current Page &lt;ui5-breadcrumbs separator-style=&quot;Slash&quot;&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot;&gt;Root Page &lt;/ui5-breadcrumbs-item&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot;&gt;Parent Page&lt;/ui5-breadcrumbs-item&gt; &lt;ui5-breadcrumbs-item&gt;Current Page&lt;/ui5-breadcrumbs-item&gt; &lt;/ui5-breadcrumbs&gt; &lt;ui5-breadcrumbs separator-style=&quot;BackSlash&quot;&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot;&gt;Root Page &lt;/ui5-breadcrumbs-item&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot;&gt;Parent Page&lt;/ui5-breadcrumbs-item&gt; &lt;ui5-breadcrumbs-item&gt;Current Page&lt;/ui5-breadcrumbs-item&gt; &lt;/ui5-breadcrumbs&gt; &lt;ui5-breadcrumbs separator-style=&quot;DoubleBackSlash&quot;&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot;&gt;Root Page &lt;/ui5-breadcrumbs-item&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot;&gt;Parent Page&lt;/ui5-breadcrumbs-item&gt; &lt;ui5-breadcrumbs-item&gt;Current Page&lt;/ui5-breadcrumbs-item&gt; &lt;/ui5-breadcrumbs&gt; &lt;ui5-breadcrumbs separator-style=&quot;DoubleGreaterThan&quot;&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot;&gt;Root Page &lt;/ui5-breadcrumbs-item&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot;&gt;Parent Page&lt;/ui5-breadcrumbs-item&gt; &lt;ui5-breadcrumbs-item&gt;Current Page&lt;/ui5-breadcrumbs-item&gt; &lt;/ui5-breadcrumbs&gt; &lt;ui5-breadcrumbs separator-style=&quot;DoubleSlash&quot;&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot;&gt;Root Page &lt;/ui5-breadcrumbs-item&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot;&gt;Parent Page&lt;/ui5-breadcrumbs-item&gt; &lt;ui5-breadcrumbs-item&gt;Current Page&lt;/ui5-breadcrumbs-item&gt; &lt;/ui5-breadcrumbs&gt; &lt;ui5-breadcrumbs separator-style=&quot;GreaterThan&quot;&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot;&gt;Root Page &lt;/ui5-breadcrumbs-item&gt; &lt;ui5-breadcrumbs-item href=&quot;https://www.sap.com&quot;&gt;Parent Page&lt;/ui5-breadcrumbs-item&gt; &lt;ui5-breadcrumbs-item&gt;Current Page&lt;/ui5-breadcrumbs-item&gt; &lt;/ui5-breadcrumbs&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; Enables users to navigate between items by providing a list of links to previous steps in the user&#39;s navigation path. It helps the user to be aware of their location within the application and allows faster navigation. &lt;br&gt;&lt;br&gt; The last three steps can be accessed as links directly, while the remaining links prior to them are available in a drop-down menu. &lt;br&gt;&lt;br&gt; You can choose the type of separator to be used from a number of predefined options. Keyboard Handling The ui5-breadcrumbs provides advanced keyboard handling. &lt;ul&gt; &lt;li&gt;[F4, ALT+UP, ALT+DOWN, SPACE, ENTER] - If the dropdown arrow is focused - opens/closes the drop-down.&lt;/li&gt; &lt;li&gt;[SPACE, ENTER] - Activates the focused item and triggers the item-click event.&lt;/li&gt; &lt;li&gt;[ESC] - Closes the drop-down.&lt;/li&gt; &lt;li&gt;[LEFT] - If the drop-down is closed - navigates one item to the left.&lt;/li&gt; &lt;li&gt;[RIGHT] - If the drop-down is closed - navigates one item to the right.&lt;/li&gt; &lt;li&gt;[UP] - If the drop-down is open - moves focus to the next item.&lt;/li&gt; &lt;li&gt;[DOWN] - If the drop-down is open - moves focus to the previous item.&lt;/li&gt; &lt;li&gt;[HOME] - Navigates to the first item.&lt;/li&gt; &lt;li&gt;[END] - Navigates to the last item.&lt;/li&gt; &lt;/ul&gt; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; design &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;BreadcrumbsDesign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Standard&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the visual indication and behavior of the breadcrumbs. Available options are &lt;code&gt;Standard&lt;/code&gt; (by default) and &lt;code&gt;NoCurrentPage&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;Standard&lt;/code&gt; breadcrumbs show the current page as the last item in the trail. The last item contains only plain text and is not a link. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; separatorStyle &lt;br&gt; &lt;code&gt;separator-style&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;BreadcrumbsSeparatorStyle&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Slash&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the visual style of the separator between the breadcrumb items. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Slash&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;BackSlash&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;DoubleBackSlash&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;DoubleGreaterThan&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;DoubleSlash&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;GreaterThan&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the component items. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Use the &lt;code&gt;ui5-breadcrumbs-item&lt;/code&gt; component to define the desired items.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;item-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fires when a &lt;code&gt;BreadcrumbsItem&lt;/code&gt; is clicked. &lt;b&gt;Note:&lt;/b&gt; You can prevent browser location change by calling &lt;code&gt;event.preventDefault()&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The clicked item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;altKey&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Returns whether the &quot;ALT&quot; key was pressed when the event was triggered.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;ctrlKey&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Returns whether the &quot;CTRL&quot; key was pressed when the event was triggered.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;metaKey&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Returns whether the &quot;META&quot; key was pressed when the event was triggered.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;shiftKey&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Returns whether the &quot;SHIFT&quot; key was pressed when the event was triggered.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;BreadcrumbsItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-breadcrumbs-item component defines the content of an item in ui5-breadcrumbs. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the item. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; href &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the link href. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Standard hyperlink behavior is supported. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; target &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the link target. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;_self&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;_top&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;_blank&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;_parent&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;_search&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;b&gt; This property must only be used when the &lt;code&gt;href&lt;/code&gt; property is set. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the text of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Breadcrumbs/",
    "relUrl": "/playground/components/Breadcrumbs/"
  },
  "64": {
    "id": "64",
    "title": "Busy Indicator",
    "content": "&lt;!DOCTYPE html&gt; Busy Indicator Large ui5-busy-indicator Default Medium ui5-busy-indicator ui5-busy-indicator with text focus stop before Hello World focus stop after Fetch List Data Item 1 Item 2 Item 3 Item 1 Item 2 Item 3 Medium (default) Small Medium Large Dynamic tree Open Dialog with Inactive Indicator Dialog with focus issue Buttons are wrapped in busy indicator, which is inactive. button 1 button 2 button 3 Open Dialog with Active Indicator Dialog with focus issue Buttons are wrapped in busy indicator, which is active. button 1 button 2 button 3 Indicator with delay Open dialog Will become busy after 5 seconds Shouldn&#39;t attempt to focus the busy indicator focus stop",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/BusyIndicator/",
    "relUrl": "/playground/main/pages/BusyIndicator/"
  },
  "65": {
    "id": "65",
    "title": "Busy Indicator",
    "content": "BusyIndicator v0.12.0 @ui5/webcomponents &lt;ui5-busy-indicator&gt; Busy Indicator with different size &lt;ui5-busy-indicator active size=&quot;Small&quot;&gt;&lt;/ui5-busy-indicator&gt; &lt;ui5-busy-indicator active size=&quot;Medium&quot;&gt;&lt;/ui5-busy-indicator&gt; &lt;ui5-busy-indicator active size=&quot;Large&quot;&gt;&lt;/ui5-busy-indicator&gt; Busy Indicator wrapping other elements Fetch List Data &lt;ui5-button id=&quot;fetch-btn&quot; style=&quot;width: 120px;&quot;&gt;Fetch List Data&lt;/ui5-button&gt; &lt;ui5-busy-indicator id=&quot;busy-container&quot; size=&quot;Medium&quot;&gt; &lt;ui5-list id=&quot;fetch-list&quot; no-data-text=&quot;No Data&quot; header-text=&quot;Available Items&quot;&gt;&lt;/ui5-list&gt; &lt;/ui5-busy-indicator&gt; &lt;script&gt; const busyIndicator = document.getElementById(&quot;busy-container&quot;); const list = document.getElementById(&quot;fetch-list&quot;); const fetchBtn = document.getElementById(&quot;fetch-btn&quot;); fetchBtn.addEventListener(&quot;click&quot;, event =&gt; { busyIndicator.active = true; setTimeout(() =&gt; { const elements = [&quot;UI5&quot;, &quot;Web&quot;, &quot;Components&quot;].forEach(title =&gt; { const el = document.createElement(&quot;ui5-li&quot;); el.textContent = title; list.appendChild(el); }); busyIndicator.active = false; }, 2000); }); &lt;/script&gt; &lt;script&gt; var busyIndicator = document.getElementById(&quot;busy-container&quot;); var list = document.getElementById(&quot;fetch-list&quot;); document.getElementById(&quot;fetch-btn&quot;).addEventListener(&quot;click&quot;, function(event) { busyIndicator.active = true; setTimeout(function() { var elements = [&quot;UI5&quot;, &quot;Web&quot;, &quot;Components&quot;].forEach(function(title) { var el = document.createElement(&quot;ui5-li&quot;); el.textContent = title; list.appendChild(el); }); busyIndicator.active = false; }, 2000); }); &lt;/script&gt; &lt;/body&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-busy-indicator signals that some operation is going on and that the user must wait. It does not block the current UI screen so other operations could be triggered in parallel. It displays 3 dots and each dot expands and shrinks at a different rate, resulting in a cascading flow of animation. Usage For the ui5-busy-indicator you can define the size, the text and whether it is shown or hidden. In order to hide it, use the “active” property. In order to show busy state over an HTML element, simply nest the HTML element in a ui5-busy-indicator instance. Note: Since ui5-busy-indicator has display: inline-block; by default and no width of its own, whenever you need to wrap a block-level element, you should set display: block to the busy indicator as well. When to use: The user needs to be able to cancel the operation. Only part of the application or a particular component is affected. When not to use: The operation takes less than one second. You need to block the screen and prevent the user from starting another activity. Do not show multiple busy indicators at once. ES6 Module Import import &quot;@ui5/webcomponents/dist/BusyIndicator&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; active &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the busy indicator is visible on the screen. By default it is not. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; delay &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;1000&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the delay in milliseconds, after which the busy indicator will be visible on the screen. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; size &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;BusyIndicatorSize&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Medium&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the size of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Small&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Medium&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Large&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines text to be displayed below the component. It can be used to inform the user of the current operation. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.7&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Determines the content over which the component will appear.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/BusyIndicator/",
    "relUrl": "/playground/components/BusyIndicator/"
  },
  "66": {
    "id": "66",
    "title": "Button",
    "content": "&lt;!DOCTYPE html&gt; Button Press Action Bar Button Primary button Secondary button Inactive Accept Decline Action Bar Button Primary button Secondary button Inactive Agree Decline Warning Warning Action Bar Button Action Bar Button Action Bar Button Download Application From This Button Action Bar Button Action Bar Button Default Default Agree Agree Decline Decline Transparent Transparent Emphasized Emphasized Icon last &quot;This is a label, this is a label&quot; Action Bar Button Primary button Secondary button Inactive Agree Decline Action Bar Button Default Default Agree Agree Decline Decline Transparent Transparent Emphasized Emphasized Download Download Download Buttons with tooltip Show Registration Dialog Username: Password: Email: Address: Register",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Button/",
    "relUrl": "/playground/main/pages/Button/"
  },
  "67": {
    "id": "67",
    "title": "Button",
    "content": "Button @ui5/webcomponents &lt;ui5-button&gt; Basic Button Default Disabled Cancel Approve Decline Warning Subscribe &lt;ui5-button design=&quot;Default&quot;&gt;Default&lt;/ui5-button&gt; &lt;ui5-button disabled&gt;Disabled&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Transparent&quot;&gt;Cancel&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Positive&quot;&gt;Approve&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Negative&quot;&gt;Decline&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Attention&quot;&gt;Warning&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Emphasized&quot;&gt;Subscribe&lt;/ui5-button&gt; Button with Icon Add Download Add Remove Warning Accept &lt;ui5-button icon=&quot;employee&quot;&gt;Add&lt;/ui5-button&gt; &lt;ui5-button icon=&quot;download&quot; icon-end&gt;Download&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Positive&quot; icon=&quot;add&quot;&gt;Add&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Negative&quot; icon=&quot;delete&quot;&gt;Remove&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Attention&quot; icon=&quot;message-warning&quot;&gt;Warning&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Transparent&quot; icon=&quot;accept&quot;&gt;Transparent&lt;/ui5-button&gt; Icon Only Button Add Alert Away Accept Bookmark Camera Call Cart Cancel Settings &lt;ui5-button icon=&quot;away&quot; tooltip=&quot;Away&quot; accessible-name-ref=&quot;lblAway&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-button icon=&quot;action-settings&quot; tooltip=&quot;Action settings&quot; accessible-name-ref=&quot;lblSettings&quot; &gt;&lt;/ui5-button&gt; &lt;ui5-button icon=&quot;add&quot; tooltip=&quot;Add&quot; accessible-name-ref=&quot;lblAdd&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-button icon=&quot;alert&quot;tooltip=&quot;Alert&quot; accessible-name-ref=&quot;lblAlert&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-button icon=&quot;accept&quot; tooltip=&quot;Accept&quot; design=&quot;Positive&quot; accessible-name-ref=&quot;lblAccept&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-button icon=&quot;bookmark&quot; tooltip=&quot;Bookmark&quot; design=&quot;Positive&quot; accessible-name-ref=&quot;lblBookmark&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-button icon=&quot;cancel&quot; tooltip=&quot;Cancel&quot; design=&quot;Negative&quot; accessible-name-ref=&quot;lblCancel&quot; &gt;&lt;/ui5-button&gt; &lt;ui5-button icon=&quot;call&quot; tooltip=&quot;Call&quot; design=&quot;Negative&quot; accessible-name-ref=&quot;lblCall&quot; &gt;&lt;/ui5-button&gt; &lt;ui5-button icon=&quot;camera&quot; tooltip=&quot;Camera&quot; design=&quot;Transparent&quot; accessible-name-ref=&quot;lblCamera&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-button icon=&quot;cart&quot; tooltip=&quot;Cart&quot; design=&quot;Transparent&quot; accessible-name-ref=&quot;lblCart&quot;&gt;&lt;/ui5-button&gt; Button with Design Submit Agree Decline Default Warning Transparent &lt;ui5-button design=&quot;Emphasized&quot;&gt;Submit&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Positive&quot;&gt;Agree&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Negative&quot;&gt;Decline&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Default&quot;&gt;Default&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Attention&quot;&gt;Warning&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Transparent&quot;&gt;Transparent&lt;/ui5-button&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-button component represents a simple push button. It enables users to trigger actions by clicking or tapping the ui5-button, or by pressing certain keyboard keys, such as Enter. Usage For the ui5-button UI, you can define text, icon, or both. You can also specify whether the text or the icon is displayed first. You can choose from a set of predefined types that offer different styling to correspond to the triggered action. You can set the ui5-button as enabled or disabled. An enabled ui5-button can be pressed by clicking or tapping it. The button changes its style to provide visual feedback to the user that it is pressed or hovered over with the mouse cursor. A disabled ui5-button appears inactive and cannot be pressed. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-button exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;button - Used to style the native button element&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/Button&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibilityAttributes &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;object&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; An object of strings that defines several additional accessibility attribute values for customization depending on the use case. It supports the following fields: &lt;ul&gt; &lt;li&gt;&lt;code&gt;expanded&lt;/code&gt;: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: &lt;ul&gt; &lt;li&gt;&lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;false&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;hasPopup&lt;/code&gt;: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Grid&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ListBox&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tree&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;controls&lt;/code&gt;: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.2.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; design &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ButtonDesign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Default&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the component design. &lt;br&gt;&lt;br&gt; &lt;b&gt;The available values are:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Emphasized&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Positive&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Negative&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Transparent&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Attention&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is disabled. A disabled component can&#39;t be pressed or focused, and it is not in the tab chain. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the icon, displayed as graphical element within the component. The SAP-icons font provides numerous options. &lt;br&gt;&lt;br&gt; Example: See all the available icons within the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; iconEnd &lt;br&gt; &lt;code&gt;icon-end&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the icon should be displayed after the component text. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; submits &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; When set to &lt;code&gt;true&lt;/code&gt;, the component will automatically submit the nearest HTML form element on &lt;code&gt;press&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; For the &lt;code&gt;submits&lt;/code&gt; property to have effect, you must add the following import to your project: &lt;code&gt;import &quot;@ui5/webcomponents/dist/features/InputElementsFormSupport.js&quot;;&lt;/code&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; tooltip &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the tooltip of the component. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A tooltip attribute should be provided for icon-only buttons, in order to represent their exact meaning/function. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.2.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the text of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the component is activated either with a mouse/tap or by using the Enter or Space key. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The event will not be fired if the &lt;code&gt;disabled&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Button/",
    "relUrl": "/playground/components/Button/"
  },
  "68": {
    "id": "68",
    "title": "Calendar",
    "content": "&lt;!DOCTYPE html&gt; Calendar Playground Selection type for the first calendar: Single Multiple Range Show/hide weeknumbers for the first calendar: hide Calendar with preset dates Calendar with Minimum and Maximum Date &amp; Format Pattern Calendar with primary and secondary calendar type",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Calendar/",
    "relUrl": "/playground/main/pages/Calendar/"
  },
  "69": {
    "id": "69",
    "title": "Calendar",
    "content": "Calendar v1.0.0-rc.11 @ui5/webcomponents &lt;ui5-calendar&gt; Basic Calendar &lt;ui5-calendar&gt;&lt;/ui5-calendar&gt; Calendar with Minimum and Maximum Date &amp; Format Pattern &lt;ui5-calendar min-date=&quot;7/7/2020&quot; max-date=&quot;20/10/2020&quot; format-pattern=&quot;dd/MM/yyyy&quot;&gt;&lt;/ui5-calendar&gt; Calendar with Hidden Week Numbers &lt;ui5-calendar hide-week-numbers&gt;&lt;/ui5-calendar&gt; Calendar with Selection Mode Multiple &lt;ui5-calendar selection-mode=&quot;Multiple&quot;&gt;&lt;/ui5-calendar&gt; Calendar with Selection Mode Range &lt;ui5-calendar selection-mode=&quot;Range&quot;&gt;&lt;/ui5-calendar&gt; Japanese Calendar &lt;ui5-calendar primary-calendar-type=&#39;Japanese&#39;&gt;&lt;/ui5-calendar&gt; Islamic Calendar &lt;ui5-calendar primary-calendar-type=&#39;Islamic&#39;&gt;&lt;/ui5-calendar&gt; Buddhist Calendar &lt;ui5-calendar primary-calendar-type=&#39;Buddhist&#39;&gt;&lt;/ui5-calendar&gt; Persian Calendar &lt;ui5-calendar primary-calendar-type=&#39;Persian&#39;&gt;&lt;/ui5-calendar&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-calendar component allows users to select one or more dates. Currently selected dates are represented with instances of ui5-date as children of the ui5-calendar. The value property of each ui5-date must be a date string, correctly formatted according to the ui5-calendar’s formatPattern property. Whenever the user changes the date selection, ui5-calendar will automatically create/remove instances of ui5-date in itself, unless you prevent this behavior by calling preventDefault() for the selected-dates-change event. This is useful if you want to control the selected dates externally. Usage The user can navigate to a particular date by: &lt;ul&gt; &lt;li&gt;Pressing over a month inside the months view&lt;/li&gt; &lt;li&gt;Pressing over an year inside the years view&lt;/li&gt; &lt;/ul&gt; The user can confirm a date selection by pressing over a date inside the days view. Keyboard Handling The ui5-calendar provides advanced keyboard handling. When a picker is showed and focused the user can use the following keyboard shortcuts in order to perform a navigation: - Day picker: &lt;ul&gt; &lt;li&gt;[F4] - Shows month picker&lt;/li&gt; &lt;li&gt;[SHIFT] + [F4] - Shows year picker&lt;/li&gt; &lt;li&gt;[PAGEUP] - Navigate to the previous month&lt;/li&gt; &lt;li&gt;[PAGEDOWN] - Navigate to the next month&lt;/li&gt; &lt;li&gt;[SHIFT] + [PAGEUP] - Navigate to the previous year&lt;/li&gt; &lt;li&gt;[SHIFT] + [PAGEDOWN] - Navigate to the next year&lt;/li&gt; &lt;li&gt;[CTRL] + [SHIFT] + [PAGEUP] - Navigate ten years backwards&lt;/li&gt; &lt;li&gt;[CTRL] + [SHIFT] + [PAGEDOWN] - Navigate ten years forwards&lt;/li&gt; &lt;li&gt;[HOME] - Navigate to the first day of the week&lt;/li&gt; &lt;li&gt;[END] - Navigate to the last day of the week&lt;/li&gt; &lt;li&gt;[CTRL] + [HOME] - Navigate to the first day of the month&lt;/li&gt; &lt;li&gt;[CTRL] + [END] - Navigate to the last day of the month&lt;/li&gt; &lt;/ul&gt; - Month picker: &lt;ul&gt; &lt;li&gt;[PAGEUP] - Navigate to the previous year&lt;/li&gt; &lt;li&gt;[PAGEDOWN] - Navigate to the next year&lt;/li&gt; &lt;li&gt;[HOME] - Navigate to the first month of the current row&lt;/li&gt; &lt;li&gt;[END] - Navigate to the last month of the current row&lt;/li&gt; &lt;li&gt;[CTRL] + [HOME] - Navigate to the first month of the current year&lt;/li&gt; &lt;li&gt;[CTRL] + [END] - Navigate to the last month of the year&lt;/li&gt; &lt;/ul&gt; - Year picker: &lt;ul&gt; &lt;li&gt;[PAGEUP] - Navigate to the previous year range&lt;/li&gt; &lt;li&gt;[PAGEDOWN] - Navigate the next year range&lt;/li&gt; &lt;li&gt;[HOME] - Navigate to the first year of the current row&lt;/li&gt; &lt;li&gt;[END] - Navigate to the last year of the current row&lt;/li&gt; &lt;li&gt;[CTRL] + [HOME] - Navigate to the first year of the current year range&lt;/li&gt; &lt;li&gt;[CTRL] + [END] - Navigate to the last year of the current year range&lt;/li&gt; &lt;/ul&gt; Fast Navigation This component provides a build in fast navigation group which can be used via F6 / Shift + F6 or Ctrl + Alt(Option) + Down / Ctrl + Alt(Option) + Up. In order to use this functionality, you need to import the following module: import &quot;@ui5/webcomponents-base/dist/features/F6Navigation.js&quot; Calendar types The component supports several calendar types - Gregorian, Buddhist, Islamic, Japanese and Persian. By default the Gregorian Calendar is used. In order to use the Buddhist, Islamic, Japanese or Persian calendar, you need to set the primaryCalendarType property and import one or more of the following modules: import &quot;@ui5/webcomponents-localization/dist/features/calendar/Buddhist.js&quot;; import &quot;@ui5/webcomponents-localization/dist/features/calendar/Islamic.js&quot;; import &quot;@ui5/webcomponents-localization/dist/features/calendar/Japanese.js&quot;; import &quot;@ui5/webcomponents-localization/dist/features/calendar/Persian.js&quot;; Or, you can use the global configuration and set the calendarType key: &lt;script data-id=&quot;sap-ui-config&quot; type=&quot;application/json&quot;&gt; { &quot;calendarType&quot;: &quot;Japanese&quot; } &lt;/script&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/Calendar&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideWeekNumbers &lt;br&gt; &lt;code&gt;hide-week-numbers&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the visibility of the week numbers column. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; For calendars other than Gregorian, the week numbers are not displayed regardless of what is set. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selectionMode &lt;br&gt; &lt;code&gt;selection-mode&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;CalendarSelectionMode&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Single&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the type of selection used in the calendar component. Accepted property values are:&lt;br&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;CalendarSelectionMode.Single&lt;/code&gt; - enables a single date selection.(default value)&lt;/li&gt; &lt;li&gt;&lt;code&gt;CalendarSelectionMode.Range&lt;/code&gt; - enables selection of a date range.&lt;/li&gt; &lt;li&gt;&lt;code&gt;CalendarSelectionMode.Multiple&lt;/code&gt; - enables selection of multiple dates.&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; formatPattern &lt;br&gt; &lt;code&gt;format-pattern&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the format, displayed in the input field. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; maxDate &lt;br&gt; &lt;code&gt;max-date&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the maximum date available for selection. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.6&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; minDate &lt;br&gt; &lt;code&gt;min-date&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the minimum date available for selection. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.6&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; primaryCalendarType &lt;br&gt; &lt;code&gt;primary-calendar-type&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;CalendarType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Sets a calendar type used for display. If not set, the calendar type of the global configuration is used. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; secondaryCalendarType &lt;br&gt; &lt;code&gt;secondary-calendar-type&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;CalendarType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the secondary calendar type. If not set, the calendar will only show the primary calendar type. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.16&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the selected date or dates (depending on the &lt;code&gt;selectionMode&lt;/code&gt; property) for this calendar as instances of &lt;code&gt;ui5-date&lt;/code&gt;.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;selected-dates-change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the selected dates change. &lt;b&gt;Note:&lt;/b&gt; If you call &lt;code&gt;preventDefault()&lt;/code&gt; for this event, the component will not create instances of &lt;code&gt;ui5-date&lt;/code&gt; for the newly selected dates. In that case you should do this manually. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;values&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Array &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The selected dates&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;dates&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Array &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The selected dates as UTC timestamps&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;CalendarDate&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-date component defines a calendar date to be used inside ui5-calendar &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; The date formatted according to the &lt;code&gt;formatPattern&lt;/code&gt; property of the &lt;code&gt;ui5-calendar&lt;/code&gt; that hosts the component. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Calendar/",
    "relUrl": "/playground/components/Calendar/"
  },
  "70": {
    "id": "70",
    "title": "Card",
    "content": "&lt;!DOCTYPE html&gt; Card Template Based Segmentation Segmentation Models Marketing plans Template Based Segmentation Segmentation Models Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer vel aliquam augue. Some Action Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer vel aliquam augue. Some Action Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer vel aliquam augue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer vel aliquam augue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer vel aliquam augue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer vel aliquam augue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer vel aliquam augue. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer vel aliquam augue. Act Template Based Segmentation Segmentation Models Add activity Increase customer satisfaction by 10% using marketing methods Get 1000 survey responses to annual employee survey Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Add activity Increase customer satisfaction by 10% using marketing methods Get 1000 survey responses to annual employee survey Add activity Increase customer satisfaction by 10% using marketing methods Get 1000 survey responses to annual employee survey Add activity Increase customer satisfaction by 10% using marketing methods Get 1000 survey responses to annual employee survey info text Test Increase customer satisfaction by 10% using marketing methods Get 1000 survey responses to annual employee survey Increase customer satisfaction by 10% using marketing methods Get 1000 survey responses to annual employee survey I am the content",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Card/",
    "relUrl": "/playground/main/pages/Card/"
  },
  "71": {
    "id": "71",
    "title": "Card",
    "content": "Card @ui5/webcomponents &lt;ui5-card&gt; Card with List View All Alain Chevalier Monique Legrand Isabella Adams Richard Wilson Elena Petrova John Miller &lt;style&gt; .card-content { display: flex; justify-content: space-around; flex-wrap: wrap; } &lt;/style&gt; &lt;ui5-card class=&quot;medium&quot;&gt; &lt;ui5-card-header slot=&quot;header&quot; title-text=&quot;Team Space&quot; subtitle-text=&quot;Direct Reports&quot; status=&quot;3 of 10&quot;&gt; &lt;ui5-icon name=&quot;group&quot; slot=&quot;avatar&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-button design=&quot;Transparent&quot; slot=&quot;action&quot;&gt;View All&lt;/ui5-button&gt; &lt;/ui5-card-header&gt; &lt;div class=&quot;card-content&quot;&gt; &lt;ui5-list separators=&quot;None&quot; class=&quot;card-content-child&quot; style=&quot;width: 100%; margin-bottom: 0.75rem;&quot;&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/man_avatar_1.png&quot; description=&quot;User Researcher&quot;&gt;Alain Chevalier&lt;/ui5-li&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/woman_avatar_1.png&quot; description=&quot;Artist&quot;&gt;Monique Legrand&lt;/ui5-li&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/woman_avatar_2.png&quot; description=&quot;UX Specialist&quot;&gt;Isabella Adams&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;/div&gt; &lt;/ui5-card&gt; &lt;ui5-card class=&quot;medium&quot;&gt; &lt;ui5-card-header slot=&quot;header&quot; title-text=&quot;This header is interactive&quot; interactive subtitle-text=&quot;Click, press Enter or Space&quot; status=&quot;3 of 6&quot;&gt; &lt;ui5-icon name=&quot;group&quot; slot=&quot;avatar&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-card-header&gt; &lt;div class=&quot;card-content&quot;&gt; &lt;ui5-list separators=&quot;None&quot; class=&quot;card-content-child&quot; style=&quot;width: 100%; margin-bottom: 0.75rem;&quot;&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/man_avatar_2.png&quot; description=&quot;Software Architect&quot;&gt;Richard Wilson&lt;/ui5-li&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/woman_avatar_3.png&quot; description=&quot;Visual Designer&quot;&gt;Elena Petrova&lt;/ui5-li&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/man_avatar_3.png&quot; description=&quot;Quality Specialist&quot;&gt;John Miller&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;/div&gt; &lt;/ui5-card&gt; Card with Table Sales Order Customer Net Amount Status 5000010050 Entertainment Argentinia 6k USD Aproved 5000010051 Brazil Techologies 2k USD Rejected 5000010052 Robert Brown Ent. 17k USD Pending &lt;style&gt; .status-error {color: #b00;} .status-warning {color: #e9730c;} .status-success {color: #107e3e;} &lt;/style&gt; &lt;ui5-card class=&quot;medium&quot;&gt; &lt;ui5-card-header slot=&quot;header&quot; title-text=&quot;New Purchase Orders&quot; subtitle-text=&quot;Today&quot; status=&quot;3 of 15&quot;&gt; &lt;/ui5-card-header&gt; &lt;ui5-table class=&quot;demo-table content-padding&quot;&gt; &lt;!-- Columns --&gt; &lt;ui5-table-column slot=&quot;columns&quot;&gt; &lt;ui5-label&gt;Sales Order&lt;/ui5-label&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column slot=&quot;columns&quot;&gt; &lt;ui5-label&gt;Customer&lt;/ui5-label&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column slot=&quot;columns&quot;&gt; &lt;ui5-label&gt;Net Amount&lt;/ui5-label&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column slot=&quot;columns&quot; min-width=&quot;450&quot; popin-text=&quot;Status&quot; demand-popin&gt; &lt;ui5-label&gt;Status&lt;/ui5-label&gt; &lt;/ui5-table-column&gt; &lt;!-- Rows --&gt; &lt;ui5-table-row &gt; &lt;ui5-table-cell&gt; &lt;ui5-label&gt;5000010051&lt;/ui5-label&gt; &lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt; &lt;ui5-label&gt;Brazil Techologies&lt;/ui5-label&gt; &lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt; &lt;ui5-label&gt;2k USD&lt;/ui5-label&gt; &lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt; &lt;span class=&quot;status-error&quot;&gt;Rejected&lt;/span&gt; &lt;/ui5-table-cell&gt; &lt;/ui5-table-row&gt; ... &lt;/ui5-table&gt; &lt;/ui5-card&gt; Card with Timeline MR SOF02 2.43 Online meeting &lt;ui5-card class=&quot;meidum&quot;&gt; &lt;ui5-card-header slot=&quot;header&quot; title-text=&quot;Upcoming Activities&quot; subtitle-text=&quot;For Today&quot;&gt; &lt;/ui5-card-header&gt; &lt;ui5-timeline&gt; &lt;ui5-timeline-item id=&quot;test-item&quot; title-text=&quot;called&quot; timestamp=&quot;1487583000000&quot; icon=&quot;phone&quot; name=&quot;John Smith&quot; name-clickable&gt;&lt;/ui5-timeline-item&gt; &lt;ui5-timeline-item title-text=&quot;Weekly Sync - CP Design&quot; timestamp=&quot;1517349600000&quot; icon=&quot;calendar&quot;&gt; MR SOF02 2.43 &lt;/ui5-timeline-item&gt; &lt;ui5-timeline-item title-text=&quot;Video Converence Call - UI5&quot; timestamp=&quot;1485813600000&quot; icon=&quot;calendar&quot;&gt; Online meeting &lt;/ui5-timeline-item&gt; &lt;/ui5-timeline&gt; &lt;/ui5-card&gt; More Cards Personal Development Finance Communications Skills Avantel Telecomunicaciones Star Talpa Contact details Company Name Company A Address 481 West Street, Anytown 45066, USA Website www.company_a.example.com &lt;ui5-card class=&quot;small&quot;&gt; &lt;ui5-card-header slot=&quot;header&quot; title-text=&quot;David Willams&quot; subtitle-text=&quot;Sales Manager&quot; &gt; &lt;img src=&quot;../../../assets/images/avatars/man_avatar_1.png&quot; slot=&quot;avatar&quot; /&gt; &lt;/ui5-card-header&gt; &lt;ui5-list separators=&quot;Inner&quot; class=&quot;content-padding&quot;&gt; &lt;ui5-li icon=&quot;competitor&quot; icon-end&gt;Personal Development&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;wallet&quot; icon-end&gt;Finance&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;collaborate&quot; icon-end&gt;Communications Skills&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;/ui5-card&gt; &lt;ui5-card class=&quot;small&quot;&gt; &lt;ui5-card-header slot=&quot;header&quot; title-text=&quot;Project Cloud Transformation&quot; subtitle-text=&quot;Revenue per Product | EUR&quot; status=&quot;3 of 3&quot;&gt;&lt;/ui5-card-header&gt; &lt;ui5-list separators=&quot;None&quot;&gt; &lt;ui5-li description=&quot;ID234522566-D44&quot; additional-text=&quot;27.25K EUR&quot; additional-text-state=&quot;Success&quot;&gt;Avantel&lt;/ui5-li&gt; &lt;ui5-li description=&quot;ID7125852785-A51&quot; additional-text=&quot;22.89K EUR&quot; additional-text-state=&quot;Warning&quot;&gt;Telecomunicaciones Star&lt;/ui5-li&gt; &lt;ui5-li description=&quot;ID123555587-I05&quot; additional-text=&quot;7.85K EUR&quot; additional-text-state=&quot;Error&quot;&gt;Talpa&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;/ui5-card&gt; &lt;style&gt; .content, .content-group { display: flex; flex-direction: column; padding-bottom: 1rem; } &lt;/style&gt; &lt;ui5-card class=&quot;small&quot;&gt; &lt;ui5-card-header slot=&quot;header&quot; title-text=&quot;Dona Maria Moore&quot; subtitle-text=&quot;Senior Sales Executive&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/man_avatar_1.png&quot; slot=&quot;avatar&quot; /&gt; &lt;/ui5-card-header&gt; &lt;div class=&quot;content content-padding&quot;&gt; &lt;ui5-title level=&quot;H5&quot; style=&quot;padding-bottom: 1rem;&quot;&gt;Contact details&lt;/ui5-title&gt; &lt;div class=&quot;content-group&quot;&gt; &lt;ui5-label&gt;Company Name&lt;/ui5-label&gt; &lt;ui5-title level=&quot;H6&quot;&gt;Company A&lt;/ui5-title&gt; &lt;/div&gt; &lt;div class=&quot;content-group&quot;&gt; &lt;ui5-label&gt;Address&lt;/ui5-label&gt; &lt;ui5-title level=&quot;H6&quot;&gt;481 West Street, Anytown 45066, USA&lt;/ui5-title&gt; &lt;/div&gt; &lt;div class=&quot;content-group&quot;&gt; &lt;ui5-label&gt;Website&lt;/ui5-label&gt; &lt;ui5-link target=&quot;_blank&quot;&gt;www.company_a.example.com&lt;/ui5-link&gt; &lt;/div&gt; &lt;/div&gt; &lt;/ui5-card&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-card is a component that represents information in the form of a tile with separate header and content areas. The content area of a ui5-card can be arbitrary HTML content. The header can be used through slot header. For which there is a ui5-card-header component to achieve the card look and fill. Note: We recommend the usage of ui5-card-header for the header slot, so advantage can be taken for keyboard handling, styling and accessibility. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. ES6 Module Import import &quot;@ui5/webcomponents/dist/Card&quot;; import &quot;@ui5/webcomponents/dist/CardHeader.js&quot;; (for ui5-card-header) &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible name of the component, which is used as the name of the card region and should be unique per card. &lt;b&gt;Note:&lt;/b&gt; &lt;code&gt;accessibleName&lt;/code&gt; should be always set, unless &lt;code&gt;accessibleNameRef&lt;/code&gt; is set. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.16&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the IDs of the elements that label the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.16&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content of the component.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;header&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the header of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Use &lt;code&gt;ui5-card-header&lt;/code&gt; for the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;CardHeader&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-card-header is a component, meant to be used as a header of the ui5-card component. It displays valuable information, that can be defined with several properties, such as: titleText, subtitleText, status and two slots: avatar and action. Keyboard handling In case you enable interactive property, you can press the ui5-card-header by Space and Enter keys. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-card exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;root - Used to style the root DOM element of the CardHeader&lt;/li&gt; &lt;li&gt;title - Used to style the title of the CardHeader&lt;/li&gt; &lt;li&gt;subtitle - Used to style the subtitle of the CardHeader&lt;/li&gt; &lt;li&gt;status - Used to style the status of the CardHeader&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/CardHeader&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; interactive &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the component would be interactive, e.g gets hover effect, gets focus outline and &lt;code&gt;click&lt;/code&gt; event is fired, when pressed. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; status &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the status text. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; subtitleText &lt;br&gt; &lt;code&gt;subtitle-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the subtitle text. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; titleText &lt;br&gt; &lt;code&gt;title-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the title text. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;action&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines an action, displayed in the right most part of the header.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;avatar&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines an avatar image, displayed in the left most part of the header.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the component is activated by mouse/tap or by using the Enter or Space key. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The event would be fired only if the &lt;code&gt;interactive&lt;/code&gt; property is set to true. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Card/",
    "relUrl": "/playground/components/Card/"
  },
  "72": {
    "id": "72",
    "title": "Carousel",
    "content": "&lt;!DOCTYPE html&gt; Carousel Template Based Segmentation Segmentation Models Marketing plans Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Marketing plans Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Marketing plans Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Marketing plans Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Marketing plans Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Marketing plans Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Marketing plans Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Marketing plans Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Template Based Segmentation Segmentation Models Marketing plans Template Based Segmentation Segmentation Models Button 1 Button 2 Button 3 Button 1 Button 2 Button 3 Button 4 Button 5 Button 6 Button 7 Button 8 Button 9 Button 1 Button 2 Button 3 Template Based Segmentation Segmentation Models Marketing plans New Items Voluptate do eu cupidatat elit est culpa. Reprehenderit eiusmod voluptate ex est dolor nostrud Lorem Lorem do nisi laborum veniam. Sint do non culpa aute occaecat labore ipsum veniam minim tempor est. Duis pariatur aute culpa irure ad excepteur pariatur culpa culpa ea duis occaecat aute irure. Ipsum velit culpa non exercitation ex laboris deserunt in eu non officia in. Laborum sunt aliqua labore cupidatat sunt labore. Laptop Lenovo IPhone 3 Option 1 Option 2 Option 3 Option 1 Option 2 Option 3 Button 1 Button 2 Button 3 Button 4 Button 5 Button 6 Button 7 Button 8 Carousel with one page The arrows and dots are not displayed Button 1 Button 2 Button 3 Button 1 Button 2 Button 3 Button 4 Button 5 Button 6 Button 7 Button 8 Button 1 Button 2 Button 3 Button 4 Button 5 Button 6 Button 7 Button 8 Button 9 Button 10 Carousel with Numeric style page indicator Button 1 Button 2 Carousel with hidden page indicator arrows-placement=&quot;Navigation&quot; Button 1 Button 2 Button 3 Carousel with hidden page indicator and hidden navigation arrows arrows-placement=&quot;Navigation&quot; Button 1 Button 2 Button 3 F7 keyboard navigation testing Page 1 Button 1 Button 2 Page 2 Button 1 Button 2 Page 3 Button 1 Button 2 Page 4 Button 1 Button 2 Page 5 Button 1 Button 2 Page 6 Button 1 Button 2 Content Part - used to align the content items Template Based Segmentation Segmentation Models Marketing plans Template Based Segmentation Segmentation Models",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Carousel/",
    "relUrl": "/playground/main/pages/Carousel/"
  },
  "73": {
    "id": "73",
    "title": "Carousel",
    "content": "Carousel v1.0.0-rc.6 @ui5/webcomponents &lt;ui5-carousel&gt; Carousel With Single Item per Page &lt;ui5-carousel&gt; &lt;img src=&quot;../../../assets/images/sample1.jpg&quot; alt=&quot;Landscape 1&quot;&gt; &lt;img src=&quot;../../../assets/images/sample2.jpg&quot; alt=&quot;Landscape 2&quot;&gt; &lt;img src=&quot;../../../assets/images/sample3.jpg&quot; alt=&quot;Bulb&quot;&gt; &lt;/ui5-carousel&gt; Carousel With Multiple Items per Page MR SOF02 2.43 Online meeting Personal Development Finance Communications Skills Alain Chevalier Monique Legrand Michael Adams Richard Wilson Elena Petrova John Miller &lt;ui5-carousel items-per-page-s=&quot;1&quot; items-per-page-m=&quot;2&quot; items-per-page-l=&quot;2&quot;&gt; &lt;ui5-card class=&quot;medium&quot;&gt; &lt;ui5-card-header slot=&quot;header&quot; title-text=&quot;Activities&quot; subtitle-text=&quot;For Today&quot; &gt;&lt;/ui5-card-header&gt; &lt;ui5-timeline&gt; &lt;ui5-timeline-item id=&quot;test-item&quot; title-text=&quot;called&quot; timestamp=&quot;1487583000000&quot; icon=&quot;phone&quot; name=&quot;John Smith&quot; name-clickable&gt;&lt;/ui5-timeline-item&gt; &lt;ui5-timeline-item title-text=&quot;Weekly Sync - CP Design&quot; timestamp=&quot;1517349600000&quot; icon=&quot;calendar&quot;&gt; MR SOF02 2.43 &lt;/ui5-timeline-item&gt; &lt;ui5-timeline-item title-text=&quot;Video Converence Call - UI5&quot; timestamp=&quot;1485813600000&quot; icon=&quot;calendar&quot;&gt; Online meeting &lt;/ui5-timeline-item&gt; &lt;/ui5-timeline&gt; &lt;/ui5-card&gt; &lt;ui5-card class=&quot;small&quot;&gt; &lt;ui5-card-header slot=&quot;header&quot; title-text=&quot;David Willams&quot; subtitle-text=&quot;Sales Manager&quot; &gt; &lt;img src=&quot;../../../assets/images/avatars/man_avatar_1.png&quot; slot=&quot;avatar&quot; /&gt; &lt;/ui5-card-header&gt; &lt;ui5-list separators=&quot;Inner&quot; class=&quot;content-padding&quot;&gt; &lt;ui5-li icon=&quot;competitor&quot; icon-end&gt;Personal Development&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;wallet&quot; icon-end&gt;Finance&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;collaborate&quot; icon-end&gt;Communications Skills&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;/ui5-card&gt; &lt;ui5-card class=&quot;medium&quot;&gt; &lt;ui5-card-header slot=&quot;header&quot; title-text=&quot;Team Dolphins&quot; subtitle-text=&quot;Direct Reports&quot; status=&quot;1 of 2&quot; &gt; &lt;ui5-icon name=&quot;group&quot; slot=&quot;avatar&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-card-header&gt; &lt;div class=&quot;card-content&quot;&gt; &lt;ui5-list separators=&quot;None&quot; class=&quot;card-content-child&quot; style=&quot;width: 100%&quot;&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/man_avatar_1.png&quot; description=&quot;User Researcher&quot;&gt;Alain Chevalier&lt;/ui5-li&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/woman_avatar_1.png&quot; description=&quot;Artist&quot;&gt;Monique Legrand&lt;/ui5-li&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/woman_avatar_2.png&quot; description=&quot;UX Specialist&quot;&gt;Michael Adams&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;/div&gt; &lt;/ui5-card&gt; &lt;ui5-card class=&quot;medium&quot;&gt; &lt;ui5-card-header slot=&quot;header&quot; title-text=&quot;Team Bears&quot; subtitle-text=&quot;Direct Reports&quot; interactive status=&quot;2 of 2&quot;&gt; &lt;ui5-icon name=&quot;group&quot; slot=&quot;avatar&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-card-header&gt; &lt;div class=&quot;card-content&quot;&gt; &lt;ui5-list separators=&quot;None&quot; class=&quot;card-content-child&quot; style=&quot;width: 100%&quot;&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/man_avatar_2.png&quot; description=&quot;Software Architect&quot;&gt;Richard Wilson&lt;/ui5-li&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/woman_avatar_3.png&quot; description=&quot;Visual Designer&quot;&gt;Elena Petrova&lt;/ui5-li&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/man_avatar_3.png&quot; description=&quot;Quality Specialist&quot;&gt;John Miller&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;/div&gt; &lt;/ui5-card&gt; &lt;/ui5-carousel&gt; Carousel With Arrow Placement and Cyclic &lt;ui5-carousel arrows-placement=&quot;Navigation&quot; cyclic&gt; &lt;img src=&quot;../../../assets/images/sample1.jpg&quot; alt=&quot;Landscape 1&quot;&gt; &lt;img src=&quot;../../../assets/images/sample2.jpg&quot; alt=&quot;Landscape 2&quot;&gt; &lt;img src=&quot;../../../assets/images/sample3.jpg&quot; alt=&quot;Bulb&quot;&gt; &lt;/ui5-carousel&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The Carousel allows the user to browse through a set of items. The component is mostly used for showing a gallery of images, but can hold any other HTML element. &lt;br&gt; There are several ways to perform navigation: &lt;ul&gt; &lt;li&gt;on desktop - the user can navigate using the navigation arrows or with keyboard shorcuts.&lt;/li&gt; &lt;li&gt;on mobile - the user can use swipe gestures.&lt;/li&gt; &lt;/ul&gt; Usage When to use: The items you want to display are very different from each other. You want to display the items one after the other. When not to use: The items you want to display need to be visible at the same time. The items you want to display are uniform and very similar. Keyboard Handling Basic Navigation When the ui5-carousel is focused the user can navigate between the items with the following keyboard shortcuts: CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-carousel exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;content - Used to style the content of the component&lt;/li&gt; &lt;/ul&gt; Fast Navigation This component provides a build in fast navigation group which can be used via F6 / Shift + F6 or Ctrl + Alt(Option) + Down / Ctrl + Alt(Option) + Up. In order to use this functionality, you need to import the following module: import &quot;@ui5/webcomponents-base/dist/features/F6Navigation.js&quot; [UP/DOWN] - Navigates to previous and next item [LEFT/RIGHT] - Navigates to previous and next item ES6 Module Import import &quot;@ui5/webcomponents/dist/Carousel.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; arrowsPlacement &lt;br&gt; &lt;code&gt;arrows-placement&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;CarouselArrowsPlacement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Content&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the position of arrows. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Content&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Navigation&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;br&gt; When set to &quot;Content&quot;, the arrows are placed on the sides of the current page. &lt;br&gt; When set to &quot;Navigation&quot;, the arrows are placed on the sides of the page indicator. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; cyclic &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the carousel should loop, i.e show the first page after the last page is reached and vice versa. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideNavigationArrows &lt;br&gt; &lt;code&gt;hide-navigation-arrows&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the visibility of the navigation arrows. If set to true the navigation arrows will be hidden. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The navigation arrows are never displayed on touch devices. In this case, the user can swipe to navigate through the items. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hidePageIndicator &lt;br&gt; &lt;code&gt;hide-page-indicator&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the visibility of the page indicator. If set to true the page indicator will be hidden. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; itemsPerPageL &lt;br&gt; &lt;code&gt;items-per-page-l&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;1&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the number of items per page on large size (more than 1024px). One item per page shown by default. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; itemsPerPageM &lt;br&gt; &lt;code&gt;items-per-page-m&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;1&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the number of items per page on medium size (from 640px to 1024px). One item per page shown by default. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; itemsPerPageS &lt;br&gt; &lt;code&gt;items-per-page-s&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;1&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the number of items per page on small size (up to 640px). One item per page shown by default. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; pageIndicatorStyle &lt;br&gt; &lt;code&gt;page-indicator-style&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;CarouselPageIndicatorStyle&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Default&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the style of the page indicator. Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Default&lt;/code&gt; - The page indicator will be visualized as dots if there are fewer than 9 pages. If there are more pages, the page indicator will switch to displaying the current page and the total number of pages. (e.g. X of Y)&lt;/li&gt; &lt;li&gt;&lt;code&gt;Numeric&lt;/code&gt; - The page indicator will display the current page and the total number of pages. (e.g. X of Y)&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content of the component.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;navigate&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired whenever the page changes due to user interaction, when the user clicks on the navigation arrows or while resizing, based on the &lt;code&gt;items-per-page-l&lt;/code&gt;, &lt;code&gt;items-per-page-m&lt;/code&gt; and &lt;code&gt;items-per-page-s&lt;/code&gt; properties. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.7&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;selectedIndex&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Integer &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the current selected index&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;navigateTo&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Changes the currently displayed page.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;itemIndex&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Integer &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The index of the target page&lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Carousel/",
    "relUrl": "/playground/components/Carousel/"
  },
  "74": {
    "id": "74",
    "title": "Check Box",
    "content": "&lt;!DOCTYPE html&gt; ui5-checkbox In Container - stretches to the container Text Wrapping Change Event Test ACC Test - aria-label",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/CheckBox/",
    "relUrl": "/playground/main/pages/CheckBox/"
  },
  "75": {
    "id": "75",
    "title": "Check Box",
    "content": "CheckBox @ui5/webcomponents &lt;ui5-checkbox&gt; Basic CheckBox &lt;ui5-checkbox text=&quot;Chocolate&quot; checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Strawberry&quot; checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Waffles&quot; checked value-state=&quot;Error&quot;&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Cake&quot; checked value-state=&quot;Warning&quot;&gt;&lt;/ui5-checkbox&gt; CheckBox states &lt;ui5-checkbox text=&quot;Success&quot; value-state=&quot;Success&quot;&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Error&quot; value-state=&quot;Error&quot;&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Warning&quot; value-state=&quot;Warning&quot;&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Information&quot; value-state=&quot;Information&quot;&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Disabled&quot; disabled checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Readonly&quot; readonly checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Success disabled&quot; disabled value-state=&quot;Success&quot; checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Error disabled&quot; disabled value-state=&quot;Error&quot; checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Warning disabled &quot; disabled value-state=&quot;Warning&quot; checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Information disabled &quot; disabled value-state=&quot;Information&quot; checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Success readonly&quot; readonly value-state=&quot;Success&quot; checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Error readonly&quot; readonly value-state=&quot;Error&quot; checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Warning readonly&quot; readonly value-state=&quot;Warning&quot; checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Information readonly&quot; readonly value-state=&quot;Information&quot; checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Success indeterminate&quot; value-state=&quot;Success&quot; indeterminate checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Error indeterminate&quot; value-state=&quot;Error&quot; indeterminate checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Warning indeterminate&quot; value-state=&quot;Warning&quot; indeterminate checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Information indeterminate&quot; value-state=&quot;Information&quot; indeterminate checked&gt;&lt;/ui5-checkbox&gt; CheckBox with Text Wrapping &lt;ui5-checkbox text=&quot;ui5-checkbox with &#39;wrapping-type=Normal&#39; set and some long text.&quot; wrapping-type=&quot;Normal&quot; style=&quot;width:200px&quot;&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox text=&quot;Another ui5-checkbox with very long text here&quot; wrapping-type=&quot;Normal&quot; style=&quot;width:200px&quot;&gt;&lt;/ui5-checkbox&gt; CheckBox with indeterminate &lt;ui5-checkbox id=&quot;result-cb&quot; text=&quot;Select / deselect all&quot; indeterminate checked&gt;&lt;/ui5-checkbox&gt; &lt;hr /&gt; &lt;div style=&quot;display: flex; flex-direction: column; align-items: flex-start;&quot;&gt; &lt;ui5-checkbox id=&quot;cb1&quot; text=&quot;English&quot; checked&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox id=&quot;cb2&quot; text=&quot;German&quot;&gt;&lt;/ui5-checkbox&gt; &lt;ui5-checkbox id=&quot;cb3&quot; text=&quot;French&quot;&gt;&lt;/ui5-checkbox&gt; &lt;/div&gt; &lt;script&gt; var resultCb = document.querySelector(&quot;#result-cb&quot;); var langCbs = Array.from(document.querySelectorAll(&quot;[id^=cb]&quot;)); langCbs.forEach(function (cbEl) { cbEl.addEventListener(&quot;change&quot;, function (event) { const hasChecked = langCbs.some(function (cb) { return cb.checked }); const hasUnchecked = langCbs.some(function (cb) { return !cb.checked }); resultCb.indeterminate = hasChecked &amp;&amp; hasUnchecked; resultCb.checked = hasChecked; }); }); resultCb.addEventListener(&quot;change&quot;, function (event) { langCbs.forEach(function (cb) { cb.checked = event.target.checked; }); }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; Allows the user to set a binary value, such as true/false or yes/no for an item. The ui5-checkbox component consists of a box and a label that describes its purpose. If it’s checked, an indicator is displayed inside the box. To check/uncheck the ui5-checkbox, the user has to click or tap the square box or its label. The ui5-checkbox component only has 2 states - checked and unchecked. Clicking or tapping toggles the ui5-checkbox between checked and unchecked state. Usage You can define the checkbox text with via the text property. If the text exceeds the available width, it is truncated by default. In case you prefer text to wrap, set the wrappingType property to “Normal”. The touchable area for toggling the ui5-checkbox ends where the text ends. You can disable the ui5-checkbox by setting the disabled property to true, or use the ui5-checkbox in read-only mode by setting the readonly property to true. &lt;h3&gt;Keyboard Handling&lt;/h3&gt; The user can use the following keyboard shortcuts to toggle the checked state of the ui5-checkbox. &lt;ul&gt; &lt;li&gt;[SPACE, ENTER] - Toggles between different states: checked, not checked.&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/CheckBox&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the component &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; checked &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the component is checked. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The property can be changed with user interaction, either by cliking/tapping on the component, or by pressing the Enter or Space key. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is disabled. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A disabled component is completely noninteractive. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; indeterminate &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is displayed as partially checked. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The indeterminate state can be set only programmatically and can’t be achieved by user interaction and the resulting visual state depends on the values of the &lt;code&gt;indeterminate&lt;/code&gt; and &lt;code&gt;checked&lt;/code&gt; properties: &lt;ul&gt; &lt;li&gt; If the component is checked and indeterminate, it will be displayed as partially checked &lt;li&gt; If the component is checked and it is not indeterminate, it will be displayed as checked &lt;li&gt; If the component is not checked, it will be displayed as not checked regardless value of the indeterminate attribute &lt;/ul&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; name &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the name with which the component will be submitted in an HTML form. &lt;br&gt;&lt;br&gt; &lt;b&gt;Important:&lt;/b&gt; For the &lt;code&gt;name&lt;/code&gt; property to have effect, you must add the following import to your project: &lt;code&gt;import &quot;@ui5/webcomponents/dist/features/InputElementsFormSupport.js&quot;;&lt;/code&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When set, a native &lt;code&gt;input&lt;/code&gt; HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; readonly &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is read-only. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A read-only component is not editable, but still provides visual feedback upon user interaction. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; required &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is required. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.3.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; valueState &lt;br&gt; &lt;code&gt;value-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value state of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;(default)&lt;/li&gt; &lt;li&gt;&lt;code&gt;Success&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Information&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; wrappingType &lt;br&gt; &lt;code&gt;wrapping-type&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;WrappingType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component text wraps when there is not enough space. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt; - The text will be truncated with an ellipsis.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Normal&lt;/code&gt; - The text will wrap. The words will not be broken based on hyphenation.&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the component checked state changes. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/CheckBox/",
    "relUrl": "/playground/components/CheckBox/"
  },
  "76": {
    "id": "76",
    "title": "Color Palette",
    "content": "&lt;!DOCTYPE html&gt; Color Palette Open ColorPalette Color Palette Popover Close",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/ColorPalette/",
    "relUrl": "/playground/main/pages/ColorPalette/"
  },
  "77": {
    "id": "77",
    "title": "Color Palette",
    "content": "ColorPalette v1.0.0-rc.12 @ui5/webcomponents &lt;ui5-color-palette&gt; Color Palette &lt;ui5-color-palette&gt; &lt;ui5-color-palette-item value=&quot;darkblue&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;pink&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;#444444&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;rgb(0,200,0)&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;green&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;darkred&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;yellow&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;blue&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;cyan&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;orange&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;#5480e7&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;#ff6699&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;/ui5-color-palette&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The &lt;code&gt;ui5-color-palette&lt;/code&gt; provides the users with a range of predefined colors. The colors are fixed and do not change with the theme. Usage The ui5-color-palette is meant for users that need to select a color from a predefined set. To define the colors, use the ui5-color-palette-item component inside the default slot of the ui5-color-palette. ES6 Module Import import &quot;@ui5/webcomponents/dist/ColorPalette.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the &lt;code&gt;ui5-color-palette-item&lt;/code&gt; elements.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;item-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the user selects a color. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;color&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the selected color&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;ColorPaletteItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-color-palette-item component represents a color in the the ui5-color-palette. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.base.types.CSSColor&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the colour of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The value should be a valid CSS color. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/ColorPalette/",
    "relUrl": "/playground/components/ColorPalette/"
  },
  "78": {
    "id": "78",
    "title": "Color Palette Popover",
    "content": "&lt;!DOCTYPE html&gt; Color Palette Popover Open ColorPalettePopover Open ColorPalettePopover Open ColorPalettePopover Open ColorPalettePopover Open ColorPalettePopover Open ColorPalettePopover",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/ColorPalettePopover/",
    "relUrl": "/playground/main/pages/ColorPalettePopover/"
  },
  "79": {
    "id": "79",
    "title": "Color Palette Popover",
    "content": "ColorPalettePopover @ui5/webcomponents &lt;ui5-color-palette&gt; Color Palette Popover with recent colors, default color and more colors features Open ColorPalettePopover &lt;ui5-button id=&quot;colorPaletteBtn&quot; &gt;Open ColorPalettePopover&lt;/ui5-button&gt; &lt;ui5-color-palette-popover id=&quot;colorPalettePopover&quot; show-recent-colors show-more-colors show-default-color default-color=&quot;green&quot;&gt; &lt;ui5-color-palette-item value=&quot;pink&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;darkblue&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;#444444&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;rgb(0,200,0)&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;green&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;darkred&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;yellow&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;blue&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;cyan&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;orange&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;#5480e7&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;#ff6699&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;/ui5-color-palette-popover&gt; &lt;script&gt; colorPaletteBtn.addEventListener(&quot;click&quot;, (event) =&gt; { colorPalettePopover.showAt(this); }); &lt;/script&gt; Color Palette Popover without any additional features Open ColorPalettePopover &lt;ui5-button id=&quot;colorPaletteBtn1&quot; &gt;Open ColorPalettePopover&lt;/ui5-button&gt; &lt;ui5-color-palette-popover id=&quot;colorPalettePopover1&quot;&gt; &lt;ui5-color-palette-item value=&quot;pink&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;darkblue&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;#444444&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;rgb(0,200,0)&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;green&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;darkred&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;yellow&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;blue&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;cyan&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;orange&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;#5480e7&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;ui5-color-palette-item value=&quot;#ff6699&quot;&gt;&lt;/ui5-color-palette-item&gt; &lt;/ui5-color-palette-popover&gt; &lt;script&gt; colorPaletteBtn1.addEventListener(&quot;click&quot;, (event) =&gt; { colorPalettePopover1.showAt(this); }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; Represents a predefined range of colors for easier selection. Overview The ColorPalettePopover provides the users with a slot to predefine colors. You can customize them with the use of the colors property. You can specify a defaultColor and display a “Default color” button for the user to choose directly. You can display a “More colors…” button that opens an additional color picker for the user to choose specific colors that are not present in the predefined range. Usage The palette is intended for users, who don’t want to check and remember the different values of the colors and spend large amount of time to configure the right color through the color picker. For the ui5-color-palette-popover &lt;h3&gt;ES6 Module Import&lt;/h3&gt; import @ui5/webcomponents/dist/ColorPalettePopover.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; defaultColor &lt;br&gt; &lt;code&gt;default-color&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;CSSColor&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the default color of the component. &lt;b&gt;Note:&lt;/b&gt; The default color should be a part of the ColorPalette colors&lt;/code&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showDefaultColor &lt;br&gt; &lt;code&gt;show-default-color&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the user can choose the default color from a button. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showMoreColors &lt;br&gt; &lt;code&gt;show-more-colors&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the user can choose a custom color from a component. &lt;b&gt;Note:&lt;/b&gt; In order to use this property you need to import the following module: &lt;code&gt;&quot;@ui5/webcomponents/dist/features/ColorPaletteMoreColors.js&quot;&lt;/code&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showRecentColors &lt;br&gt; &lt;code&gt;show-recent-colors&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the user can see the last used colors in the bottom of the component &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content of the component.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;item-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the user selects a color. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;color&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the selected color&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;openPopover&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Shows the ColorPalettePopover. &lt;b&gt;Note:&lt;/b&gt; The method is deprecated and will be removed in future, use &lt;code&gt;showAt&lt;/code&gt; instead.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;opener&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the element that the popover is shown at&lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;showAt&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Shows the ColorPalettePopover.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;opener&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the element that the popover is shown at&lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/ColorPalettePopover/",
    "relUrl": "/playground/components/ColorPalettePopover/"
  },
  "80": {
    "id": "80",
    "title": "Color Picker",
    "content": "&lt;!DOCTYPE html&gt; ColorPicker Playground",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/ColorPicker/",
    "relUrl": "/playground/main/pages/ColorPicker/"
  },
  "81": {
    "id": "81",
    "title": "Color Picker",
    "content": "Color Picker v1.0.0-rc.12 @ui5/webcomponents &lt;ui5-color-picker&gt; Pick color &lt;ui5-color-picker&gt;&lt;/ui5-color-picker&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The &lt;code&gt;ui5-color-picker&lt;/code&gt; allows users to choose any color and provides different input options for selecting colors. Usage When to use:&lt;/h4 Use the color picker if: users need to select any color freely. When not to use: Users need to select one color from a predefined set of colors. Use the ColorPalette component instead. ES6 Module Import import &quot;@ui5/webcomponents/dist/ColorPicker.js&quot;; Properties/Attributes You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different. Name Type Default Value Description color CSSColor Defines the currently selected color of the component. Note: use HEX, RGB, RGBA, HSV formats or a CSS color name when modifying this property. Events This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as addEventListener. Name Description change Fired when the the selected color is changed &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; Privacy Policy Legal",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/ColorPicker/",
    "relUrl": "/playground/components/ColorPicker/"
  },
  "82": {
    "id": "82",
    "title": "Combo Box",
    "content": "&lt;!DOCTYPE html&gt; ComboBox test page Select country: Focus ComboBox Set value Custom error value state message with a Link. Additionl custom error value state message with a Link. Extra long text used as an error message. Extra long text used as an error message - 2. Extra long text used as an error message - 3. Items with grouping and value state: Items with grouping: Items with additional text: Lazy Loading - example does not work on IE11 Change event testing Changed value: Change call count: 0 Input event testing Input value: Input call count: 0 Contains filter StartsWith filter ComboBox in Compact Readonly ComboBox with value state",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/ComboBox/",
    "relUrl": "/playground/main/pages/ComboBox/"
  },
  "83": {
    "id": "83",
    "title": "Combo Box",
    "content": "ComboBox v1.0.0-rc.6 @ui5/webcomponents &lt;ui5-combobox&gt; Basic Example &lt;ui5-combobox placeholder=&quot;Enter value&quot;&gt; &lt;ui5-cb-item text=&quot;Item 1&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Item 2&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Item 3&quot;&gt;&lt;/ui5-cb-item&gt; &lt;/ui5-combobox&gt; &lt;ui5-combobox value-state=&quot;Success&quot; value=&quot;Item 1&quot;&gt; &lt;ui5-cb-item text=&quot;Item 1&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Item 2&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Item 3&quot;&gt;&lt;/ui5-cb-item&gt; &lt;/ui5-combobox&gt; &lt;ui5-combobox value-state=&quot;Warning&quot; value=&quot;Item 2&quot;&gt; &lt;ui5-cb-item text=&quot;Item 1&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Item 2&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Item 3&quot;&gt;&lt;/ui5-cb-item&gt; &lt;/ui5-combobox&gt; &lt;ui5-combobox value-state=&quot;Error&quot; value=&quot;Item 3&quot;&gt; &lt;ui5-cb-item text=&quot;Item 1&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Item 2&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Item 3&quot;&gt;&lt;/ui5-cb-item&gt; &lt;/ui5-combobox&gt; Disabled and Readonly properties &lt;ui5-combobox value=&quot;Disabled&quot; disabled&gt; &lt;ui5-cb-item text=&quot;Item 1&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Item 2&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Item 3&quot;&gt;&lt;/ui5-cb-item&gt; &lt;/ui5-combobox&gt; &lt;ui5-combobox value=&quot;Readonly&quot; readonly&gt; &lt;ui5-cb-item text=&quot;Item 1&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Item 2&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Item 3&quot;&gt;&lt;/ui5-cb-item&gt; &lt;/ui5-combobox&gt; Filters (StartsWithPerTerm(default), StartsWith, Contains) &lt;ui5-combobox placeholder=&quot;Contains&quot; filter=&quot;Contains&quot;&gt; &lt;ui5-cb-item text=&quot;Austria&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Bulgaria&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Germany&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;United Kingdom&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Kazakhstan&quot;&gt;&lt;/ui5-cb-item&gt; &lt;/ui5-combobox&gt; ComboBox with Two-Column Layout Items &lt;ui5-combobox placeholder=&quot;Two-column layout&quot;&gt; &lt;ui5-cb-item text=&quot;Austria&quot; additional-text=&quot;AT&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Belgium&quot; additional-text=&quot;BE&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Brazil&quot; additional-text=&quot;BR&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Bulgaria&quot; additional-text=&quot;BG&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Canada&quot; additional-text=&quot;CA&quot;&gt;&lt;/ui5-cb-item&gt; &lt;/ui5-combobox&gt; ComboBox with Grouping of Items &lt;ui5-combobox placeholder=&quot;ComboBox with grouping of suggestions&quot;&gt; &lt;ui5-cb-group-item text=&quot;A&quot;&gt;&lt;/ui5-cb-group-item&gt; &lt;ui5-cb-item text=&quot;Argentina&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Australia&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Austria&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-group-item text=&quot;B&quot;&gt;&lt;/ui5-cb-group-item&gt; &lt;ui5-cb-item text=&quot;Bahrain&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Belgium&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Brazil&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-group-item text=&quot;C&quot;&gt;&lt;/ui5-cb-group-item&gt; &lt;ui5-cb-item text=&quot;Canada&quot;&gt;&lt;/ui5-cb-item&gt; &lt;ui5-cb-item text=&quot;Chile&quot;&gt;&lt;/ui5-cb-item&gt; &lt;/ui5-combobox&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-combobox component represents a drop-down menu with a list of the available options and a text input field to narrow down the options. It is commonly used to enable users to select an option from a predefined list. Structure The ui5-combobox consists of the following elements: &lt;ul&gt; &lt;li&gt; Input field - displays the selected option or a custom user entry. Users can type to narrow down the list or enter their own value. &lt;li&gt; Drop-down arrow - expands collapses the option list.&lt;/li&gt; &lt;li&gt; Option list - the list of available options.&lt;/li&gt; &lt;/ul&gt; Keyboard Handling The ui5-combobox provides advanced keyboard handling. [F4], [ALT]+[UP], or [ALT]+[DOWN] - Toggles the picker. [ESC] - Closes the picker, if open. If closed, cancels changes and reverts the typed in value. [ENTER] or [RETURN] - If picker is open, takes over the currently selected item and closes it. [DOWN] - Selects the next matching item in the picker. [UP] - Selects the previous matching item in the picker. [PAGEDOWN] - Moves selection down by page size (10 items by default). [PAGEUP] - Moves selection up by page size (10 items by default). [HOME] - If focus is in the ComboBox, moves cursor at the beginning of text. If focus is in the picker, selects the first item. [END] - If focus is in the ComboBox, moves cursor at the end of text. If focus is in the picker, selects the last item. ES6 Module Import import &quot;@ui5/webcomponents/dist/ComboBox&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the component &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is in disabled state. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A disabled component is completely noninteractive. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; filter &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;StartsWithPerTerm&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the filter type of the component. Available options are: &lt;code&gt;StartsWithPerTerm&lt;/code&gt;, &lt;code&gt;StartsWith&lt;/code&gt; and &lt;code&gt;Contains&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; loading &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Indicates whether a loading indicator should be shown in the picker. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; placeholder &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a short hint intended to aid the user with data entry when the component has no value. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; readonly &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is read-only. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A read-only component is not editable, but still provides visual feedback upon user interaction. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; required &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is required. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value of the component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; valueState &lt;br&gt; &lt;code&gt;value-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value state of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Success&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Information&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the component items.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;icon&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the icon to be displayed in the input field.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;valueStateMessage&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the value state message that will be displayed as pop up under the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If not specified, a default text (in the respective language) will be displayed. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;valueStateMessage&lt;/code&gt; would be displayed, when the &lt;code&gt;ui5-combobox&lt;/code&gt; is in &lt;code&gt;Information&lt;/code&gt;, &lt;code&gt;Warning&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt; value state.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the input operation has finished by pressing Enter, focusout or an item is selected. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;input&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when typing in input. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; filterValue property is updated, input is changed. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;selection-change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when selection is changed by user interaction &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; item to be selected.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;ComboBoxItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; The &lt;code&gt;ui5-cb-item&lt;/code&gt; represents the item for a &lt;code&gt;ui5-combobox&lt;/code&gt;. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; additionalText &lt;br&gt; &lt;code&gt;additional-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the additional text of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.11&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the component. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;ComboBoxGroupItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; The &lt;code&gt;ui5-cb-group-item&lt;/code&gt; is type of suggestion item, that can be used to split the &lt;code&gt;ui5-combobox&lt;/code&gt; suggestions into groups. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the component. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/ComboBox/",
    "relUrl": "/playground/components/ComboBox/"
  },
  "84": {
    "id": "84",
    "title": "Components",
    "content": "&lt;!DOCTYPE html&gt; Default values test page",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/Components/",
    "relUrl": "/playground/fiori/pages/Components/"
  },
  "85": {
    "id": "85",
    "title": "Components",
    "content": "&lt;!DOCTYPE html&gt; Default values test page Primary button Toggle button Press me Hello world Hello world Required Primary button Hello world Press me New Items Laptop HP Discounted Items Hello world I am a native heading! UI5 Hello world Toggle button Product Supplier Quibusdam, veniam! Architecto debitis iusto ad et, asperiores quisquam perferendis reprehenderit ipsa voluptate minus minima, perspiciatis cum. Totam harum necessitatibus numquam voluptatum. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga magni facere error dicta beatae optio repudiandae vero, quidem voluptatibus perferendis eum maiores rem tempore voluptates aperiam eos enim delectus unde.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Components/",
    "relUrl": "/playground/main/pages/Components/"
  },
  "86": {
    "id": "86",
    "title": "Core Controls",
    "content": "&lt;!DOCTYPE html&gt; Core Controls Mango Redd Pink Pink 2 Purple Blue Green Lemon Grey indigo Cozy Compact Condensed Action Primary Secondary Inactive Agree Decline Warning Warning",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/CoreControls/",
    "relUrl": "/playground/main/pages/CoreControls/"
  },
  "87": {
    "id": "87",
    "title": "Core Controls_exp",
    "content": "&lt;!DOCTYPE html&gt; Core Controls Mango Redd Pink Pink 2 Purple Blue Green Lemon Grey indigo Cozy Compact Condensed Action Primary Secondary Inactive Agree Decline Warning Warning",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/CoreControls_exp/",
    "relUrl": "/playground/main/pages/CoreControls_exp/"
  },
  "88": {
    "id": "88",
    "title": "Custom C S S",
    "content": "&lt;!DOCTYPE html&gt; Button 1 2 Apply custom css and rerender",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/CustomCSS/",
    "relUrl": "/playground/main/pages/CustomCSS/"
  },
  "89": {
    "id": "89",
    "title": "Date Picker",
    "content": "&lt;!DOCTYPE html&gt; DatePicker test page Information message. This is a Link. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3. Information message 2. This is a Link. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3. placeholder + events change: N/A input: N/A placeholder + prevented default events change: N/A input: N/A format-pattern - &#39;short&#39; format-pattern - &#39;long&#39; format-pattern - &#39;QQQ yyyy, MMM dd&#39; format-pattern - &#39;EEE, M/d/yyyy&#39; Try the value - &#39;today&#39; Value is set using Java Script Date object Set date disabled readonly islamic calendar type buddhist calendar type japanese calendar type Date picker with primary and secondary calendar type explicitly set empty placeholder Date picker with min and max date 9/1/2019 - 11/1/2019 Date picker with only min date 1/1/2000 Date picker with only max date date 1/1/2100 1 months range 2 months range 3 months range 1 year range Test accessibleName and accessibleNameRef info text DatePicker in Compact DatePicker with properties given in the wrong format",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/DatePicker/",
    "relUrl": "/playground/main/pages/DatePicker/"
  },
  "90": {
    "id": "90",
    "title": "Date Picker",
    "content": "DatePicker @ui5/webcomponents &lt;ui5-date-picker&gt; Basic DatePicker &lt;ui5-date-picker id=&quot;myDatepicker1&quot;&gt;&lt;/ui5-date-picker&gt; DatePicker with Placeholder, Tooltip, Events, ValueState and valueStateMessage The value is not valid. Please provide valid value &lt;ui5-date-picker id=&#39;myDatepicker2&#39; placeholder=&#39;Delivery Date...&#39;&gt; &lt;div slot=&quot;valueStateMessage&quot;&gt;The value is not valid. Please provide valid value&lt;/div&gt; &lt;/ui5-date-picker&gt; &lt;script&gt; const dp = document.getElementById(&#39;myDatepicker2&#39;); dp.addEventListener(&#39;change&#39;, (e) =&gt; { dp.setAttribute(&#39;value-state&#39;, e.detail.valid ? &#39;None&#39; : &#39;Error&#39;); console.log(&#39;change: &#39;, e.detail); }); dp.addEventListener(&#39;input&#39;, (e) =&gt; console.log(&#39;input: &#39;, e.detail)); &lt;/script&gt; DatePicker with Minimum and Maximum Date - 1/1/2020 - 4/5/2020 format-pattern=&quot;dd/MM/yyyy&quot; &lt;ui5-date-picker id=&quot;myDatepicker12&quot; min-date=&quot;1/1/2020&quot; max-date=&quot;4/5/2020&quot; format-pattern=&quot;dd/MM/yyyy&quot;&gt;&lt;/ui5-date-picker&gt; DatePicker with shortcuts: type &quot;today&quot; or &quot;yesterday&quot; and press &quot;Enter&quot; &lt;ui5-date-picker&gt;&lt;/ui5-date-picker&gt; DatePicker with format-pattern=&#39;short&#39; &lt;/div&gt; &lt;ui5-date-picker format-pattern=&#39;short&#39;&gt;&lt;/ui5-date-picker&gt; DatePicker with format-pattern=&#39;long&#39; &lt;ui5-date-picker format-pattern=&#39;long&#39;&gt;&lt;/ui5-date-picker&gt; DatePicker with format-pattern=&#39;QQQ yyyy, MMM dd&#39;, value=&#39;Q4 2018, Feb 14&#39; &lt;ui5-date-picker format-pattern=&#39;QQQ yyyy, MMM dd&#39; value=&#39;Q4 2018, Feb 14&#39;&gt;&lt;/ui5-date-picker&gt; DatePicker with format-pattern=&#39;EEE, M/d/yyyy&#39; &lt;ui5-date-picker format-pattern=&#39;EEE, M/d/yyyy&#39;&gt;&lt;/ui5-date-picker&gt; Disabled DatePicker &lt;ui5-date-picker disabled value=&quot;8 September 2021&quot;&gt;&lt;/ui5-date-picker&gt; readonly DatePicker &lt;ui5-date-picker readonly value=&quot;8 September 2021&quot;&gt;&lt;/ui5-date-picker&gt; DatePicker with Japanese Calendar Type &lt;ui5-date-picker primary-calendar-type=&#39;Japanese&#39;&gt;&lt;/ui5-date-picker&gt; DatePicker with Islamic Calendar Type &lt;ui5-date-picker primary-calendar-type=&#39;Islamic&#39;&gt;&lt;/ui5-date-picker&gt; DatePicker with Buddhist Calendar Type &lt;ui5-date-picker primary-calendar-type=&#39;Buddhist&#39;&gt;&lt;/ui5-date-picker&gt; DatePicker with Persian Calendar Type &lt;ui5-date-picker primary-calendar-type=&#39;Persian&#39;&gt;&lt;/ui5-date-picker&gt; DatePicker with primary and secondary calendar type &lt;ui5-date-picker primary-calendar-type=&#39;Islamic&#39; secondary-calendar-type=&#39;Gregorian&#39;&gt;&lt;/ui5-date-picker&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-date-picker component provides an input field with assigned calendar which opens on user action. The ui5-date-picker allows users to select a localized date using touch, mouse, or keyboard input. It consists of two parts: the date input field and the date picker. Usage The user can enter a date by: &lt;ul&gt; &lt;li&gt;Using the calendar that opens in a popup&lt;/li&gt; &lt;li&gt;Typing it in directly in the input field&lt;/li&gt; &lt;/ul&gt; When the user makes an entry and presses the enter key, the calendar shows the corresponding date. When the user directly triggers the calendar display, the actual date is displayed. Formatting If a date is entered by typing it into the input field, it must fit to the used date format. Supported format options are pattern-based on Unicode LDML Date Format notation. For more information, see UTS #35: Unicode Locale Data Markup Language. For example, if the format-pattern is “yyyy-MM-dd”, a valid value string is “2015-07-30” and the same is displayed in the input. Keyboard Handling The ui5-date-picker provides advanced keyboard handling. If the ui5-date-picker is focused, you can open or close the drop-down by pressing F4, ALT+UP or ALT+DOWN keys. Once the drop-down is opened, you can use the UP, DOWN, LEFT, RIGHT arrow keys to navigate through the dates and select one by pressing the Space or Enter keys. Moreover you can use TAB to reach the buttons for changing month and year. If the ui5-date-picker input field is focused and its corresponding picker dialog is not opened, then users can increment or decrement the date referenced by dateValue property by using the following shortcuts: &lt;ul&gt; &lt;li&gt;[PAGEDOWN] - Decrements the corresponding day of the month by one&lt;/li&gt; &lt;li&gt;[SHIFT] + [PAGEDOWN] - Decrements the corresponding month by one&lt;/li&gt; &lt;li&gt;[SHIFT] + [CTRL] + [PAGEDOWN] - Decrements the corresponding year by one&lt;/li&gt; &lt;li&gt;[PAGEUP] - Increments the corresponding day of the month by one&lt;/li&gt; &lt;li&gt;[SHIFT] + [PAGEUP] - Increments the corresponding month by one&lt;/li&gt; &lt;li&gt;[SHIFT] + [CTRL] + [PAGEUP] - Increments the corresponding year by one&lt;/li&gt; &lt;/ul&gt; Calendar types The component supports several calendar types - Gregorian, Buddhist, Islamic, Japanese and Persian. By default the Gregorian Calendar is used. In order to use the Buddhist, Islamic, Japanese or Persian calendar, you need to set the primaryCalendarType property and import one or more of the following modules: import &quot;@ui5/webcomponents-localization/dist/features/calendar/Buddhist.js&quot;; import &quot;@ui5/webcomponents-localization/dist/features/calendar/Islamic.js&quot;; import &quot;@ui5/webcomponents-localization/dist/features/calendar/Japanese.js&quot;; import &quot;@ui5/webcomponents-localization/dist/features/calendar/Persian.js&quot;; Or, you can use the global configuration and set the calendarType key: &lt;pre&gt;&lt;script data-id=&quot;sap-ui-config&quot; type=&quot;application/json&quot;&gt; { &quot;calendarType&quot;: &quot;Japanese&quot; } &lt;/script&gt;&lt;/pre&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/DatePicker&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the aria-label attribute for the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; dateValue (readonly) &lt;br&gt; &lt;code&gt;date-value&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Date&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Currently selected date represented as a Local JavaScript Date instance. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the component is displayed as disabled. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideWeekNumbers &lt;br&gt; &lt;code&gt;hide-week-numbers&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the visibility of the week numbers column. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; For calendars other than Gregorian, the week numbers are not displayed regardless of what is set. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.8&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; name &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the name with which the component will be submitted in an HTML form. &lt;br&gt;&lt;br&gt; &lt;b&gt;Important:&lt;/b&gt; For the &lt;code&gt;name&lt;/code&gt; property to have effect, you must add the following import to your project: &lt;code&gt;import &quot;@ui5/webcomponents/dist/features/InputElementsFormSupport.js&quot;;&lt;/code&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When set, a native &lt;code&gt;input&lt;/code&gt; HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; placeholder &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a short hint, intended to aid the user with data entry when the component has no value. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; readonly &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the component is displayed as read-only. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; required &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is required. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.9&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a formatted date value. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; valueState &lt;br&gt; &lt;code&gt;value-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value state of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Success&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Information&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; formatPattern &lt;br&gt; &lt;code&gt;format-pattern&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the format, displayed in the input field. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; maxDate &lt;br&gt; &lt;code&gt;max-date&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the maximum date available for selection. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.6&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; minDate &lt;br&gt; &lt;code&gt;min-date&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the minimum date available for selection. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.6&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; primaryCalendarType &lt;br&gt; &lt;code&gt;primary-calendar-type&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;CalendarType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Sets a calendar type used for display. If not set, the calendar type of the global configuration is used. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; secondaryCalendarType &lt;br&gt; &lt;code&gt;secondary-calendar-type&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;CalendarType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the secondary calendar type. If not set, the calendar will only show the primary calendar type. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.16&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;valueStateMessage&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the value state message that will be displayed as pop up under the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If not specified, a default text (in the respective language) will be displayed. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;valueStateMessage&lt;/code&gt; would be displayed, when the component is in &lt;code&gt;Information&lt;/code&gt;, &lt;code&gt;Warning&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt; value state.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the input operation has finished by pressing Enter or on focusout. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;value&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The submitted value.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;valid&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Indicator if the value is in correct format pattern and in valid range.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;input&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the value of the component is changed at each key stroke. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;value&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The submitted value.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;valid&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Indicator if the value is in correct format pattern and in valid range.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;closePicker&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Closes the picker.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;formatValue&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Formats a Java Script date object into a string representing a locale date according to the &lt;code&gt;formatPattern&lt;/code&gt; property of the DatePicker instance&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;date&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; object &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; A Java Script date object to be formatted as string&lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;isInValidRange&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Checks if a date is between the minimum and maximum date.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;value&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; A value to be checked&lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;isOpen&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Checks if the picker is open.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;isValid&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Checks if a value is valid against the current date format of the DatePicker.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;value&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; A value to be tested against the current date format&lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;openPicker&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Opens the picker.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/DatePicker/",
    "relUrl": "/playground/components/DatePicker/"
  },
  "91": {
    "id": "91",
    "title": "Date Picker_test_page",
    "content": "&lt;!DOCTYPE html&gt; Set date 0 0 Minimum and Maximum Date Minimum and Maximum Date In Smaller Range Test placeholder DatePicker with valueStateMessage This date is wrong DatePicker with hide-week-numbers=true/false Test accessibleName and accessibleNameRef info text",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/DatePicker_test_page/",
    "relUrl": "/playground/main/pages/DatePicker_test_page/"
  },
  "92": {
    "id": "92",
    "title": "Date Range Picker",
    "content": "&lt;!DOCTYPE html&gt; DateRangePicker test page 0 daterange-picker with delimiter @ daterange-picker with format pattern dd/MM/yyyy daterange-picker with minDate 01/09/2019 and maxDate 01/11/2019 daterange-picker in Compact daterange-picker with format pattern yyyy-MM-ddy DateRange Picker with one date selected as first &amp; last",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/DateRangePicker/",
    "relUrl": "/playground/main/pages/DateRangePicker/"
  },
  "93": {
    "id": "93",
    "title": "Date Range Picker",
    "content": "DateRangePicker v1.0.0-rc.8 @ui5/webcomponents &lt;ui5-daterange-picker&gt; Basic DateRangePicker &lt;ui5-daterange-picker id=&quot;mydaterange-picker1&quot;&gt;&lt;/ui5-daterange-picker&gt; DateRangePicker with Minimum and Maximum Date - 1/1/2020 - 4/5/2020 format-pattern=&quot;dd/MM/yyyy&quot; &lt;ui5-daterange-picker id=&quot;mydaterange-picker12&quot; min-date=&quot;1/1/2020&quot; max-date=&quot;4/5/2020&quot; format-pattern=&quot;dd/MM/yyyy&quot;&gt;&lt;/ui5-daterange-picker&gt; DateRangePicker with format-pattern=&#39;long&#39; &lt;ui5-daterange-picker format-pattern=&#39;long&#39;&gt;&lt;/ui5-daterange-picker&gt; Disabled DateRangePicker &lt;ui5-daterange-picker disabled value=&quot;Mar 31, 2021 - Apr 9, 2021&quot;&gt;&lt;/ui5-daterange-picker&gt; readonly DateRangePicker &lt;ui5-daterange-picker readonly value=&quot;Mar 31, 2021 - Apr 9, 2021&quot;&gt;&lt;/ui5-daterange-picker&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The DateRangePicker enables the users to enter a localized date range using touch, mouse, keyboard input, or by selecting a date range in the calendar. Usage The user can enter a date by: Using the calendar that opens in a popup or typing it in directly in the input field (not available for mobile devices). For the ui5-daterange-picker &lt;h3&gt;ES6 Module Import&lt;/h3&gt; import &quot;@ui5/webcomponents/dist/DateRangePicker.js&quot;; Keyboard Handling The ui5-daterange-picker provides advanced keyboard handling. When the ui5-daterange-picker input field is focused the user can increment or decrement respectively the range start or end date, depending on where the cursor is. The following shortcuts are available: &lt;ul&gt; &lt;li&gt;[PAGEDOWN] - Decrements the corresponding day of the month by one&lt;/li&gt; &lt;li&gt;[SHIFT] + [PAGEDOWN] - Decrements the corresponding month by one&lt;/li&gt; &lt;li&gt;[SHIFT] + [CTRL] + [PAGEDOWN] - Decrements the corresponding year by one&lt;/li&gt; &lt;li&gt;[PAGEUP] - Increments the corresponding day of the month by one&lt;/li&gt; &lt;li&gt;[SHIFT] + [PAGEUP] - Increments the corresponding month by one&lt;/li&gt; &lt;li&gt;[SHIFT] + [CTRL] + [PAGEUP] - Increments the corresponding year by one&lt;/li&gt; &lt;/ul&gt; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; dateValue (readonly) &lt;br&gt; &lt;code&gt;date-value&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Date&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; &lt;b&gt;Note:&lt;/b&gt; The getter method is inherited and not supported. If called it will return an empty value. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; dateValueUTC (readonly) &lt;br&gt; &lt;code&gt;date-value-utc&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Date&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; &lt;b&gt;Note:&lt;/b&gt; The getter method is inherited and not supported. If called it will return an empty value. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; delimiter &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;-&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the symbol which separates the dates. If not supplied, the default time interval delimiter for the current locale will be used. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; endDateValue (readonly) &lt;br&gt; &lt;code&gt;end-date-value&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Date&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Returns the end date of the currently selected range as JavaScript Date instance. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; startDateValue (readonly) &lt;br&gt; &lt;code&gt;start-date-value&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Date&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Returns the start date of the currently selected range as JavaScript Date instance. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the aria-label attribute for the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the component is displayed as disabled. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideWeekNumbers &lt;br&gt; &lt;code&gt;hide-week-numbers&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the visibility of the week numbers column. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; For calendars other than Gregorian, the week numbers are not displayed regardless of what is set. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.8&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; name &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the name with which the component will be submitted in an HTML form. &lt;br&gt;&lt;br&gt; &lt;b&gt;Important:&lt;/b&gt; For the &lt;code&gt;name&lt;/code&gt; property to have effect, you must add the following import to your project: &lt;code&gt;import &quot;@ui5/webcomponents/dist/features/InputElementsFormSupport.js&quot;;&lt;/code&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When set, a native &lt;code&gt;input&lt;/code&gt; HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; placeholder &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a short hint, intended to aid the user with data entry when the component has no value. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; readonly &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the component is displayed as read-only. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; required &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is required. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.9&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a formatted date value. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; valueState &lt;br&gt; &lt;code&gt;value-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value state of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Success&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Information&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; formatPattern &lt;br&gt; &lt;code&gt;format-pattern&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the format, displayed in the input field. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; maxDate &lt;br&gt; &lt;code&gt;max-date&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the maximum date available for selection. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.6&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; minDate &lt;br&gt; &lt;code&gt;min-date&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the minimum date available for selection. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.6&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; primaryCalendarType &lt;br&gt; &lt;code&gt;primary-calendar-type&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;CalendarType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Sets a calendar type used for display. If not set, the calendar type of the global configuration is used. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; secondaryCalendarType &lt;br&gt; &lt;code&gt;secondary-calendar-type&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;CalendarType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the secondary calendar type. If not set, the calendar will only show the primary calendar type. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.16&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;valueStateMessage&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the value state message that will be displayed as pop up under the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If not specified, a default text (in the respective language) will be displayed. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;valueStateMessage&lt;/code&gt; would be displayed, when the component is in &lt;code&gt;Information&lt;/code&gt;, &lt;code&gt;Warning&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt; value state.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the input operation has finished by pressing Enter or on focusout. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;value&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The submitted value.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;valid&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Indicator if the value is in correct format pattern and in valid range.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;input&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the value of the component is changed at each key stroke. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;value&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The submitted value.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;valid&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Indicator if the value is in correct format pattern and in valid range.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;closePicker&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Closes the picker.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;formatValue&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Formats a Java Script date object into a string representing a locale date according to the &lt;code&gt;formatPattern&lt;/code&gt; property of the DatePicker instance&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;date&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; object &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; A Java Script date object to be formatted as string&lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;isInValidRange&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Checks if a date is between the minimum and maximum date.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;value&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; A value to be checked&lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;isOpen&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Checks if the picker is open.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;isValid&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Checks if a value is valid against the current date format of the DatePicker.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;value&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; A value to be tested against the current date format&lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;openPicker&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Opens the picker.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/DateRangePicker/",
    "relUrl": "/playground/components/DateRangePicker/"
  },
  "94": {
    "id": "94",
    "title": "Date Time Picker",
    "content": "&lt;!DOCTYPE html&gt; DateTimePicker Test Page DateTimePicker DateTimePicker format pattern Default format pattern Set date d/MM/yyyy, hh:mm aa d/MM/yyyy, hh:mm:ss aa yyyy-MM-dd-hh:mm:ss aa d/MM/yyyy, HH:mm:ss (24 hour format) d/MM/yyyy, H d/MM/yyyy - no timeset Test DateTimePicker change event on submit Change counter Changed value Test DateTimePicker change event on cancel Change counter Changed value DateTimePicker states DateTimePicker compact size DateTimePicker with secondary calendar type",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/DateTimePicker/",
    "relUrl": "/playground/main/pages/DateTimePicker/"
  },
  "95": {
    "id": "95",
    "title": "Date Time Picker",
    "content": "DateTimePicker v1.0.0-rc.7 @ui5/webcomponents &lt;ui5-datetime-picker&gt; DateTimePicker &lt;ui5-datetime-picker&gt;&lt;/ui5-datetime-picker&gt; DateTimePicker with format-pattern d/MM/yyyy, hh:mm aa yyyy-MM-dd-hh:mm:ss aa d/MM/yyyy, hh:mm:ss aa &lt;ui5-datetime-picker format-pattern=&quot;dd/MM/yyyy, hh:mm aa&quot; value=&quot;13/04/2020, 09:16 AM&quot; &gt;&lt;/ui5-datetime-picker&gt; &lt;ui5-datetime-picker format-pattern=&quot;yyyy-MM-dd-hh:mm:ss aa&quot; value=&quot;2020-04-13-04:16:16 AM&quot; &gt;&lt;/ui5-datetime-picker&gt; &lt;ui5-datetime-picker id=&quot;myDateTimePicker&quot; format-pattern=&quot;dd/MM/yyyy, hh:mm:ss aa&quot; value=&quot;13/04/2020, 03:16:16 AM&quot; &gt;&lt;/ui5-datetime-picker&gt; &lt;script&gt; myDateTimePicker.addEventListener(&quot;change&quot;, event =&gt; {}); &lt;/script&gt; DateTimePicker in states &lt;ui5-datetime-picker value-state=&quot;Error&quot;&gt;&lt;/ui5-datetime-picker&gt; &lt;ui5-datetime-picker value-state=&quot;Warning&quot;&gt;&lt;/ui5-datetime-picker&gt; &lt;ui5-datetime-picker value-state=&quot;Information&quot;&gt;&lt;/ui5-datetime-picker&gt; &lt;ui5-datetime-picker value-state=&quot;Success&quot;&gt;&lt;/ui5-datetime-picker&gt; &lt;ui5-datetime-picker readonly value=&quot;2020-04-13-04:16:16 AM&quot;&gt;&lt;/ui5-datetime-picker&gt; &lt;ui5-datetime-picker disabled value=&quot;2020-04-13-04:16:16 AM&quot;&gt;&lt;/ui5-datetime-picker&gt; DateTimePicker with secondary calendar type &lt;/ui5-date-picker&gt; &lt;ui5-datetime-picker primary-calendar-type=&quot;Gregorian&quot; secondary-calendar-type=&quot;Islamic&quot; &gt;&lt;/ui5-datetime-picker&gt; &lt;/section&gt; Overview The DateTimePicker component alows users to select both date (day, month and year) and time (hours, minutes and seconds) and for the purpose it consists of input field and Date/Time picker. Usage Use the DateTimePicker if you need a combined date and time input component. Don&#39;t use it if you want to use either date, or time value. In this case, use the DatePicker or the TimePicker components instead. The user can set date/time by: using the calendar and the time selectors typing in the input field Programmatically, to set date/time for the DateTimePicker, use the value property Formatting The value entered by typing into the input field must fit to the used date/time format. Supported format options are pattern-based on Unicode LDML Date Format notation. For more information, see UTS #35: Unicode Locale Data Markup Language. Example: the following format dd/MM/yyyy, hh:mm:ss aa corresponds the 13/04/2020, 03:16:16 AM value. The small &#39;h&#39; defines &quot;12&quot; hours format and the &quot;aa&quot; symbols - &quot;AM/PM&quot; time periods. Example: the following format dd/MM/yyyy, HH:mm:ss corresponds the 13/04/2020, 15:16:16 value. The capital &#39;H&#39; indicates &quot;24&quot; hours format. Note: If the formatPattern does NOT include time, the DateTimePicker will fallback to the default time format according to the locale. Note: If no placeholder is set to the DateTimePicker, the current formatPattern is displayed as a placeholder. If another placeholder is needed, it must be set or in case no placeholder is needed - it can be set to an empty string. Note: If the user input does NOT match the formatPattern, the DateTimePicker makes an attempt to parse it based on the locale settings. Responsive behavior The DateTimePicker is responsive and fully adapts to all devices. For larger screens, such as tablet or desktop, it is displayed as a popover, while on phone devices, it is displayed full screen. ES6 Module Import import &quot;@ui5/webcomponents/dist/DateTimePicker.js&quot;; Properties/Attributes You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different. Name Type Default Value Description accessibleName accessible-name string &quot;&quot; Defines the aria-label attribute for the component. since v1.0.0-rc.15 accessibleNameRef accessible-name-ref string &quot;&quot; Receives id(or many ids) of the elements that label the component. since v1.0.0-rc.15 dateValue (readonly) date-value Date Currently selected date represented as a Local JavaScript Date instance. disabled boolean false Determines whether the component is displayed as disabled. hideWeekNumbers hide-week-numbers boolean false Defines the visibility of the week numbers column. Note: For calendars other than Gregorian, the week numbers are not displayed regardless of what is set. since v1.0.0-rc.8 name string &quot;&quot; Determines the name with which the component will be submitted in an HTML form. Important: For the name property to have effect, you must add the following import to your project: import &quot;@ui5/webcomponents/dist/features/InputElementsFormSupport.js&quot;; Note: When set, a native input HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form. placeholder string undefined Defines a short hint, intended to aid the user with data entry when the component has no value. Note: When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern. readonly boolean false Determines whether the component is displayed as read-only. required boolean false Defines whether the component is required. since v1.0.0-rc.9 value string &quot;&quot; Defines a formatted date value. valueState value-state ValueState &quot;None&quot; Defines the value state of the component. Available options are: None Error Warning Success Information formatPattern format-pattern string &quot;&quot; Determines the format, displayed in the input field. maxDate max-date string &quot;&quot; Determines the maximum date available for selection. since v1.0.0-rc.6 minDate min-date string &quot;&quot; Determines the minimum date available for selection. since v1.0.0-rc.6 primaryCalendarType primary-calendar-type CalendarType Sets a calendar type used for display. If not set, the calendar type of the global configuration is used. secondaryCalendarType secondary-calendar-type CalendarType undefined Defines the secondary calendar type. If not set, the calendar will only show the primary calendar type. since v1.0.0-rc.16 Slots This Element provides slot(s). This means it can display its child nodes. Unless targeting the default slot, use the slot attribute to define the destination slot for each child. Text, along with HTML Elements with no slot attribute, goes the the default slot. Slot Type Description valueStateMessage HTMLElement Defines the value state message that will be displayed as pop up under the component. Note: If not specified, a default text (in the respective language) will be displayed. Note: The valueStateMessage would be displayed, when the component is in Information, Warning or Error value state. Events This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as addEventListener. Name Description change Fired when the input operation has finished by pressing Enter or on focusout. value type: string description: The submitted value. valid type: boolean description: Indicator if the value is in correct format pattern and in valid range. input Fired when the value of the component is changed at each key stroke. value type: string description: The submitted value. valid type: boolean description: Indicator if the value is in correct format pattern and in valid range. Methods This Web Component exposes public methods. You can invoke them directly on the Web Component instance. Name Description closePicker Closes the picker. formatValue Formats a Java Script date object into a string representing a locale date according to the formatPattern property of the DatePicker instance date type: object description: A Java Script date object to be formatted as string isInValidRange Checks if a date is between the minimum and maximum date. value type: string description: A value to be checked isOpen Checks if the picker is open. isValid Checks if a value is valid against the current date format of the DatePicker. value type: string description: A value to be tested against the current date format openPicker Opens the picker. Privacy Policy Legal",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/DateTimePicker/",
    "relUrl": "/playground/components/DateTimePicker/"
  },
  "96": {
    "id": "96",
    "title": "Day Picker",
    "content": "&lt;!DOCTYPE html&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/DayPicker/",
    "relUrl": "/playground/main/pages/DayPicker/"
  },
  "97": {
    "id": "97",
    "title": "Dialog",
    "content": "&lt;!DOCTYPE html&gt; Dialog Open Stretched Dialog Open Stretched Dialog - no paddings Open with Attribute Open Message Dialog Open Prevent closing Dialog Open Multiple modals Open empty dialog (no focusable element) Open wide dialog Open wide dialog 2 Open draggable dialog Open resizable dialog Open draggable &amp; resizable dialog Open dialog which is created dynamically Open dialog calling show() multiple times Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. OK Close with Method Close with Attribute focus stop Resizable Hello World! Hello World Hello World! Hello World Hello World! Hello World Hello World! Hello World Hello World! Hello World Hello World! Hello World Hello World! Hello World Close Hello World! Hello World Hello World! Hello World Hello World! Hello World Hello World! Hello World Close Prevent closing the dialog. OK Are you sure? YES NO That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. OK That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. Build enterprise-ready web applications, responsive to all devices and running on the browser of your choice. That´s OpenUI5. OK Draggable dialog Move this dialog around the screen by dragging it by its header or use the arrow keys. This feature is available only on Desktop. OK Resize this dialog by dragging it by its resize handle or use shift+arrow keys. This feature is available only on Desktop. OK Move this dialog around the screen by dragging it by its header or use the arrow keys. Resize this dialog by dragging it by its resize handle or use shift+arrow keys. This feature is available only on Desktop. Close Hello World Again Open Dialog Hello World Hello World Footer Hello World Again Super Danger ! Hello World Again Empty Dialog with accessibleNameRef Some label Header Hello World! Dialog states Dialog with Error State Error Hello World! Dialog with Information State Information Hello World! Dialog with Success State Success Hello World! Dialog with Warning State Warning Hello World! Dialog roles Error State, no role set Error Hello World! No State, &#39;AlertDialog&#39; role set No state Hello World! Role &#39;None&#39; set Role &#39;None&#39; Hello World! Success State, &#39;AlertDialog&#39; role set Success Hello World! Dialog over a Dialog Header 1 Open a new Dialog Header 2 Open a new Dialog Header 3 Close Dialog Focus Some message Confirm Header text Close Open Dialog from list Test1 Test2 Test3 Close Scroll Helper open",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Dialog/",
    "relUrl": "/playground/main/pages/Dialog/"
  },
  "98": {
    "id": "98",
    "title": "Dialog",
    "content": "Dialog @ui5/webcomponents &lt;ui5-dialog&gt; Basic Dialog Show Dialog Username: Password: Email: Address: Register &lt;ui5-button id=&quot;openDialogButton&quot; design=&quot;Emphasized&quot;&gt;Open Dialog&lt;/ui5-button&gt; &lt;ui5-dialog id=&quot;hello-dialog&quot; header-text=&quot;Register Form&quot;&gt; &lt;section class=&quot;login-form&quot;&gt; &lt;div&gt; &lt;ui5-label for=&quot;username&quot; required&gt;Username: &lt;/ui5-label&gt; &lt;ui5-input id=&quot;username&quot;&gt;&lt;/ui5-input&gt; &lt;/div&gt; &lt;div&gt; &lt;ui5-label for=&quot;password&quot; required&gt;Password: &lt;/ui5-label&gt; &lt;ui5-input id=&quot;password&quot; type=&quot;Password&quot; value-state=&quot;Error&quot;&gt;&lt;/ui5-input&gt; &lt;/div&gt; &lt;div&gt; &lt;ui5-label for=&quot;email&quot; type=&quot;Email&quot; required&gt;Email: &lt;/ui5-label&gt; &lt;ui5-input id=&quot;email&quot;&gt;&lt;/ui5-input&gt; &lt;/div&gt; &lt;div&gt; &lt;ui5-label for=&quot;address&quot;&gt;Address: &lt;/ui5-label&gt; &lt;ui5-input id=&quot;address&quot;&gt;&lt;/ui5-input&gt; &lt;/div&gt; &lt;/section&gt; &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt; &lt;div style=&quot;flex: 1;&quot;&gt;&lt;/div&gt; &lt;ui5-button id=&quot;closeDialogButton&quot; design=&quot;Emphasized&quot;&gt;Register&lt;/ui5-button&gt; &lt;/div&gt; &lt;/ui5-dialog&gt; &lt;script&gt; var dialogOpener = document.getElementById(&quot;openDialogButton&quot;); var dialog = document.getElementById(&quot;hello-dialog&quot;); var dialogCloser = document.getElementById(&quot;closeDialogButton&quot;); dialogOpener.accessibilityAttributes = { hasPopup: &quot;dialog&quot;, controls: dialog.id, } dialogOpener.addEventListener(&quot;click&quot;, function() { dialog.show(); }); dialogCloser.addEventListener(&quot;click&quot;, function() { dialog.close(); }); &lt;/script&gt; Draggable and Resizable Dialog Open Draggable/Resizable dialog Resize this dialog by dragging it by its resize handle. This feature available only on Desktop. Move this dialog around the screen by dragging it by its header. This feature available only on Desktop. OK &lt;ui5-dialog draggable resizable&gt;&lt;/ui5-dialog&gt; Dialog with SAP Fiori Styled Footer Open dialog Adding custom styles to achieve the look and feel of a SAP Fiori footer OK Close &lt;ui5-dialog id=&quot;fiori-footer-dialog&quot; header-text=&quot;SAP Fiori Styled Footer&quot;&gt; &lt;p&gt;Adding custom styles to achieve the look and feel of a SAP Fiori footer&lt;/p&gt; &lt;div slot=&quot;footer&quot; style=&quot;display: flex; align-items: center; justify-content: end; width: 100%; box-sizing: border-box;&quot;&gt; &lt;ui5-button design=&quot;Emphasized&quot; style=&quot;min-width: 4rem;&quot;&gt;OK&lt;/ui5-button&gt; &lt;ui5-button style=&quot;margin: 0 0 0 0.5rem; min-width: 4rem;&quot;&gt;Close&lt;/ui5-button&gt; &lt;/div&gt; &lt;/ui5-dialog&gt; Dialogs with various state properties Open error state dialog Open information state dialog Open success state dialog Open warning state dialog Error state dialog Close Information state dialog Close Success state dialog Close Warning state dialog Close &lt;ui5-dialog id=&quot;error-state-dialog&quot; header-text=&quot;Error&quot; state=&quot;Error&quot;&gt; &lt;p&gt;Error state dialog&lt;/p&gt; &lt;div slot=&quot;footer&quot; style=&quot;display: flex; justify-content: flex-end; width: 100%; padding: .25rem 1rem;&quot;&gt; &lt;ui5-button id=&quot;error-close&quot;&gt;Close&lt;/ui5-button&gt; &lt;/div&gt; &lt;/ui5-dialog&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The &lt;code&gt;ui5-dialog&lt;/code&gt; component is used to temporarily display some information in a size-limited window in front of the regular app screen. It is used to prompt the user for an action or a confirmation. The &lt;code&gt;ui5-dialog&lt;/code&gt; interrupts the current app processing as it is the only focused UI element and the main screen is dimmed/blocked. The dialog combines concepts known from other technologies where the windows have names such as dialog box, dialog window, pop-up, pop-up window, alert box, or message box. &lt;br&gt;&lt;br&gt; The &lt;code&gt;ui5-dialog&lt;/code&gt; is modal, which means that an user action is required before it is possible to return to the parent window. To open multiple dialogs, each dialog element should be separate in the markup. This will ensure the correct modal behavior. Avoid nesting dialogs within each other. The content of the &lt;code&gt;ui5-dialog&lt;/code&gt; is fully customizable. Structure A ui5-dialog consists of a header, content, and a footer for action buttons. The ui5-dialog is usually displayed at the center of the screen. Its position can be changed by the user. To enable this, you need to set the property draggable accordingly. Responsive Behavior The stretch property can be used to stretch the ui5-dialog on full screen. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-dialog exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;header - Used to style the header of the component&lt;/li&gt; &lt;li&gt;content - Used to style the content of the component&lt;/li&gt; &lt;li&gt;footer - Used to style the footer of the component&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/Dialog&quot;; Note: We don’t recommend nesting popup-like components (ui5-dialog, ui5-popover) inside ui5-dialog. Ideally you should create all popups on the same level inside your HTML page and just open them from one another, rather than nesting them. Note: We don’t recommend nesting popup-like components (ui5-dialog, ui5-popover) inside other components containing z-index. This might break z-index management. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; draggable &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the component is draggable. If this property is set to true, the Dialog will be draggable by its header. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The component can be draggable only in desktop mode. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; This property overrides the default HTML &quot;draggable&quot; attribute native behavior. When &quot;draggable&quot; is set to true, the native browser &quot;draggable&quot; behavior is prevented and only the Dialog custom logic (&quot;draggable by its header&quot;) works. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.9&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; headerText &lt;br&gt; &lt;code&gt;header-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the header text. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If &lt;code&gt;header&lt;/code&gt; slot is provided, the &lt;code&gt;headerText&lt;/code&gt; is ignored. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; resizable &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Configures the component to be resizable. If this property is set to true, the Dialog will have a resize handle in its bottom right corner in LTR languages. In RTL languages, the resize handle will be placed in the bottom left corner. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The component can be resizable only in desktop mode. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Upon resizing, externally defined height and width styling will be ignored. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.10&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; state &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the state of the &lt;code&gt;Dialog&lt;/code&gt;. &lt;br&gt;&lt;br&gt; Available options are: &lt;code&gt;&quot;None&quot;&lt;/code&gt; (by default), &lt;code&gt;&quot;Success&quot;&lt;/code&gt;, &lt;code&gt;&quot;Warning&quot;&lt;/code&gt;, &lt;code&gt;&quot;Information&quot;&lt;/code&gt; and &lt;code&gt;&quot;Error&quot;&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If &lt;code&gt;&quot;Error&quot;&lt;/code&gt; and &lt;code&gt;&quot;Warning&quot;&lt;/code&gt; state is set, it will change the accessibility role to &quot;alertdialog&quot;, if the accessibleRole property is set to &lt;code&gt;&quot;Dialog&quot;&lt;/code&gt;. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; stretch &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the component should be stretched to fullscreen. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The component will be stretched to approximately 90% of the viewport. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the IDs of the elements that label the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleRole &lt;br&gt; &lt;code&gt;accessible-role&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;PopupAccessibleRole&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Dialog&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Allows setting a custom role. Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;AlertDialog&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; initialFocus &lt;br&gt; &lt;code&gt;initial-focus&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the ID of the HTML Element, which will get the initial focus. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; open &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Indicates if the element is open &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.2.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; preventFocusRestore &lt;br&gt; &lt;code&gt;prevent-focus-restore&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the focus should be returned to the previously focused element, when the popup closes. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.8&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;footer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the footer HTML Element.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;header&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the header HTML Element. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If &lt;code&gt;header&lt;/code&gt; slot is provided, the labelling of the dialog is a responsibility of the application developer. &lt;code&gt;accessibleName&lt;/code&gt; should be used.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content of the Popup.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;after-close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired after the component is closed. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;after-open&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired after the component is opened. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;before-close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired before the component is closed. This event can be cancelled, which will prevent the popup from closing. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;escPressed&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Indicates that &lt;code&gt;ESC&lt;/code&gt; key has triggered the event.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;before-open&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired before the component is opened. This event can be cancelled, which will prevent the popup from opening. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;show&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Shows the dialog.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;preventInitialFocus&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Prevents applying the focus inside the popup&lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;applyFocus&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Focuses the element denoted by &lt;code&gt;initialFocus&lt;/code&gt;, if provided, or the first focusable element otherwise.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Closes the popup.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;isOpen&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Tells if the component is opened&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Dialog/",
    "relUrl": "/playground/components/Dialog/"
  },
  "99": {
    "id": "99",
    "title": "Dialog Lifecycle",
    "content": "&lt;!DOCTYPE html&gt; Button Open Dialog Hello World! Dismiss",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/DialogLifecycle/",
    "relUrl": "/playground/main/pages/DialogLifecycle/"
  },
  "100": {
    "id": "100",
    "title": "Dialog Semantic",
    "content": "&lt;!DOCTYPE html&gt; Dialog Open Warning Dialog Warning! The project schedule was last updated over a year ago. Dismiss",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/DialogSemantic/",
    "relUrl": "/playground/main/pages/DialogSemantic/"
  },
  "101": {
    "id": "101",
    "title": "Duration Picker",
    "content": "&lt;!DOCTYPE html&gt; DurationPicker Read Only Duration Picker Duration Picker With No Seconds, Minutes or Hours Duration Pickers With MaxValue Duration Pickers With Step Please provide valid value",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/DurationPicker/",
    "relUrl": "/playground/main/pages/DurationPicker/"
  },
  "102": {
    "id": "102",
    "title": "Dynamic Side Content",
    "content": "&lt;!DOCTYPE html&gt; Dynamic Side Content Main Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque. Sed mauris nunc, sollicitudin eget mi nec, tincidunt molestie diam. Aliquam orci dui, vestibulum quis blandit et, interdum vel arcu. Vestibulum sit amet quam ut sapien pulvinar consequat ac sed turpis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Phasellus quam diam, mattis vitae condimentum ac, ornare vel dui. Pellentesque orci tellus, tempor vel ex eget, luctus vehicula massa. Nullam laoreet, lacus ut vulputate maximus, quam sem molestie nunc, vitae convallis sem nisi nec magna. Nullam a felis odio. Curabitur quis tellus nec risus suscipit dictum vitae eget augue. Maecenas faucibus felis a arcu ultricies, sed tempor ante pellentesque. Ut hendrerit ipsum sit amet ligula bibendum, sit amet vehicula lacus condimentum. Morbi lacinia nibh eu placerat sollicitudin. Praesent accumsan pulvinar massa, eget finibus odio lacinia ullamcorper. Integer neque quam, pretium sed accumsan id, euismod non nibh. Quisque luctus non mi in mollis. Suspendisse id lectus felis. Aliquam elementum nibh nibh. Nullam eget condimentum dolor. Suspendisse id dui non lorem imperdiet iaculis. Pellentesque ex turpis, vehicula a arcu quis, mattis auctor tellus. In ornare, libero ac rhoncus eleifend, felis orci sagittis felis, ac molestie est lacus fermentum odio. Mauris et porta nibh. Integer tellus leo, laoreet nec odio non, rutrum bibendum magna. Side Content Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a. Vivamus ut efficitur massa, ac porttitor dolor. Nullam nec elit quis urna convallis tincidunt. Suspendisse potenti. Phasellus dignissim eget mauris eu egestas. Phasellus accumsan pulvinar pharetra. Pellentesque egestas viverra ipsum. Maecenas a dapibus neque. Morbi tincidunt ultricies enim, ac vehicula elit dapibus sit amet. Donec vel felis at felis elementum sodales id id erat. Pellentesque rutrum placerat mollis. In hac habitasse platea dictumst. Sed eget quam aliquet, pretium ligula vitae, lobortis mauris. Aenean eget ipsum auctor, dapibus quam at, pharetra nunc. S M L XL NeverShow ShowAboveS ShowAboveM ShowAboveL AlwaysShow BelowXL BelowL BelowM OnMinimumWidth Toggle",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/DynamicSideContent/",
    "relUrl": "/playground/fiori/pages/DynamicSideContent/"
  },
  "103": {
    "id": "103",
    "title": "Dynamic Side Content",
    "content": "Dynamic Side Content v1.1.0 @ui5/webcomponents-fiori &lt;ui5-dynamic-side-content&gt; Dynamic Side Content with default properties Main Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque. Side Content Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a. &lt;ui5-page&gt; &lt;ui5-dynamic-side-content&gt; &lt;div&gt; &lt;h1&gt;Main Content&lt;/h1&gt; &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque.&lt;/p&gt; &lt;/div&gt; &lt;div slot=&quot;sideContent&quot;&gt; &lt;h1&gt;Side Content&lt;/h1&gt; &lt;p&gt;Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a.&lt;/p&gt; &lt;/div&gt; &lt;/ui5-dynamic-side-content&gt; &lt;/ui5-page&gt; Dynamic Side Content with hideMainContent set Main Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque. Side Content Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a. &lt;ui5-page&gt; &lt;ui5-dynamic-side-content hide-main-content&gt; &lt;div&gt; &lt;h1&gt;Main Content&lt;/h1&gt; &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque.&lt;/p&gt; &lt;/div&gt; &lt;div slot=&quot;sideContent&quot;&gt; &lt;h1&gt;Side Content&lt;/h1&gt; &lt;p&gt;Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a.&lt;/p&gt; &lt;/div&gt; &lt;/ui5-dynamic-side-content&gt; &lt;/ui5-page&gt; Dynamic Side Content with hideSideContent set Main Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque. Side Content Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a. &lt;ui5-page&gt; &lt;ui5-dynamic-side-content hide-side-content&gt; &lt;div&gt; &lt;h1&gt;Main Content&lt;/h1&gt; &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque.&lt;/p&gt; &lt;/div&gt; &lt;div slot=&quot;sideContent&quot;&gt; &lt;h1&gt;Side Content&lt;/h1&gt; &lt;p&gt;Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a.&lt;/p&gt; &lt;/div&gt; &lt;/ui5-dynamic-side-content&gt; &lt;/ui5-page&gt; Dynamic Side Content with equalSplit set Main Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque. Side Content Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a. &lt;ui5-page&gt; &lt;ui5-dynamic-side-content equal-split&gt; &lt;div&gt; &lt;h1&gt;Main Content&lt;/h1&gt; &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque.&lt;/p&gt; &lt;/div&gt; &lt;div slot=&quot;sideContent&quot;&gt; &lt;h1&gt;Side Content&lt;/h1&gt; &lt;p&gt;Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a.&lt;/p&gt; &lt;/div&gt; &lt;/ui5-dynamic-side-content&gt; &lt;/ui5-page&gt; Dynamic Side Content with sideContentPosition=&quot;Start&quot; Main Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque. Side Content Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a. &lt;ui5-page&gt; &lt;ui5-dynamic-side-content side-content-position=&quot;Start&quot;&gt; &lt;div&gt; &lt;h1&gt;Main Content&lt;/h1&gt; &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque.&lt;/p&gt; &lt;/div&gt; &lt;div slot=&quot;sideContent&quot;&gt; &lt;h1&gt;Side Content&lt;/h1&gt; &lt;p&gt;Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a.&lt;/p&gt; &lt;/div&gt; &lt;/ui5-dynamic-side-content&gt; &lt;/ui5-page&gt; Dynamic Side Content with sideContentFallDown=&quot;BelowXL&quot; Main Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque. Side Content Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a. &lt;ui5-page&gt; &lt;ui5-dynamic-side-content side-content-fall-down=&quot;BelowXL&quot;&gt; &lt;div&gt; &lt;h1&gt;Main Content&lt;/h1&gt; &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque.&lt;/p&gt; &lt;/div&gt; &lt;div slot=&quot;sideContent&quot;&gt; &lt;h1&gt;Side Content&lt;/h1&gt; &lt;p&gt;Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a.&lt;/p&gt; &lt;/div&gt; &lt;/ui5-dynamic-side-content&gt; &lt;/ui5-page&gt; Dynamic Side Content with sideContentVisibility=&quot;ShowAboveM&quot; Main Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque. Side Content Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a. &lt;ui5-page&gt; &lt;ui5-dynamic-side-content side-content-visibility=&quot;ShowAboveM&quot;&gt; &lt;div&gt; &lt;h1&gt;Main Content&lt;/h1&gt; &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque.&lt;/p&gt; &lt;/div&gt; &lt;div slot=&quot;sideContent&quot;&gt; &lt;h1&gt;Side Content&lt;/h1&gt; &lt;p&gt;Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a.&lt;/p&gt; &lt;/div&gt; &lt;/ui5-dynamic-side-content&gt; &lt;/ui5-page&gt; Dynamic Side Content - toggle contents on mobile device (S size) Main Content Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque. Side Content Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a. Toggle &lt;ui5-page floating-footer show-footer&gt; &lt;ui5-dynamic-side-content id=&quot;dynamicSideContent&quot;&gt; &lt;div&gt; &lt;h1&gt;Main Content&lt;/h1&gt; &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc ex mi, elementum et ante commodo, semper sollicitudin magna. Sed dapibus ut tortor quis varius. Sed luctus sem at nunc porta vulputate. Suspendisse lobortis arcu est, quis ultrices ipsum fermentum a. Vestibulum a ipsum placerat ligula gravida fringilla at id ex. Etiam pellentesque lorem sed sagittis aliquam. Quisque semper orci risus, vel efficitur dui euismod aliquet. Morbi sapien sapien, rhoncus et rutrum nec, rhoncus id nisl. Cras non tincidunt enim, id eleifend neque.&lt;/p&gt; &lt;/div&gt; &lt;div slot=&quot;sideContent&quot;&gt; &lt;h1&gt;Side Content&lt;/h1&gt; &lt;p&gt;Morbi lorem libero, imperdiet id condimentum ac, tempor ut velit. Integer a laoreet sem. Nunc at sagittis nisi. Sed placerat diam eu porttitor dignissim. Maecenas nec fringilla tortor. Pellentesque ut elit est. Curabitur quis elit at mauris ullamcorper fringilla. Nullam diam mi, porttitor dictum orci nec, molestie luctus metus. Nunc ut ex blandit, elementum erat eget, pulvinar sapien. Donec nec lorem eu nunc eleifend tempor at non tortor. In quam velit, ornare at rutrum ac, porta ac augue. Suspendisse venenatis semper lacus at venenatis. Praesent vestibulum ligula nulla, at tempus lorem consequat suscipit. Aenean consequat dapibus dui, at bibendum mauris porta a.&lt;/p&gt; &lt;/div&gt; &lt;/ui5-dynamic-side-content&gt; &lt;div slot=&quot;footer&quot;&gt; &lt;ui5-bar design=&quot;FloatingFooter&quot;&gt; &lt;ui5-button id=&quot;toggleButton&quot; design=&quot;Positive&quot; slot=&quot;endContent&quot;&gt;Toggle&lt;/ui5-button&gt; &lt;/ui5-bar&gt; &lt;/div&gt; &lt;/ui5-page&gt; &lt;script&gt; toggleButton.addEventListener(&quot;click&quot;, function() { dynamicSideContent.toggleContents(); }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The DynamicSideContent (ui5-dynamic-side-content) is a layout component that allows additional content to be displayed in a way that flexibly adapts to different screen sizes. The side content appears in a container next to or directly below the main content (it doesn’t overlay). When the side content is triggered, the main content becomes narrower (if appearing side-by-side). The side content contains a separate scrollbar when appearing next to the main content. Usage When to use? Use this component if you want to display relevant information that is not critical for users to complete a task. Users should have access to all the key functions and critical information in the app even if they do not see the side content. This is important because on smaller screen sizes it may be difficult to display the side content in a way that is easily accessible for the user. When not to use? Don’t use it if you want to display navigation or critical information that prevents users from completing a task when they have no access to the side content. Responsive Behavior Screen width &gt; 1440px Main vs. side content ratio is 75 vs. 25 percent (with a minimum of 320px each). If the application defines a trigger, the side content can be hidden. Screen width &lt;= 1440px and &gt; 1024px Main vs. side content ratio is 66.666 vs. 33.333 percent (with a minimum of 320px each). If the side content width falls below 320 px, it automatically slides under the main content, unless the app development team specifies that it should disappear. Screen width &lt;= 1024px and &gt; 720px The side content ratio is fixed to 340px, and the main content takes the rest of the width. Only if the sideContentFallDown is set to OnMinimumWidth and screen width is &lt;= 960px and &gt; 720px the side content falls below the main content. Screen width &lt;= 720px (for example on a mobile device) In this case, the side content automatically disappears from the screen (unless specified to stay under the content by setting of sideContentVisibility property to AlwaysShow) and can be triggered from a pre-set trigger (specified within the app). When the side content is triggered, it replaces the main content. We recommend that you always place the trigger for the side content in the same location, such as in the app footer. A special case allows switching the comparison mode between the main and side content. In this case, the screen is split into 50:50 percent for main vs. side content. The responsive behavior of the equal split is the same as in the standard view - the side content disappears on screen widths of less than 720 px and can only be viewed by triggering it. ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/DynamicSideContent&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; equalSplit &lt;br&gt; &lt;code&gt;equal-split&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is in equal split mode. In this mode, the side and the main content take 50:50 percent of the container on all screen sizes except for phone, where the main and side contents are switching visibility using the toggle method. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideMainContent &lt;br&gt; &lt;code&gt;hide-main-content&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the visibility of the main content. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideSideContent &lt;br&gt; &lt;code&gt;hide-side-content&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the visibility of the side content. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; sideContentFallDown &lt;br&gt; &lt;code&gt;side-content-fall-down&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;SideContentFallDown&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;OnMinimumWidth&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines on which breakpoints the side content falls down below the main content. &lt;br&gt;&lt;br&gt; &lt;b&gt;The available values are:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;BelowXL&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;BelowL&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;BelowM&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;OnMinimumWidth&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; sideContentPosition &lt;br&gt; &lt;code&gt;side-content-position&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;SideContentPosition&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;End&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the side content is positioned before the main content (left side in LTR mode), or after the the main content (right side in LTR mode). &lt;br&gt;&lt;br&gt; &lt;b&gt;The available values are:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Start&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;End&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; sideContentVisibility &lt;br&gt; &lt;code&gt;side-content-visibility&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;SideContentVisibility&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;ShowAboveS&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines on which breakpoints the side content is visible. &lt;br&gt;&lt;br&gt; &lt;b&gt;The available values are:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;AlwaysShow&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ShowAboveL&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ShowAboveM&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ShowAboveS&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;NeverShow&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the main content.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;sideContent&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the side content.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;layout-change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fires when the current breakpoint has been changed. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;currentBreakpoint&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the current breakpoint.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;previousBreakpoint&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the breakpoint that was active before change to current breakpoint.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;mainContentVisible&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; visibility of the main content.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;sideContentVisible&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; visibility of the side content.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;toggleContents&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Toggles visibility of main and side contents on S screen size (mobile device).&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/DynamicSideContent/",
    "relUrl": "/playground/components/DynamicSideContent/"
  },
  "104": {
    "id": "104",
    "title": "Eventing",
    "content": "&lt;!DOCTYPE html&gt; Eventing Normal link Default prevented",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Eventing/",
    "relUrl": "/playground/main/pages/Eventing/"
  },
  "105": {
    "id": "105",
    "title": "F6 Test1",
    "content": "&lt;!DOCTYPE html&gt; Avatar Before element First focusable Something focusable Second focusable Something focusable Third focusable After Element",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/F6Test1/",
    "relUrl": "/playground/main/pages/F6Test1/"
  },
  "106": {
    "id": "106",
    "title": "F6 Test2",
    "content": "&lt;!DOCTYPE html&gt; Avatar Before element First focusable Something focusable Group without focusable element Something focusable Second focusable After Element",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/F6Test2/",
    "relUrl": "/playground/main/pages/F6Test2/"
  },
  "107": {
    "id": "107",
    "title": "F6 Test3",
    "content": "&lt;!DOCTYPE html&gt; Avatar Before element First focusable Second focusable Something focusable Third focusable After Element",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/F6Test3/",
    "relUrl": "/playground/main/pages/F6Test3/"
  },
  "108": {
    "id": "108",
    "title": "F6 Test4",
    "content": "&lt;!DOCTYPE html&gt; Avatar Before element First focusable Something focusable First focusable Something focusable Second focusable After Element",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/F6Test4/",
    "relUrl": "/playground/main/pages/F6Test4/"
  },
  "109": {
    "id": "109",
    "title": "F6 Test5",
    "content": "&lt;!DOCTYPE html&gt; Avatar Before element First focusable Something focusable Second focusable Something focusable Third focusable After Element",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/F6Test5/",
    "relUrl": "/playground/main/pages/F6Test5/"
  },
  "110": {
    "id": "110",
    "title": "F6 Test6",
    "content": "&lt;!DOCTYPE html&gt; Avatar Before element Group without focusable element Something focusable Group without focusable element Something focusable After Element",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/F6Test6/",
    "relUrl": "/playground/main/pages/F6Test6/"
  },
  "111": {
    "id": "111",
    "title": "F6 Test7",
    "content": "&lt;!DOCTYPE html&gt; Avatar Before element Before element Something focusable Something focusable After Element",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/F6Test7/",
    "relUrl": "/playground/main/pages/F6Test7/"
  },
  "112": {
    "id": "112",
    "title": "F6 Test Page",
    "content": "&lt;!DOCTYPE html&gt; F6 Navigation 1 2 3 4 Ensure that typing inside ui5-input works when F6 navigation is enabled Lorem ipsum! 1 2 3 4 5 Lorem ipsum dolor sit amet, tamquam invidunt cu sed, unum regione mel ea, quo ea alia novum. Ne qui illud zril nostrum, vel ea sint dicant postea. Vel ne facete tritani, neglegentur concludaturque sed te. His animal dolorum ut. Aeterno appareat ei mei, cu sed elit scripserit, an quodsi oportere accusamus quo. Pri ea probo corpora rationibus, soluta incorrupte ex his. Mei ei brute cetero, id duo magna aeque torquatos. Quodsi erroribus mediocritatem his ut, ad pri legere iracundia democritum. Menandri intellegam in mea, ex vero movet qualisque sed. Maiorum verterem perfecto nec ea, est velit elaboraret consequuntur eu, eam ad reque postea admodum. Ne inimicus convenire pri, doctus vidisse te ius. Percipitur contentiones in vis, cu vim propriae phaedrum. Has ad magna errem honestatis, duo vero graeco epicurei no, populo semper sit ne. Vulputate dissentiunt interpretaris ea vis, nec civibus moderatius at. Cu vim stet dissentias, no vidit saperet indoctum nec, et pro magna prima nobis. Vis consul feugiat qualisque in, regione persecuti cotidieque id eos, id ius omnesque vituperata. Pri ex impedit percipit consulatu. Ius iudico feugiat instructior an. Iusto putant eum eu, ubique splendide pri ad, cu qui salutandi assentior percipitur. At esse ceteros salutandi ius. Te dicam reprehendunt nec, ea discere ponderum sensibus duo. Vis cu commodo definiebas, postea dissentias ne vim. Modo homero eos ad. Ut vix equidem temporibus. At duo audire volumus, id volumus rationibus vim. Sit ne diam volumus. Augue labitur mel cu, an eam omnis causae hendrerit. City Supplier Country Dublin J.M. Brothers USA Sofia J.M. Brothers USA London J.M. Brothers USA Active item - press Active item - press Inactive item Inactive item Detail item &lt;ui5-li id=&quot;fcl-li&quot; description=HT-2001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;47.00 EUR&quot;&gt;10 inch Portable DVD&lt;/ui5-li&gt; &lt;ui5-li description=HT-2001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;249.00 EUR&quot;&gt;7 inch WidescreenPortable DVD Player w MP3&lt;/ui5-li&gt; &lt;ui5-li description=HT-1251 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;947.00 EUR&quot;&gt;Astro Laptop 1516&lt;/ui5-li&gt; &lt;ui5-li description=HT-1251 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;647.00 EUR&quot;&gt;Astro Phone 6&lt;/ui5-li&gt; &lt;ui5-li description=HT-1252 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;27.99 EUR&quot;&gt;Audio/Video Cable Kit - 4m&lt;/ui5-li&gt; &lt;ui5-li description=HT-6001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;447.90 EUR&quot;&gt;Beam Breaker B-1&lt;/ui5-li&gt; &lt;ui5-li description=HT-6001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;647.50 EUR&quot;&gt;Beam Breaker B-2&lt;/ui5-li&gt; &lt;ui5-li description=HT-6001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;847.80 EUR&quot;&gt;Beam Breaker B-3&lt;/ui5-li&gt; &lt;ui5-li description=HT-2001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;1,250.00 EUR&quot;&gt;Beam Breaker B-4&lt;/ui5-li&gt; &lt;ui5-li description=HT-8001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;1,288.00 EUR&quot;&gt;Camcorder View&lt;/ui5-li&gt; &lt;ui5-li description=HT-2001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;996.00 EUR&quot;&gt;Benda Laptop 1408&lt;/ui5-li&gt; &lt;ui5-li description=HT-0003 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;147.00 EUR&quot;&gt;Cepat Tablet 10.5&lt;/ui5-li&gt; &lt;ui5-li description=HT-1001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;87.90 EUR&quot;&gt;Gladiator MX&lt;/ui5-li&gt; Edit General Information Product: Description: Supplier: Titanium Rating: Suppliers Titanium Technocom Red Point Stores Very Best Screens Smartcards Alpha Printers Printer for All Oxynum Fasttech Ultrasonic United Speaker Experts Brainsoft Edit &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. 1 2 3 4 Reset Focus",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/F6TestPage/",
    "relUrl": "/playground/fiori/pages/F6TestPage/"
  },
  "113": {
    "id": "113",
    "title": "F6 Test Page_2",
    "content": "&lt;!DOCTYPE html&gt; F6 Navigation Click me before testing Content button Header button",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/F6TestPage_2/",
    "relUrl": "/playground/fiori/pages/F6TestPage_2/"
  },
  "114": {
    "id": "114",
    "title": "FAQ",
    "content": "Frequently Asked Questions Q: How can I play with UI5 Web Components easily? A: Use this CodeSandBox. Q: Where is the documentation? A: There are several resources: Web Components APIs How to get started? Q: Is there a CDN to load UI5 Web Components from? A: No. The best practice is to build your own bundle. See this article for details. Q: Are UI5 Web Components APIs stable? A: Mostly yes since the project is in Release Candidate state, but minor changes may still be expected until the official release. Q: Can I create my own UI5 Web Components? A: Yes, for more information see Creating a Custom UI5 Web Components Package Q: How big is the runtime? A: Currently on main, a simple working Web Component (ui5-label) and its dependencies equals to around 22K gzipped. Two simple web components (ui5-label and ui5-icon) and their dependencies equal to around 25K gzipped. Note: The quoted numbers include only a &lt;ui5-label&gt; (respectively ui5-label and ui5-icon) working on Chrome/FF/Safari with the default settings (theme/language). Additional features, settings and old browser support will increase bundle size accordingly. Q: What is the difference between UI5 Web Components and OpenUI5? A: See the project’s readme.md for more on this. Q: Can I use UI5 Web Components in an OpenUI5 application? A: This is not necessary as OpenUI5 already provides equivalents in the form of UI5 Controls. Q: How can I hide not yet upgraded Web Components so that users don’t see them until styled? A: You can place a CSS rule such as: *:not(:defined) { display: none; } or: *:not(:defined) { visibility: hidden; } in your application, depending on your preference. The selector *:not(:defined) will match all web components that haven’t been defined yet. Alternatively, you could only apply this rule for selected web components: ui5-button:not(:defined), ui5-label:not(:defined) { display: none; } Please note that the :defined CSS pseudo-selector is not supported by the Edge and Internet Explorer 11 browsers.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/faq",
    "relUrl": "/playground/faq"
  },
  "115": {
    "id": "115",
    "title": "F C L",
    "content": "&lt;!DOCTYPE html&gt; Flexible Column Layout List-Detail: List View Expanded Set to ThreeColumnsMidExpanded Column 1 Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! 1. Product Type The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Sed fermentum, mi et tristique ullamcorper, sapien sapien faucibus sem, quis pretium nibh lorem malesuada diam. Nulla quis arcu aliquet, feugiat massa semper, volutpat diam. Nam vitae ante posuere, molestie neque sit amet, dapibus velit. Maecenas eleifend tempor lorem. Mauris vitae elementum mi, sed eleifend ligula. Nulla tempor vulputate dolor, nec dignissim quam convallis ut. Praesent vitae commodo felis, ut iaculis felis. Fusce quis eleifend sapien, eget facilisis nibh. Suspendisse est velit, scelerisque ut commodo eget, dignissim quis metus. Cras faucibus consequat gravida. Curabitur vitae quam felis. Phasellus ac leo eleifend, commodo tortor et, varius quam. Aliquam erat volutpat. Open Wizard Dialog Step 2 2. Product Information Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien Name Weight Manifacturer Apple Samsung Huawei 5 years guarantee included Step 3 3. Options Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Manifacture date Availability In stock In depot Damaged Out of stock Size Small Medium Largr Step 4 4. Pricing Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Price Quantity Vat included Finalize Column 3 Hello worild! Hello worild! Hello worild! List-Detail: Detail expanded + hide-arrows Set to TwoColumnsMidExpanded Column 1 Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Column 2 Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Column 3 Hello worild! Hello worild! Hello worild! List-Detail-Detail: Detail Expanded Column 1 Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Column 2 Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Column 3 Hello worild! Hello worild! Hello worild! List-Detail-Detail: Detail-Detail expanded Column 1 Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Column 2 Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Column 3 Hello worild! Hello worild! Hello worild! List-Detail-Detail: Detail expanded, Detail-Detail hidden Products list Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Product information Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Product detailed information Hello worild! Hello worild! Hello worild! Default OneColumn Column 1 Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Column 2 Detail item Detail item Detail item Detail item Detail item Detail item Detail item Detail item Column 3 Detail - Detail Detail - Detail Detail - Detail Detail - Detail Detail - Detail Detail - Detail Detail - Detail &lt;ui5-li description=HT-2001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;47.00 EUR&quot;&gt;10 inch Portable DVD &lt;/ui5-li&gt; &lt;ui5-li description=HT-2001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;249.00 EUR&quot;&gt;7 inch Widescreen Portable DVD Player w MP3&lt;/ui5-li&gt; &lt;ui5-li description=HT-1251 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;947.00 EUR&quot;&gt;Astro Laptop 1516 &lt;/ui5-li&gt; &lt;ui5-li description=HT-1251 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;647.00 EUR&quot;&gt;Astro Phone 6&lt;/ui5-li&gt; &lt;ui5-li description=HT-1252 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;27.99 EUR&quot;&gt;Audio/Video Cable Kit - 4m &lt;/ui5-li&gt; &lt;ui5-li description=HT-6001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;447.90 EUR&quot;&gt;Beam Breaker B-1&lt;/ui5-li&gt; &lt;ui5-li description=HT-6001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;647.50 EUR&quot;&gt;Beam Breaker B-2&lt;/ui5-li&gt; &lt;ui5-li description=HT-6001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;847.80 EUR&quot;&gt;Beam Breaker B-3&lt;/ui5-li&gt; &lt;ui5-li description=HT-2001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;1,250.00 EUR&quot;&gt;Beam Breaker B-4 &lt;/ui5-li&gt; &lt;ui5-li description=HT-8001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;1,288.00 EUR&quot;&gt;Camcorder View&lt;/ui5-li&gt; &lt;ui5-li description=HT-2001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;996.00 EUR&quot;&gt;Benda Laptop 1408 &lt;/ui5-li&gt; &lt;ui5-li description=HT-0003 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;147.00 EUR&quot;&gt;Cepat Tablet 10.5 &lt;/ui5-li&gt; &lt;ui5-li description=HT-1001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;87.90 EUR&quot;&gt;Gladiator MX&lt;/ui5-li&gt; Edit General Information Product: Description: Supplier: Titanium Rating: Suppliers Titanium Technocom Red Point Stores Very Best Screens Smartcards Alpha Printers Printer for All Oxynum Fasttech Ultrasonic United Speaker Experts Brainsoft Edit &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/FCL/",
    "relUrl": "/playground/fiori/pages/FCL/"
  },
  "116": {
    "id": "116",
    "title": "F C L App",
    "content": "&lt;!DOCTYPE html&gt; Flexible Column Layout Companies list Company 1 Company 2 Company 3 Company 4 Company 5 Company 6 Company 7 Company 8 Company 9 Company 10 Product 1 Product 2 Product 3 Product 4 Product 5 Product 6 Product 7 Product 8 Product 9 Product 10 This is the best product Width: 100cm Height: 200cm Length: 500cm Read the manual See more No matching items found. Check the filter settings. Loading companies. Please wait...",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/FCLApp/",
    "relUrl": "/playground/fiori/pages/FCLApp/"
  },
  "117": {
    "id": "117",
    "title": "F C L Custom",
    "content": "&lt;!DOCTYPE html&gt; Flexible Column Layout Column 1 Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Column 2 Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Hello worild! Column 3 Hello worild! Hello worild! Hello worild!",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/FCLCustom/",
    "relUrl": "/playground/fiori/pages/FCLCustom/"
  },
  "118": {
    "id": "118",
    "title": "File Uploader",
    "content": "&lt;!DOCTYPE html&gt; FileUploader test page Single file upload: Upload FileUploader with ValueState Upload Upload Information message. This is a Link. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3. Information message 2. This is a Link. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3. Multiple files upload: Upload Accept only .txt and .docx files: Upload Value state Error: Upload Disabled uploader: Button only: Upload With Avatar: With Icons: With badge: Upload File Form support Disabled uploader: Normal uploader: Native input type=&quot;file&quot;: Submit Upload files async using fetch Upload",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/FileUploader/",
    "relUrl": "/playground/main/pages/FileUploader/"
  },
  "119": {
    "id": "119",
    "title": "File Uploader",
    "content": "File Uploader v1.0.0-rc.6 @ui5/webcomponents &lt;ui5-file-uploader&gt; Upload multiple images Upload Images &lt;ui5-file-uploader id=&quot;fileuploader1&quot; accept=&quot;image/*&quot; multiple=&quot;true&quot;&gt; &lt;ui5-button icon=&quot;upload&quot;&gt;Upload Images&lt;/ui5-button&gt; &lt;/ui5-file-uploader&gt; &lt;script&gt; const fileUploader = document.querySelector(&quot;#fileuploader1&quot;), resultDiv = document.querySelector(&quot;#result&quot;); fileUploader.addEventListener(&quot;change&quot;, event =&gt; { const files = event.target.files; if (!files.length) { resultDiv.innerHTML = &quot;&lt;ui5-label&gt;No Files Selected&lt;/ui5-label&gt;&quot;; } else { resultDiv.innerHTML = &quot;&quot;; for (let i = 0; i &lt; files.length; i++) { const img = document.createElement(&quot;img&quot;); img.src = URL.createObjectURL(files[i]); img.width = 100; img.height = 100; img.onload = () =&gt; { URL.revokeObjectURL(img.src); } resultDiv.appendChild(img); } } }) &lt;/script&gt; Upload Single File Upload Single File &lt;ui5-file-uploader&gt; &lt;ui5-button&gt;Upload Single File&lt;/ui5-button&gt; &lt;/ui5-file-uploader&gt; File Uploader With No Input Upload File &lt;ui5-file-uploader hide-input&gt; &lt;ui5-button&gt;Upload File&lt;/ui5-button&gt; &lt;/ui5-file-uploader&gt; Custom File Uploaders Upload File &lt;ui5-file-uploader hide-input&gt; &lt;ui5-avatar icon=&quot;upload&quot;&gt;&lt;/ui5-avatar&gt; &lt;/ui5-file-uploader&gt; &lt;ui5-file-uploader hide-input&gt; &lt;ui5-badge&gt;Upload File&lt;/ui5-badge&gt; &lt;/ui5-file-uploader&gt; Button With Icon File Uploader Upload Upload &lt;ui5-file-uploader&gt; &lt;ui5-button icon=&quot;upload&quot;&gt;Upload&lt;/ui5-button&gt; &lt;/ui5-file-uploader&gt; &lt;ui5-file-uploader&gt; &lt;ui5-button icon=&quot;upload&quot; icon-end&gt;Upload&lt;/ui5-button&gt; &lt;/ui5-file-uploader&gt; &lt;ui5-file-uploader&gt; &lt;ui5-button icon=&quot;upload&quot; icon-only&gt;&lt;/ui5-button&gt; &lt;/ui5-file-uploader&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-file-uploader opens a file explorer dialog and enables users to upload files. The component consists of input field, but you can provide an HTML element by your choice to trigger the file upload, by using the default slot. Furthermore, you can set the property “hideInput” to “true” to hide the input field. To get all selected files, you can simply use the read-only “files” property. To restrict the types of files the user can select, you can use the “accept” property. And, similar to all input based components, the FileUploader supports “valueState”, “placeholder”, “name”, and “disabled” properties. For the ui5-file-uploader &lt;h3&gt;ES6 Module Import&lt;/h3&gt; import &quot;@ui5/webcomponents/dist/FileUploader.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accept &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Comma-separated list of file types that the component should accept. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Please make sure you are adding the &lt;code&gt;.&lt;/code&gt; in front on the file type, e.g. &lt;code&gt;.png&lt;/code&gt; in case you want to accept png&#39;s only. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is in disabled state. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A disabled component is completely noninteractive. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; files (readonly) &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;FileList&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; FileList of all selected files. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideInput &lt;br&gt; &lt;code&gt;hide-input&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; If set to &quot;true&quot;, the input field of component will not be rendered. Only the default slot that is passed will be rendered. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; multiple &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Allows multiple files to be chosen. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; name &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the name with which the component will be submitted in an HTML form. &lt;br&gt;&lt;br&gt; &lt;b&gt;Important:&lt;/b&gt; For the &lt;code&gt;name&lt;/code&gt; property to have effect, you must add the following import to your project: &lt;code&gt;import &quot;@ui5/webcomponents/dist/features/InputElementsFormSupport.js&quot;;&lt;/code&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When set, a native &lt;code&gt;input&lt;/code&gt; HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; placeholder &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a short hint intended to aid the user with data entry when the component has no value. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the name/names of the file/files to upload. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; valueState &lt;br&gt; &lt;code&gt;value-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value state of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Success&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Information&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;By default the component contains a single input field. With this slot you can pass any content that you wish to add. See the samples for more information.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;valueStateMessage&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the value state message that will be displayed as pop up under the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If not specified, a default text (in the respective language) will be displayed. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;valueStateMessage&lt;/code&gt; would be displayed, when the component is in &lt;code&gt;Information&lt;/code&gt;, &lt;code&gt;Warning&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt; value state.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Event is fired when the value of the file path has been changed. &lt;b&gt;Note:&lt;/b&gt; Keep in mind that because of the HTML input element of type file, the event is also fired in Chrome browser when the Cancel button of the uploads window is pressed. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;files&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; FileList &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The current files.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/FileUploader/",
    "relUrl": "/playground/components/FileUploader/"
  },
  "120": {
    "id": "120",
    "title": "Flexible Column Layout",
    "content": "FlexibleColumnLayout v1.0.0-rc.8 @ui5/webcomponents-fiori &lt;ui5-flexible-column-layout&gt; FlexibleColumnLayout - One Initial Column &lt;ui5-li description=HT-2001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;47.00 EUR&quot;&gt;10 inch Portable DVD&lt;/ui5-li&gt; &lt;ui5-li description=HT-2001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;249.00 EUR&quot;&gt;7 inch WidescreenPortable DVD Player w MP3&lt;/ui5-li&gt; &lt;ui5-li description=HT-1251 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;947.00 EUR&quot;&gt;Astro Laptop 1516&lt;/ui5-li&gt; &lt;ui5-li description=HT-1251 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;647.00 EUR&quot;&gt;Astro Phone 6&lt;/ui5-li&gt; &lt;ui5-li description=HT-1252 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;27.99 EUR&quot;&gt;Audio/Video Cable Kit - 4m&lt;/ui5-li&gt; &lt;ui5-li description=HT-6001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;447.90 EUR&quot;&gt;Beam Breaker B-1&lt;/ui5-li&gt; &lt;ui5-li description=HT-6001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;647.50 EUR&quot;&gt;Beam Breaker B-2&lt;/ui5-li&gt; &lt;ui5-li description=HT-6001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;847.80 EUR&quot;&gt;Beam Breaker B-3&lt;/ui5-li&gt; &lt;ui5-li description=HT-2001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;1,250.00 EUR&quot;&gt;Beam Breaker B-4&lt;/ui5-li&gt; &lt;ui5-li description=HT-8001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;1,288.00 EUR&quot;&gt;Camcorder View&lt;/ui5-li&gt; &lt;ui5-li description=HT-2001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;996.00 EUR&quot;&gt;Benda Laptop 1408&lt;/ui5-li&gt; &lt;ui5-li description=HT-0003 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;147.00 EUR&quot;&gt;Cepat Tablet 10.5&lt;/ui5-li&gt; &lt;ui5-li description=HT-1001 icon=&#39;slim-arrow-right&#39; icon-end additional-text=&quot;87.90 EUR&quot;&gt;Gladiator MX&lt;/ui5-li&gt; Edit General Information Product: Description: Supplier: Titanium Rating: Suppliers Titanium Technocom Red Point Stores Very Best Screens Smartcards Alpha Printers Printer for All Oxynum Fasttech Ultrasonic United Speaker Experts Brainsoft Edit &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. &lt;ui5-flexible-column-layout id=&quot;fcl&quot;&gt; &lt;!-- start column --&gt; &lt;div slot=&quot;startColumn&quot;&gt; &lt;ui5-shellbar primary-title=&quot;Dep. New York, USA&quot;&gt; &lt;/ui5-shellbar&gt; &lt;ui5-list id=&quot;col1list&quot; header-text=&quot;Employees&quot;&gt; &lt;/ui5-list&gt; &lt;/div&gt; &lt;!-- middle column --&gt; &lt;div slot=&quot;midColumn&quot;&gt; &lt;div class=&quot;colHeader&quot;&gt; &lt;ui5-button design=&quot;Emphasized&quot;&gt;Edit&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Transparent&quot; icon=&quot;add&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-button id=&quot;fullscreenMidColumn&quot; design=&quot;Transparent&quot; icon=&quot;full-screen&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-button id=&quot;closeMidColumn&quot; icon=&quot;decline&quot; design=&quot;Transparent&quot;&gt;&lt;/ui5-button&gt; &lt;/div&gt; &lt;ui5-list id=&quot;col2list&quot; header-text=&quot;Employees&quot;&gt; &lt;/ui5-list&gt; &lt;/div&gt; &lt;!-- end column --&gt; &lt;div slot=&quot;endColumn&quot;&gt; &lt;div class=&quot;colHeader&quot;&gt; &lt;ui5-button design=&quot;Emphasized&quot;&gt;Edit&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Transparent&quot; icon=&quot;add&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-button id=&quot;fullscreenEndColumn&quot; design=&quot;Transparent&quot; icon=&quot;full-screen&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-button id=&quot;closeEndColumn&quot; icon=&quot;decline&quot; design=&quot;Transparent&quot;&gt;&lt;/ui5-button&gt; &lt;/div&gt; &lt;p&gt; &quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod...&quot; &lt;/p&gt; &lt;/div&gt; &lt;/ui5-flexible-column-layout&gt; &lt;script&gt; col1list.addEventListener(&quot;item-click&quot;, function(e) { fcl.layout = &quot;TwoColumnsMidExpanded&quot;; }); col2list.addEventListener(&quot;item-click&quot;, function(e) { fcl.layout = &quot;ThreeColumnsEndExpanded&quot;; }); closeMidColumn.addEventListener(&quot;click&quot;, function(e) { fcl.layout = &quot;OneColumn&quot;; }); fullscreenMidColumn.addEventListener(&quot;click&quot;, function(e) { fcl.layout = &quot;MidColumnFullscreen&quot;; }); fullscreenEndColumn.addEventListener(&quot;click&quot;, function(e) { fcl.layout = &quot;EndColumnFullscreen&quot;; }); closeEndColumn.addEventListener(&quot;click&quot;, function(e) { fcl.layout = &quot;TwoColumnsMidExpanded&quot;; }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The FlexibleColumnLayout implements the list-detail-detail paradigm by displaying up to three pages in separate columns. There are several possible layouts that can be changed either with the component API, or by pressing the arrows, displayed between the columns. Usage Use this component for applications that need to display several logical levels of related information side by side (e.g. list of items, item, sub-item, etc.). The Component is flexible in a sense that the application can focus the user’s attention on one particular column. Responsive Behavior The FlexibleColumnLayout automatically displays the maximum possible number of columns based on layout property and the window size. The component would display 1 column for window size smaller than 599px, up to two columns between 599px and 1023px, and 3 columns for sizes bigger than 1023px. &lt;h3&gt;Keyboard Handling&lt;/h3&gt; Basic Navigation [SPACE, ENTER, RETURN] - If focus is on the layout toggle button (arrow button), once activated, it triggers the associated action (such as expand/collapse the column). This component provides a build in fast navigation group which can be used via F6 / Shift + F6 or Ctrl + Alt(Option) + Down / Ctrl + Alt(Option) + Up. In order to use this functionality, you need to import the following module: import &quot;@ui5/webcomponents-base/dist/features/F6Navigation.js&quot; Fast Navigation This component provides a build in fast navigation group which can be used via F6 / Shift + F6 or Ctrl + Alt(Option) + Down / Ctrl + Alt(Option) + Up. In order to use this functionality, you need to import the following module: import &quot;@ui5/webcomponents-base/dist/features/F6Navigation.js&quot; ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/FlexibleColumnLayout.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibilityRoles &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;object&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; An object of strings that defines additional accessibility roles for further customization. It supports the following fields: - &lt;code&gt;startColumnRole&lt;/code&gt;: the accessibility role for the &lt;code&gt;startColumn&lt;/code&gt; - &lt;code&gt;startArrowContainerRole&lt;/code&gt;: the accessibility role for the first arrow container (between the &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;mid&lt;/code&gt; columns) - &lt;code&gt;midColumnRole&lt;/code&gt;: the accessibility role for the &lt;code&gt;midColumn&lt;/code&gt; - &lt;code&gt;endArrowContainerRole&lt;/code&gt;: the accessibility role for the second arrow container (between the &lt;code&gt;mid&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; columns) - &lt;code&gt;endColumnRole&lt;/code&gt;: the accessibility role for the &lt;code&gt;endColumn&lt;/code&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibilityTexts &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;object&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; An object of strings that defines several additional accessibility texts for even further customization. It supports the following fields: - &lt;code&gt;startColumnAccessibleName&lt;/code&gt;: the accessibility name for the &lt;code&gt;startColumn&lt;/code&gt; region - &lt;code&gt;midColumnAccessibleName&lt;/code&gt;: the accessibility name for the &lt;code&gt;midColumn&lt;/code&gt; region - &lt;code&gt;endColumnAccessibleName&lt;/code&gt;: the accessibility name for the &lt;code&gt;endColumn&lt;/code&gt; region - &lt;code&gt;startArrowLeftText&lt;/code&gt;: the text that the first arrow (between the &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;mid&lt;/code&gt; columns) will have when pointing to the left - &lt;code&gt;startArrowRightText&lt;/code&gt;: the text that the first arrow (between the &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;mid&lt;/code&gt; columns) will have when pointing to the right - &lt;code&gt;endArrowLeftText&lt;/code&gt;: the text that the second arrow (between the &lt;code&gt;mid&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; columns) will have when pointing to the left - &lt;code&gt;endArrowRightText&lt;/code&gt;: the text that the second arrow (between the &lt;code&gt;mid&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; columns) will have when pointing to the right - &lt;code&gt;startArrowContainerAccessibleName&lt;/code&gt;: the text that the first arrow container (between the &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;mid&lt;/code&gt; columns) will have as &lt;code&gt;aria-label&lt;/code&gt; - &lt;code&gt;endArrowContainerAccessibleName&lt;/code&gt;: the text that the second arrow container (between the &lt;code&gt;mid&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; columns) will have as &lt;code&gt;aria-label&lt;/code&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.11&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; columnLayout (readonly) &lt;br&gt; &lt;code&gt;column-layout&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;array&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;[&amp;quot;100%&amp;quot;, 0, 0]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Returns the current column layout, based on both the &lt;code&gt;layout&lt;/code&gt; property and the screen size. &lt;br&gt;&lt;br&gt; &lt;b&gt;For example:&lt;/b&gt; [&quot;67%&quot;, &quot;33%&quot;, 0], [&quot;100%&quot;, 0, 0], [&quot;25%&quot;, &quot;50%&quot;, &quot;25%&quot;], etc, where the numbers represents the width of the start, middle and end columns. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; endColumnVisible (readonly) &lt;br&gt; &lt;code&gt;end-column-visible&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Returns if the &lt;code&gt;end&lt;/code&gt; column is visible. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideArrows &lt;br&gt; &lt;code&gt;hide-arrows&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the visibility of the arrows, used for expanding and shrinking the columns. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; layout &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;FCLLayout&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;OneColumn&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the columns layout and their proportion. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The layout also depends on the screen size - one column for screens smaller than 599px, two columns between 599px and 1023px and three columns for sizes bigger than 1023px. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;OneColumn&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TwoColumnsStartExpanded&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TwoColumnsMidExpanded&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ThreeColumnsMidExpanded&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ThreeColumnsEndExpanded&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ThreeColumnsStartExpandedEndHidden&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ThreeColumnsMidExpandedEndHidden&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;MidColumnFullScreen&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;EndColumnFullScreen&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;For example:&lt;/b&gt; layout=&lt;code&gt;TwoColumnsStartExpanded&lt;/code&gt; means the layout will display up to two columns in 67%/33% proportion. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; midColumnVisible (readonly) &lt;br&gt; &lt;code&gt;mid-column-visible&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Returns if the &lt;code&gt;middle&lt;/code&gt; column is visible. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; startColumnVisible (readonly) &lt;br&gt; &lt;code&gt;start-column-visible&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;true&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Returns if the &lt;code&gt;start&lt;/code&gt; column is visible. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; visibleColumns (readonly) &lt;br&gt; &lt;code&gt;visible-columns&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;1&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Returns the number of currently visible columns. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;endColumn&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content in the end column.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;midColumn&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content in the middle column.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;startColumn&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content in the start column.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;layout-change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the layout changes via user interaction by clicking the arrows or by changing the component size due to resizing. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;layout&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; sap.ui.webc.fiori.types.FCLLayout &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The current layout&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;columnLayout&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; array &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The effective column layout, f.e [67%, 33%, 0]&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;startColumnVisible&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Indicates if the start column is currently visible&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;midColumnVisible&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Indicates if the middle column is currently visible&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;endColumnVisible&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Indicates if the end column is currently visible&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;arrowsUsed&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Indicates if the layout is changed via the arrows&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;resize&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Indicates if the layout is changed via resizing&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/FlexibleColumnLayout/",
    "relUrl": "/playground/components/FlexibleColumnLayout/"
  },
  "121": {
    "id": "121",
    "title": "Form Support",
    "content": "&lt;!DOCTYPE html&gt; Form support Does not submit forms Submits forms Submits forms",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/FormSupport/",
    "relUrl": "/playground/main/pages/FormSupport/"
  },
  "122": {
    "id": "122",
    "title": "H C B",
    "content": "&lt;!DOCTYPE html&gt; Default",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/HCB/",
    "relUrl": "/playground/main/pages/HCB/"
  },
  "123": {
    "id": "123",
    "title": "Icon",
    "content": "&lt;!DOCTYPE html&gt; Icon Fiori 3/Next Icon semantic &#39;design&#39; variants Icon with aria-hidden=&quot;true&quot; Icon with tooltip Interactive Icon Some icons can display default tooltip Auto, SAP-icons, horizon SAP Icons SAP Fiori Next Icons SAP Fiori Tools Icons SAP business-suite Icons All icons Icons in ltr Icons in RTL, but not mirrored Icons in LTR Icons in RTL and mirrored",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Icon/",
    "relUrl": "/playground/main/pages/Icon/"
  },
  "124": {
    "id": "124",
    "title": "Icon",
    "content": "Icon @ui5/webcomponents &lt;ui5-icon&gt; Basic Icons &lt;ui5-icon name=&quot;activate&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;activities&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;add-equipment&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;add-document&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;add-employee&quot;&gt;&lt;/ui5-icon&gt; SAP Fiori Tools Icons &lt;ui5-icon name=&quot;tnt/antenna&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;tnt/api&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;tnt/modem&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;tnt/data-store&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;tnt/flow&quot;&gt;&lt;/ui5-icon&gt; Customized Icons &lt;ui5-icon name=&quot;employee&quot; style=&quot;width:3rem;height:3rem;font-size:1.5rem;color:crimson;background-color:#fafafa&quot; &gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;menu&quot; style=&quot;width:3rem;height:3rem;font-size:1.5rem;color:crimson;background-color:#fafafa&quot;&gt;&lt;/ui5-icon&gt; Icons with semantic design variations &lt;ui5-icon name=&quot;female&quot; design=&quot;Contrast&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;female&quot; design=&quot;Critical&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;female&quot; design=&quot;Default&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;female&quot; design=&quot;Information&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;female&quot; design=&quot;Negative&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;female&quot; design=&quot;Neutral&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;female&quot; design=&quot;Positive&quot;&gt;&lt;/ui5-icon&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-icon component represents an SVG icon. There are two main scenarios how the ui5-icon component is used: as a purely decorative element, or as an interactive element that can be focused and clicked. Usage Get familiar with the icons collections. Before displaying an icon, you need to explore the icons collections to find and import the desired icon. Currently there are 3 icons collection, available as 3 npm packages: @ui5/webcomponents-icons represents the &quot;SAP-icons&quot; collection and includes the following icons. @ui5/webcomponents-icons-tnt represents the &quot;tnt&quot; collection and includes the following icons. @ui5/webcomponents-icons-icons-business-suite represents the &quot;business-suite&quot; collection and includes the following icons. After exploring the icons collections, add one or more of the packages as dependencies to your project. npm i @ui5/webcomponents-icons npm i @ui5/webcomponents-icons-tnt npm i @ui5/webcomponents-icons-business-suite Then, import the desired icon. import &quot;@ui5/{package_name}/dist/{icon_name}.js&quot;; For Example: For the standard “SAP-icons” icon collection, import an icon from the @ui5/webcomponents-icons package: import &quot;@ui5/webcomponents-icons/dist/employee.js&quot;; For the “tnt” (SAP Fiori Tools) icon collection, import an icon from the @ui5/webcomponents-icons-tnt package: import &quot;@ui5/webcomponents-icons-tnt/dist/antenna.js&quot;; For the “business-suite” (SAP Business Suite) icon collection, import an icon from the @ui5/webcomponents-icons-business-suite package: import &quot;@ui5/webcomponents-icons-business-suite/dist/ab-testing.js&quot;; Display the icon using the ui5-icon web component. Set the icon collection (“SAP-icons”, “tnt” or “business-suite” - “SAP-icons” is the default icon collection and can be skipped) and the icon name to the name property. &lt;ui5-icon name=&quot;employee&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;tnt/antenna&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-icon name=&quot;business-suite/ab-testing&quot;&gt;&lt;/ui5-icon&gt; Keyboard Handling [SPACE, ENTER, RETURN] - Fires the click event if the interactive property is set to true. [SHIFT] - If [SPACE] or [ENTER],[RETURN] is pressed, pressing [SHIFT] releases the ui5-icon without triggering the click event. ES6 Module Import import &quot;@ui5/webcomponents/dist/Icon.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text alternative of the component. If not provided a default text alternative will be set, if present. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Every icon should have a text alternative in order to calculate its accessible name. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleRole &lt;br&gt; &lt;code&gt;accessible-role&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessibility role of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; design &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;IconDesign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Default&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the component semantic design. &lt;br&gt;&lt;br&gt; &lt;b&gt;The available values are:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Contrast&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Critical&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Information&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Negative&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Neutral&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;NonInteractive&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Positive&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.9.2&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; interactive &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the icon is interactive (focusable and pressable) &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.8&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; name &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the unique identifier (icon name) of the component. &lt;br&gt; To browse all available icons, see the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;SAP Icons&lt;/ui5-link&gt;, &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html#/overview/SAP-icons-TNT&quot; class=&quot;api-table-content-cell-link&quot;&gt;SAP Fiori Tools&lt;/ui5-link&gt; and &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;SAP Business Suite&lt;/ui5-link&gt; collections. &lt;br&gt; Example: &lt;br&gt; &lt;code&gt;name=&#39;add&#39;&lt;/code&gt;, &lt;code&gt;name=&#39;delete&#39;&lt;/code&gt;, &lt;code&gt;name=&#39;employee&#39;&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; To use the SAP Fiori Tools icons, you need to set the &lt;code&gt;tnt&lt;/code&gt; prefix in front of the icon&#39;s name. &lt;br&gt; Example: &lt;br&gt; &lt;code&gt;name=&#39;tnt/antenna&#39;&lt;/code&gt;, &lt;code&gt;name=&#39;tnt/actor&#39;&lt;/code&gt;, &lt;code&gt;name=&#39;tnt/api&#39;&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; To use the SAP Business Suite icons, you need to set the &lt;code&gt;business-suite&lt;/code&gt; prefix in front of the icon&#39;s name. &lt;br&gt; Example: &lt;br&gt; &lt;code&gt;name=&#39;business-suite/3d&#39;&lt;/code&gt;, &lt;code&gt;name=&#39;business-suite/1x2-grid-layout&#39;&lt;/code&gt;, &lt;code&gt;name=&#39;business-suite/4x4-grid-layout&#39;&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showTooltip &lt;br&gt; &lt;code&gt;show-tooltip&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component should have a tooltip. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The tooltip text should be provided via the &lt;code&gt;accessible-name&lt;/code&gt; property. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Icon/",
    "relUrl": "/playground/components/Icon/"
  },
  "125": {
    "id": "125",
    "title": "Icon_custom",
    "content": "&lt;!DOCTYPE html&gt; Custom Icon Colelction Custom Icon collection in Button and List Item MacBook Air Laptop Lenovo IPhone 3",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Icon_custom/",
    "relUrl": "/playground/main/pages/Icon_custom/"
  },
  "126": {
    "id": "126",
    "title": "Illustrated Message",
    "content": "&lt;!DOCTYPE html&gt; IllustratedMessage Illustration: AddColumn AddPeople AddDimensions BalloonSky BeforeSearch Connection EmptyCalendar EmptyList EmptyPlanningCalendar ErrorScreen FilterTable GroupTable NoActivities NoData NoEntries NoFilterResults NoMail_v1 NoMail NoNotifications NoSavedItems_v1 NoSavedItems NoSearchResults NoTasks_v1 NoTasks NoDimensionsSet PageNotFound ReloadScreen ResizeColumn SearchEarth SearchFolder SimpleBalloon SimpleBell SimpleCalendar SimpleCheckMark SimpleConnection SimpleEmptyDoc SimpleEmptyList SimpleError SimpleMagnifier SimpleMail SimpleNoSavedItems SimpleNotFoundMagnifier SimpleReload SimpleTask SleepingBell SortColumn SuccessBalloon SuccessCheckMark SuccessHighFive SuccessScreen Tent UnableToLoad UnableToLoadImage UnableToUpload UploadToCloud UploadCollection TntChartArea TntChartArea2 TntChartBar TntChartBPMNFlow TntChartBullet TntChartDoughnut TntChartFlow TntChartGantt TntChartOrg TntChartPie TntCodePlaceholder TntCompany TntComponents TntExternalLink TntFaceID TntFingerprint TntLock TntMission TntNoApplications TntNoFlows TntNoUsers TntRadar TntSecrets TntServices TntSessionExpired TntSessionExpiring TntSuccess TntSuccessfulAuth TntSystems TntTeams TntTools TntUnableToLoad TntUnlock TntUnsuccessfulAuth TntUser2 Size: base spot dialog scene Action 1 Open Dialog Close Please try again or contact us at example@example.com Text from aria-labelledby Try again This is a slotted title Expandable panel title",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/IllustratedMessage/",
    "relUrl": "/playground/fiori/pages/IllustratedMessage/"
  },
  "127": {
    "id": "127",
    "title": "Illustrated Message",
    "content": "IllustratedMessage v1.0.0-rc.15 @ui5/webcomponents-fiori &lt;ui5-illustrated-message&gt; Illustrated message Action 1 Action 2 &lt;ui5-illustrated-message name=&quot;UnableToUpload&quot;&gt; &lt;ui5-button design=&quot;Emphasized&quot;&gt;Action 1&lt;/ui5-button&gt; &lt;ui5-button&gt;Action 2&lt;/ui5-button&gt; &lt;/ui5-illustrated-message&gt; Illustrated message in dialog Open Dialog Close &lt;ui5-button id=&quot;openDialogButton&quot;&gt;Open Dialog&lt;/ui5-button&gt; &lt;ui5-dialog id=&quot;hello-dialog&quot; header-text=&quot;Error&quot;&gt; &lt;ui5-illustrated-message name=&quot;UnableToLoad&quot;&gt;&lt;/ui5-illustrated-message&gt; &lt;ui5-bar design=&quot;Footer&quot; slot=&quot;footer&quot;&gt; &lt;ui5-button id=&quot;closeDialogButton&quot; design=&quot;Emphasized&quot; slot=&quot;endContent&quot;&gt;Close&lt;/ui5-button&gt; &lt;/ui5-bar&gt; &lt;/ui5-dialog&gt; Illustrated message with custom title and link in subtitle Something went wrong Please try again or contact us at example@example.com Try again &lt;ui5-illustrated-message name=&quot;UnableToUpload&quot;&gt; &lt;ui5-title slot=&quot;title&quot; level=&quot;H1&quot;&gt;Something went wrong&lt;/ui5-title&gt; &lt;div slot=&quot;subtitle&quot;&gt;Please try again or contact us at &lt;ui5-link&gt;example@example.com&lt;/ui5-link&gt;&lt;/div&gt; &lt;ui5-button icon=&quot;refresh&quot;&gt;Try again&lt;/ui5-button&gt; &lt;/ui5-illustrated-message&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; An IllustratedMessage is a recommended combination of a solution-oriented message, an engaging illustration, and conversational tone to better communicate an empty or a success state than just show a message alone. Each illustration has default internationalised title and subtitle texts. Also they can be managed with titleText and subtitleText properties. To display the desired illustration, use the name property, where you can find the list of all available illustrations. Note: By default the “BeforeSearch” illustration is loaded. To use other illustrations, make sure you import them in addition, for example: import &quot;@ui5/webcomponents-fiori/dist/illustrations/NoData.js&quot; Note: Illustrations starting with the “Tnt” prefix are part of another illustration set. For example to use the “TntSuccess” illustration, add the following import:: import &quot;@ui5/webcomponents-fiori/dist/illustrations/tnt/Success.js&quot; Structure The IllustratedMessage consists of the following elements, which are displayed below each other in the following order: &lt;ul&gt; &lt;li&gt;Illustration&lt;/li&gt; &lt;li&gt;Title&lt;/li&gt; &lt;li&gt;Subtitle&lt;/li&gt; &lt;li&gt;Actions&lt;/li&gt; &lt;/ul&gt; Usage ui5-illustrated-message is meant to be used inside container component, for example a ui5-card, a ui5-dialog or a ui5-page ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/IllustratedMessage.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.7.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; name &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;IllustrationMessageType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;BeforeSearch&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the illustration name that will be displayed in the component. &lt;br&gt;&lt;br&gt; Available illustrations are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;AddColumn&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;AddPeople&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;AddDimensions&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;BalloonSky&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;BeforeSearch&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Connection&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;EmptyCalendar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;EmptyList&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;EmptyPlanningCalendar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ErrorScreen&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;FilterTable&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;GroupTable&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;NoActivities&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;NoData&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;NoEntries&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;NoFilterResults&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;NoMail_v1&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;NoMail&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;NoNotifications&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;NoSavedItems_v1&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;NoSavedItems&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;NoSearchResults&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;NoTasks_v1&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;NoTasks&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;NoDimensionsSet&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;PageNotFound&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ReloadScreen&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ResizeColumn&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SearchEarth&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SearchFolder&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SimpleBalloon&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SimpleBell&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SimpleCalendar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SimpleCheckMark&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SimpleConnection&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SimpleEmptyDoc&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SimpleEmptyList&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SimpleError&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SimpleMagnifier&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SimpleMail&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SimpleNoSavedItems&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SimpleNotFoundMagnifier&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SimpleReload&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SimpleTask&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SleepingBell&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SortColumn&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SuccessBalloon&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SuccessCheckMark&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SuccessHighFive&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SuccessScreen&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tent&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;UnableToLoad&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;UnableToLoadImage&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;UnableToUpload&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;UploadToCloud&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;UploadCollection&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntChartArea&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntChartArea2&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntChartBar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntChartBPMNFlow&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntChartBullet&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntChartDoughnut&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntChartFlow&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntChartGantt&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntChartOrg&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntChartPie&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntCodePlaceholder&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntCompany&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntComponents&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntExternalLink&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntFaceID&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntFingerprint&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntLock&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntMission&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntNoApplications&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntNoFlows&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntNoUsers&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntRadar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntSecrets&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntServices&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntSessionExpired&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntSessionExpiring&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntSuccess&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntSuccessfulAuth&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntSystems&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntTeams&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntTools&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntUnableToLoad&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntUnlock&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntUnsuccessfulAuth&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TntUser2&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; By default the &lt;code&gt;BeforeSearch&lt;/code&gt; illustration is loaded. &lt;br&gt; When using an illustration type, other than the default, it should be loaded in addition: &lt;br&gt; &lt;code&gt;import &quot;@ui5/webcomponents-fiori/dist/illustrations/NoData.js&quot;;&lt;/code&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; TNT illustrations cointain &lt;code&gt;Tnt&lt;/code&gt; prefix in their name. You can import them removing the &lt;code&gt;Tnt&lt;/code&gt; prefix like this: &lt;br&gt; &lt;code&gt;import &quot;@ui5/webcomponents-fiori/dist/illustrations/tnt/SessionExpired.js&quot;;&lt;/code&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; size &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;IllustrationMessageSize&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Auto&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines which illustration breakpoint variant is used. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Auto&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Base&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Spot&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Scene&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; As &lt;code&gt;IllustratedMessage&lt;/code&gt; adapts itself around the &lt;code&gt;Illustration&lt;/code&gt;, the other elements of the component are displayed differently on the different breakpoints/illustration sizes. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.5.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; subtitleText &lt;br&gt; &lt;code&gt;subtitle-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the subtitle of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Using this property, the default subtitle text of illustration will be overwritten. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Using &lt;code&gt;subtitle&lt;/code&gt; slot, the default of this property will be overwritten. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; titleText &lt;br&gt; &lt;code&gt;title-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the title of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Using this property, the default title text of illustration will be overwritten. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the component actions.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;subtitle&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the subtitle of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Using this slot, the default subtitle text of illustration and the value of &lt;code&gt;subtitleText&lt;/code&gt; property will be overwritten.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;title&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the title of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Using this slot, the default title text of illustration and the value of &lt;code&gt;title&lt;/code&gt; property will be overwritten.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/IllustratedMessage/",
    "relUrl": "/playground/components/IllustratedMessage/"
  },
  "128": {
    "id": "128",
    "title": "Input",
    "content": "&lt;!DOCTYPE html&gt; ui5-input Input with suggestions: type &#39;a&#39; Event [suggestionItemSelect] :: N/A Event [change] :: N/A Event [input] :: N/A Input in Cozy Change event count: Input in Compact Input suggestions with ui5-li Cozy Compact Condensed Inactive Compact Inactive Condensed Input suggestions with grouping Input suggestions with highlighing Input disabled Input maxLength = 5 Input valueState Success Input valueState Information Test &#39;change&#39; event Input with valueState and Dynamic suggestions Custom error value state message with a Link. Additionl custom error value state message with a Link. Extra long text used as an error message. Extra long text used as an error message - 2. Extra long text used as an error message - 3. Input with long suggestions with valueState and ui5-li Cozy Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2. text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2. Condensed Cozy Compact Condensed Input with disabled autocomplete (type-ahead) Cozy Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2. text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2.Extra long text used as a list item. Extra long text used as a list item -2. Condensed CozyTwo Compact Condensed &#39;change&#39; event result &#39;selection-item-select&#39; event result &#39;suggestionItemSelect&#39; event result on group item Test &#39;input&#39; event Information message. This is a Link. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3. &#39;input&#39; test result Input test change with suggestions Input test change Input test change result Input test ESC Input readonly Input required Input type &#39;Number&#39; Input type &#39;Password&#39; Input type &#39;Email&#39; Input type &#39;Tel&#39; Input type &#39;URL&#39; Input With aria-label Readonly input with value state Inputs alignment Press Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Input with multiple icons Input firing submit event and submit action on &#39;ENTER&#39; in a form Test scroll pos Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Cozy Compact Condensed Test accessibleName and accessibleNameRef Enter name: Input suggestions with highlighing and XSS test Test width of suggestions popover Argentinaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa Input in a Dialog Open Dialog Cozy Compact Condensed Inactive Compact Inactive Condensed Short Input With Centered Text Test Backspace Click sap_horizon add xss item NO XSS Inputs with clear icon Change: 0 Input: 0 Toggle readonly Toggle disabled Input with suggestions and clear icon Input with openPicker() on focusin Recent Items No recent users Input - change event handling Clear Change event count: Change event count: Change event value:",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Input/",
    "relUrl": "/playground/main/pages/Input/"
  },
  "129": {
    "id": "129",
    "title": "Input",
    "content": "Input @ui5/webcomponents &lt;ui5-input&gt; Basic Input &lt;ui5-input show-clear-icon value=&quot;Input&quot;&gt;&lt;/ui5-input&gt; &lt;ui5-input readonly value=&quot;readonly Input&quot;&gt;&lt;/ui5-input&gt; &lt;ui5-input disabled value=&quot;Disabled Input&quot;&gt;&lt;/ui5-input&gt; Input With Suggestions (note: the usage depends on the framework you are using) &lt;ui5-input id=&quot;suggestions-input&quot; show-suggestions show-clear-icon placeholder=&quot;Start typing country name&quot;&gt;&lt;/ui5-input&gt; &lt;script&gt; // data var ui5_database_entries = [&quot;Argentina&quot;, &quot;Bulgaria&quot;, &quot;Canada&quot;, &quot;Columbia&quot;, &quot;Croatia&quot;, &quot;Denmark&quot;, &#39;...&#39;]; var input = document.getElementById(&quot;suggestions-input&quot;); // listen for the input event input.addEventListener(&quot;input&quot;, event =&gt; { var value = input.value; var suggestionItems = []; if (value) { suggestionItems = ui5_database_entries.filter(item =&gt; { return item.toUpperCase().indexOf(value.toUpperCase()) === 0; }); } // remove the previous suggestions [].slice.call(input.children).forEach(child =&gt; { input.removeChild(child); }); // add the new suggestions according to the user input suggestionItems.forEach(item =&gt; { var li = document.createElement(&quot;ui5-suggestion-item&quot;); li.icon = &quot;world&quot;; li.additionalText = &quot;explore&quot;; li.additionalTextState = &quot;Success&quot;; li.description = &quot;travel the world&quot;; li.text = item; input.appendChild(li); }); }); &lt;/script&gt; Input with Value State &lt;ui5-input value=&quot;Success&quot; value-state=&quot;Success&quot;&gt;&lt;/ui5-input&gt; &lt;ui5-input value=&quot;Warning&quot; value-state=&quot;Warning&quot;&gt;&lt;/ui5-input&gt; &lt;ui5-input value=&quot;Error&quot; value-state=&quot;Error&quot;&gt;&lt;/ui5-input&gt; &lt;ui5-input value=&quot;Information&quot; value-state=&quot;Information&quot;&gt;&lt;/ui5-input&gt; Input with Suggestions and Value State message This is an error message. Extra long text used as an error message. Cozy Compact Condensed &lt;ui5-input id=&quot;value-state-suggestions&quot; placeholder=&quot;Start typing country name&quot; show-suggestions value-state=&quot;Warning&quot;&gt; &lt;/ui5-input&gt; &lt;ui5-input placeholder=&quot;Choose content density&quot; show-suggestions value-state=&quot;Error&quot;&gt; &lt;div slot=&quot;valueStateMessage&quot;&gt;This is an error message. Extra long text used as an error message.&lt;/div&gt; &lt;ui5-li&gt;Cozy&lt;/ui5-li&gt; &lt;ui5-li&gt;Compact&lt;/ui5-li&gt; &lt;ui5-li&gt;Condensed&lt;/ui5-li&gt; &lt;/ui5-input&gt; Input as Search Field &lt;style&gt; .inputIcon { background: #fafafa; color: #0a6ed1; cursor: pointer; } .inputIcon:hover{ background: rgba(224,224,224,0.5) } &lt;/style&gt; &lt;ui5-input id=&quot;searchInput&quot; placeholder=&quot;Enter search criteria ...&quot; style=&quot;width: 100%&quot;&gt; &lt;ui5-icon id=&quot;searchIcon&quot; slot=&quot;icon&quot; name=&quot;search&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-input&gt; &lt;script&gt; var searchCriteria = &quot;PASTA&quot;; searchIcon.addEventListener(&quot;click&quot;, function(){ alert(&quot;Look for: &quot; + searchCriteria); }); searchInput.addEventListener(&quot;change&quot;, function(e){ searchCriteria = e.target.value; }); &lt;/script&gt; Input with Label Name Secret Code &lt;ui5-label class=&quot;samples-big-margin-right&quot; for=&quot;myInput&quot; required show-colon&gt;Name&lt;/ui5-label&gt; &lt;ui5-input id=&quot;myInput&quot; placeholder=&quot;Enter your Name&quot; required&gt;&lt;/ui5-input&gt; &lt;ui5-label class=&quot;samples-big-margin-right&quot; for=&quot;myPassword&quot; required show-colon&gt;Secret Code&lt;/ui5-label&gt; &lt;ui5-input id=&quot;myPassword&quot; type=&quot;Password&quot; value-state=&quot;Error&quot; placeholder=&quot;Enter your Secret Code&quot; required&gt;&lt;/ui5-input&gt; Input With Value Help Dialog Products Clear Cancel &lt;ui5-input id=&quot;valueHelpInput&quot; placeholder=&quot;Enter product&quot; show-suggestions&gt; &lt;ui5-icon id=&quot;valueHelpIcon&quot; slot=&quot;icon&quot; name=&quot;value-help&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-input&gt; &lt;ui5-dialog id=&quot;dialog&quot; accessible-name=&quot;Products Value Help&quot;&gt; &lt;div slot=&quot;header&quot; id=&quot;dialogHeader&quot;&gt; &lt;div id=&quot;titleBar&quot;&gt; &lt;h2 id=&quot;headerTitle&quot;&gt;Products&lt;/h2&gt; &lt;ui5-button design=&quot;Transparent&quot; id=&quot;clearButton&quot;&gt;Clear&lt;/ui5-button&gt; &lt;/div&gt; &lt;ui5-input id=&quot;dialogSearchInput&quot; placeholder=&quot;Search&quot;&gt; &lt;ui5-icon id=&quot;dialogSearchIcon&quot; slot=&quot;icon&quot; name=&quot;search&quot;&gt;&lt;/ui5-icon&gt; &lt;/ui5-input&gt; &lt;/div&gt; &lt;ui5-list id=&quot;itemsList&quot; no-data-text=&quot;No data&quot;&gt;&lt;/ui5-list&gt; &lt;div slot=&quot;footer&quot; id=&quot;footer&quot;&gt; &lt;ui5-button design=&quot;Transparent&quot; id=&quot;cancelButton&quot;&gt;Cancel&lt;/ui5-button&gt; &lt;/div&gt; &lt;/ui5-dialog&gt; &lt;script&gt; valueHelpInput.addEventListener(&quot;input&quot;, loadSuggestions); valueHelpIcon.addEventListener(&quot;click&quot;, showDialog); dialogSearchInput.addEventListener(&quot;change&quot;, loadList); dialogSearchIcon.addEventListener(&quot;click&quot;, loadList); clearButton.addEventListener(&quot;click&quot;, clearQuery); cancelButton.addEventListener(&quot;click&quot;, closeDialog); itemsList.addEventListener(&quot;item-click&quot;, handleItemClick); async function loadSuggestions() { var response = await fetch(&quot;../../../assets/data/products.json&quot;); var products = await response.json(); var query = valueHelpInput.value.toLowerCase(); var suggestionItems = []; if (query) { suggestionItems = products .filter(({ name }) =&gt; name.toLowerCase().indexOf(query) === 0) .map(({ name }) =&gt; name) .sort((a, b) =&gt; a.localeCompare(b)) .slice(0, 10); } [].slice.call(valueHelpInput.children, 1).forEach(item =&gt; { valueHelpInput.removeChild(item); }); suggestionItems.forEach(item =&gt; { var li = document.createElement(&quot;ui5-suggestion-item&quot;); li.text = item; valueHelpInput.appendChild(li); }); } function showDialog() { dialogSearchInput.value = valueHelpInput.value; loadList(); dialog.show(); } function closeDialog() { dialog.close(); } async function loadList() { var response = await fetch(&quot;../../../assets/data/products.json&quot;); var products = await response.json(); var query = dialogSearchInput.value.toLowerCase(); itemsList.innerHTML = &quot;&quot;; products .filter(({ name }) =&gt; name.toLowerCase().indexOf(query) === 0) .sort((a, b) =&gt; a.name.localeCompare(b.name)) .forEach(item =&gt; { var li = document.createElement(&quot;ui5-li&quot;); li.innerHTML = item.name; li.image = item.productPicUrl; li.description = item.productId; itemsList.appendChild(li); }); } function handleItemClick(event) { var item = event.detail.item; valueHelpInput.setAttribute(&quot;value&quot;, item.innerHTML); dialog.close(); } function clearQuery() { dialogSearchInput.setAttribute(&quot;value&quot;, &quot;&quot;); loadList(); } &lt;/script&gt; Overview The ui5-input component allows the user to enter and edit text or numeric values in one line. Additionally, you can provide suggestionItems, that are displayed in a popover right under the input. The text field can be editable or read-only (readonly property), and it can be enabled or disabled (disabled property). To visualize semantic states, such as &quot;error&quot; or &quot;warning&quot;, the valueState property is provided. When the user makes changes to the text, the change event is fired, which enables you to react on any text change. Note: If you are using the ui5-input as a single npm module, don&#39;t forget to import the InputSuggestions module from &quot;@ui5/webcomponents/dist/features/InputSuggestions.js&quot; to enable the suggestions functionality. Keyboard Handling The ui5-input provides the following keyboard shortcuts: [ESC] - Closes the suggestion list, if open. If closed or not enabled, cancels changes and reverts to the value which the Input field had when it got the focus. [ENTER] or [RETURN] - If suggestion list is open takes over the current matching item and closes it. If value state or group header is focused, does nothing. [DOWN] - Focuses the next matching item in the suggestion list. [UP] - Focuses the previous matching item in the suggestion list. [HOME] - If focus is in the text input, moves caret before the first character. If focus is in the list, highlights the first item and updates the input accordingly. [END] - If focus is in the text input, moves caret after the last character. If focus is in the list, highlights the last item and updates the input accordingly. [PAGEUP] - If focus is in the list, moves highlight up by page size (10 items by default). If focus is in the input, does nothing. [PAGEDOWN] - If focus is in the list, moves highlight down by page size (10 items by default). If focus is in the input, does nothing. ES6 Module Import import &quot;@ui5/webcomponents/dist/Input.js&quot;; import &quot;@ui5/webcomponents/dist/features/InputSuggestions.js&quot;; (optional - for input suggestions support) Properties/Attributes You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different. Name Type Default Value Description accessibleName accessible-name string Defines the accessible ARIA name of the component. since v1.0.0-rc.15 accessibleNameRef accessible-name-ref string &quot;&quot; Receives id(or many ids) of the elements that label the input. since v1.0.0-rc.15 disabled boolean false Defines whether the component is in disabled state. Note: A disabled component is completely noninteractive. maxlength Integer Sets the maximum number of characters available in the input field. Note: This property is not compatible with the ui5-input type InputType.Number. If the ui5-input type is set to Number, the maxlength value is ignored. since v1.0.0-rc.5 name string &quot;&quot; Determines the name with which the component will be submitted in an HTML form. Important: For the name property to have effect, you must add the following import to your project: import &quot;@ui5/webcomponents/dist/features/InputElementsFormSupport.js&quot;; Note: When set, a native input HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form. noTypeahead no-typeahead boolean false Defines whether the value will be autcompleted to match an item since v1.4.0 placeholder string &quot;&quot; Defines a short hint intended to aid the user with data entry when the component has no value. previewItem (readonly) preview-item IInputSuggestionItem|null The suggestion item on preview. readonly boolean false Defines whether the component is read-only. Note: A read-only component is not editable, but still provides visual feedback upon user interaction. required boolean false Defines whether the component is required. since v1.0.0-rc.3 showClearIcon show-clear-icon boolean false Defines whether the clear icon of the input will be shown. since v1.2.0 showSuggestions show-suggestions boolean false Defines whether the component should show suggestions, if such are present. Note: You need to import the InputSuggestions module from &quot;@ui5/webcomponents/dist/features/InputSuggestions.js&quot; to enable this functionality. type InputType &quot;Text&quot; Defines the HTML type of the component. Available options are: Text, Email, Number, Password, Tel, and URL. Notes: The particular effect of this property differs depending on the browser and the current language settings, especially for type Number. The property is mostly intended to be used with touch devices that use different soft keyboard layouts depending on the given input type. value string &quot;&quot; Defines the value of the component. Note: The property is updated upon typing. valueState value-state ValueState &quot;None&quot; Defines the value state of the component. Available options are: None Error Warning Success Information Slots This Element provides slot(s). This means it can display its child nodes. Unless targeting the default slot, use the slot attribute to define the destination slot for each child. Text, along with HTML Elements with no slot attribute, goes the the default slot. Slot Type Description default HTMLElement [0..n] Defines the suggestion items. Example: &lt;ui5-input show-suggestions&gt; &nbsp;&nbsp;&nbsp;&nbsp;&lt;ui5-suggestion-item text=&quot;Item #1&quot;&gt;&lt;/ui5-suggestion-item&gt; &nbsp;&nbsp;&nbsp;&nbsp;&lt;ui5-suggestion-item text=&quot;Item #2&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;/ui5-input&gt; Note: The suggestions would be displayed only if the showSuggestions property is set to true. Note: The &lt;ui5-suggestion-item&gt; and &lt;ui5-suggestion-group-item&gt; are recommended to be used as suggestion items. Note: Importing the Input Suggestions Support feature: import &quot;@ui5/webcomponents/dist/features/InputSuggestions.js&quot;; automatically imports the &lt;ui5-suggestion-item&gt; and &lt;ui5-suggestion-group-item&gt; for your convenience. icon HTMLElement [0..n] Defines the icon to be displayed in the component. valueStateMessage HTMLElement [0..n] Defines the value state message that will be displayed as pop up under the component. Note: If not specified, a default text (in the respective language) will be displayed. Note: The valueStateMessage would be displayed, when the component is in Information, Warning or Error value state. Note: If the component has suggestionItems, the valueStateMessage would be displayed as part of the same popover, if used on desktop, or dialog - on phone. Events This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as addEventListener. Name Description change Fired when the input operation has finished by pressing Enter or on focusout. input Fired when the value of the component changes at each keystroke, and when a suggestion item has been selected. suggestion-item-preview Fired when the user navigates to a suggestion item via the ARROW keys, as a preview, before the final selection. since v1.0.0-rc.8 item type: HTMLElement description: The previewed suggestion item. targetRef type: HTMLElement description: The DOM ref of the suggestion item. suggestion-item-select Fired when a suggestion item, that is displayed in the suggestion popup, is selected. item type: HTMLElement description: The selected item. Methods This Web Component exposes public methods. You can invoke them directly on the Web Component instance. Name Description openPicker Manually opens the suggestions popover, assuming suggestions are enabled. Items must be preloaded for it to open. SuggestionItem The ui5-suggestion-item represents the suggestion item of the ui5-input. Properties/Attributes You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different. Name Type Default Value Description additionalText additional-text string Defines the additionalText, displayed in the end of the item. since v1.0.0-rc.15 additionalTextState additional-text-state sap.ui.webc.base.types.ValueState &quot;None&quot; Defines the state of the additionalText. Available options are: &quot;None&quot; (by default), &quot;Success&quot;, &quot;Information&quot;, &quot;Warning&quot; and &quot;Error&quot;. since v1.0.0-rc.15 description string Defines the description displayed right under the item text, if such is present. icon string Defines the icon source URI. Note: SAP-icons font provides numerous built-in icons. To find all the available icons, see the Icon Explorer. iconEnd icon-end boolean false Defines whether the icon should be displayed in the beginning of the item or in the end. Note: If image is set, the icon would be displayed after the image. image string Defines the image source URI. Note: The image would be displayed in the beginning of the item. text string &quot;&quot; Defines the text of the component. type sap.ui.webc.main.types.ListItemType &quot;Active&quot; Defines the visual indication and behavior of the item. Available options are Active (by default), Inactive and Detail. Note: When set to Active, the item will provide visual response upon press and hover, while when Inactive or Detail - will not. since v1.0.0-rc.8 SuggestionGroupItem The ui5-suggestion-group-item is type of suggestion item, that can be used to split the ui5-input suggestions into groups. Properties/Attributes You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different. Name Type Default Value Description text string &quot;&quot; Defines the text of the ui5-suggestion-group-item. Privacy Policy Legal",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Input/",
    "relUrl": "/playground/components/Input/"
  },
  "130": {
    "id": "130",
    "title": "Input Field Min Width",
    "content": "&lt;!DOCTYPE html&gt; ui5-input fields width: 540",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/InputFieldMinWidth/",
    "relUrl": "/playground/main/pages/InputFieldMinWidth/"
  },
  "131": {
    "id": "131",
    "title": "Input Icons",
    "content": "&lt;!DOCTYPE html&gt; ui5-input with icons Blize Fiori 3 Fiori 3 HCB Horizon Horizon HCB Horizon HCW Horizon Dark",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/InputIcons/",
    "relUrl": "/playground/main/pages/InputIcons/"
  },
  "132": {
    "id": "132",
    "title": "Input_quickview",
    "content": "&lt;!DOCTYPE html&gt; Input Quick View Quick View sample hover on item to see quick view navigate via the arrows to see quick view press [ctrl + shift + 1] to enter the quick view focusable element: before hello Actions Delete Product Audit Log Settings OData API Audit Products Laptop Lenovo IPhone 3 HP Monitor 24 focusable element: after Test Quick View sample Test keyup Test suggestion-item-preview Test mouseover on item Actions Delete Product Audit Log Settings OData API Audit Products Laptop Lenovo IPhone 3 HP Monitor 24",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Input_quickview/",
    "relUrl": "/playground/main/pages/Input_quickview/"
  },
  "133": {
    "id": "133",
    "title": "Inputs Alignment",
    "content": "&lt;!DOCTYPE html&gt; Inputs Alignment The way the components will be rendered out of the box Cozy Compact Condensed short option ui5-select: average long option very very very very very long option Explicitly width:auto set short option average long option very very very very very long option Explicitly width:100% set short option average long option very very very very very long option",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/InputsAlignment/",
    "relUrl": "/playground/main/pages/InputsAlignment/"
  },
  "134": {
    "id": "134",
    "title": "Inputs Lazy Loading",
    "content": "&lt;!DOCTYPE html&gt; Input Lazy Loading Lazy loading items oninput Lazy load items on first type in Preload items Hardcoded items Dryanovo Gabrovo Sofia Yablanitsa New York Always show suggestions Lazy loading items oninput Lazy load items on first type in Preload items Hardcoded items",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/InputsLazyLoading/",
    "relUrl": "/playground/main/pages/InputsLazyLoading/"
  },
  "135": {
    "id": "135",
    "title": "Item Navigation",
    "content": "&lt;!DOCTYPE html&gt; Item Navigation Manually switch RTL Focus does not cycle Option 1 Option 2 Vertical navigation only Option 2.1 Option 2.2 Option 2.3 Horizontal navigation only Test PAGE UP/DOWN 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/ItemNavigation/",
    "relUrl": "/playground/main/pages/ItemNavigation/"
  },
  "136": {
    "id": "136",
    "title": "Kitchen",
    "content": "&lt;!DOCTYPE html&gt; ui5 webcomponents UI5 webcomponents Compact RTL HCB Dark/Light ui5-button ui5-card ui5-checkbox ui5-date-picker ui5-dialog ui5-icon ui5-label ui5-link ui5-list ui5-li ui5-panel ui5-popover ui5-radio-button ui5-tabcontainer ui5-table ui5-textarea UI5 webcomponents For better experience, for Fiori3 experience Getting started Download Java EE Maven Cloud computing C/C++ Phyton Node JS Photoshop CorelDRAW GIMP JavaScript React Algorithms Submit Not available Edit Apply Cancel Back Next Approve Decline Download Activate Yes/No I/O Toggle Button pressed On/Off Menu Open Popover Hello World! Close Open Dialog Hello World! Close Open Dialog Stretched Hello World! Close Euro/BGN Light/Dark BG/EN Emphasized ui5 link subtle link Emphasized disabled ui5 link Emphasized ui5 link subtle link Emphasized ui5 link disabled Emphasized Countries Reset Cencel Argentina Bulgaria China Quarks Add Remove Up Down Charm Employees Add Remove Manager Developer Product Owner user: pass: Cucumber Banana Tomato Wine Pop Dress Gravity Cucumber Banana Tomato Wine Pop Dress Gravity My tree None SingleSelect SingleSelectBegin SingleSelectEnd MultiSelect Delete Expand Level 1 Expand Level 2 Expand All Collapse All Laptop HP 2GB RAM Dual-core Go to SAP Laptop HP 2GB RAM Dual-core Go to SAP Laptop HP 2GB RAM Dual-core Go to SAP Laptop HP 2GB RAM Dual-core Go to SAP Laptop HP 2GB RAM Dual-core Go to SAP Laptop HP 2GB RAM Dual-core Go to SAP Component Accessibility Test Coverage RTL i18n Component 1 100% 40% 100% 100% Component 2 100% 100% 100% 100% Component 3 100% 100% 100% 100% Component 4 100% 100% 80% 100% Component 5 100% 100% 45% 100% Component 6 70% 100% 100% 100% This is a long long even longer text defined via the ui5-label and it truncates by default This is a long long even longer text defined via the ui5-label, but this one wraps",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Kitchen/",
    "relUrl": "/playground/main/pages/Kitchen/"
  },
  "137": {
    "id": "137",
    "title": "Kitchen",
    "content": "&lt;!DOCTYPE html&gt; ui5 webcomponents UI5 webcomponents Compact RTL HCB/FIORI ui5-button ui5-card ui5-checkbox ui5-date-picker ui5-dialog ui5-icon ui5-label ui5-link ui5-list ui5-li ui5-panel ui5-popover ui5-radio-button ui5-tabcontainer ui5-table ui5-textarea UI5 webcomponents For better experience, for Fiori3 experience Getting started Download Java EE Maven Cloud computing C/C++ Phyton Node JS Photoshop CorelDRAW GIMP JavaScript React Algorithms Submit Not available Edit Apply Cancel Back Next Approve Decline Download Activate Yes/No I/O Toggle Button pressed On/Off Menu Open Popover Hello World! Close Open Dialog Hello World! Close Open Dialog Stretched Hello World! Close Euro/BGN Light/Dark BG/EN Emphasized ui5 link subtle link Emphasized disabled ui5 link Emphasized ui5 link subtle link Emphasized ui5 link disabled Emphasized Countries Reset Cencel Argentina Bulgaria China Quarks Add Remove Up Down Charm Employees Add Remove Manager Developer Product Owner user: pass: Cucumber Banana Tomato Wine Pop Dress Gravity Cucumber Banana Tomato Wine Pop Dress Gravity Laptop HP 2GB RAM Dual-core Go to SAP Laptop HP 2GB RAM Dual-core Go to SAP Laptop HP 2GB RAM Dual-core Go to SAP Laptop HP 2GB RAM Dual-core Go to SAP Laptop HP 2GB RAM Dual-core Go to SAP Laptop HP 2GB RAM Dual-core Go to SAP Component Accessibility Test Coverage RTL i18n Component 1 100% 40% 100% 100% Component 2 100% 100% 100% 100% Component 3 100% 100% 100% 100% Component 4 100% 100% 80% 100% Component 5 100% 100% 45% 100% Component 6 70% 100% 100% 100% This is a long long even longer text defined via the ui5-label and it truncates by default This is a long long even longer text defined via the ui5-label, but this one wraps",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Kitchen/",
    "relUrl": "/playground/main/pages/Kitchen/"
  },
  "138": {
    "id": "138",
    "title": "Label",
    "content": "&lt;!DOCTYPE html&gt; Label Basic labels Basic Label Basic Label Basic Label Basic Label Basic long labels Start The quick brown fox jumps over the lazy sheep End Start The quick brown fox jumps over the lazy sheep End Start The quick brown fox jumps over the lazy sheep End Start The quick brown fox jumps over the lazy sheep End Basic long labels with predefined width Start The quick brown fox jumps over the lazy sheep End Start The quick brown fox jumps over the lazy sheep End Start The quick brown fox jumps over the lazy sheep End Start The quick brown fox jumps over the lazy sheep End Required labels Requirednative span Required semi-colonnative span Required semi-colon wrappednative span Wrapping label Reprehenderit amet cillum tempor ex eu dolor adipisicing reprehenderit pariatur. Reprehenderit amet cillum tempor ex eu dolor adipisicing reprehenderit pariatur Reprehenderit amet cillum tempor ex eu dolor adipisicing reprehenderit pariatur. Reprehenderit amet cillum tempor ex eu dolor adipisicing reprehenderit pariatur. Reprehenderit amet cillum tempor ex eu dolor adipisicing reprehenderit pariatur. Reprehenderit amet cillum tempor ex eu dolor adipisicing reprehenderit pariatur. Reprehenderit amet cillum tempor ex eu dolor adipisicing reprehenderit pariatur. Must be right-aligned using `text-align: right` and wrapping-type=&quot;Normal&quot;. Test show-colon not forcing truncation Basic Label Basic Label label + input Reprehenderit amet cillum tempor ex eu dolor adipisicing reprehenderit pariatur Reprehenderit amet cillum tempor ex eu dolor adipisicing reprehenderit pariatur Reprehenderit amet cillum tempor ex eu dolor adipisicing reprehenderit pariatur Reprehenderit amet cillum tempor ex eu dolor adipisicing reprehenderit pariatur Reprehenderit amet cillum tempor ex eu dolor adipisicing reprehenderit pariatur Label in CustomListItem Reprehenderit amet cillum tempor ex eu dolor adipisicing reprehenderit pariatur Reprehenderit amet cillum tempor ex eu dolor adipisicing reprehenderit pariatur Italic Label Short labelH Long label - Reprehenderit amet cillum tempor Short labelH Long label - Reprehenderit amet cillum tempor Short labelH Long label - Reprehenderit amet cillum tempor Short labelH Long label - Reprehenderit amet cillum tempor Long label - Reprehenderit amet cillum temporH Long label - Reprehenderit amet cillum temporH Long label - Reprehenderit amet cillum temporH Long label - Reprehenderit amet cillum temporH Standard Label Short labelH Long label - Reprehenderit amet cillum tempor Short labelH Long label - Reprehenderit amet cillum tempor Short labelH Long label - Reprehenderit amet cillum tempor Short labelH Long label - Reprehenderit amet cillum tempor Long label - Reprehenderit amet cillum temporH Long label - Reprehenderit amet cillum temporH Long label - Reprehenderit amet cillum temporH Long label - Reprehenderit amet cillum temporH Using a Label inside Shadow Root",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Label/",
    "relUrl": "/playground/main/pages/Label/"
  },
  "139": {
    "id": "139",
    "title": "Label",
    "content": "Label @ui5/webcomponents &lt;ui5-label&gt; Basic Label The quick brown fox jumps over the lazy dog. &lt;ui5-label&gt;Simple Label&lt;/ui5-label&gt; Required Label Required Label &lt;ui5-label required&gt;Required Label&lt;/ui5-label&gt; Required Label With Colon Required Label &lt;ui5-label required show-colon&gt;Required Label&lt;/ui5-label&gt; Truncated Label Long labels are truncated by default. &lt;ui5-label style=&quot;width:200px&quot;&gt;Long labels are truncated by default.&lt;/ui5-label&gt; Wrapped Label Long labels can wrap if the &#39;wrapping-type=&quot;Normal&quot;&#39; property is set. &lt;ui5-label style=&quot;width:200px&quot; wrapping-type=&quot;Normal&quot;&gt;Long labels can wrap if the &#39;wrapping-type=&quot;Normal&quot;&#39; property is set.&lt;/ui5-label&gt; Label &#39;for&#39; First name Date of birth Job Manager Sales Developer Description label test Accept terms of use &lt;ui5-label id=&quot;myLabel&quot; for=&quot;myInput&quot; required show-colon&gt;First name&lt;/ui5-label&gt; &lt;ui5-input id=&quot;myInput&quot; required placeholder=&quot;Enter your name&quot;&gt;&lt;/ui5-input&gt; &lt;ui5-label id=&quot;myLabel2&quot; for=&quot;myDP&quot; required show-colon&gt;Date of birth&lt;/ui5-label&gt; &lt;ui5-date-picker id=&quot;myDP&quot; required&gt;&lt;/ui5-date-picker&gt; &lt;ui5-label id=&quot;myLabel3&quot; for=&quot;mySelect&quot; required show-colon&gt;Job&lt;/ui5-label&gt; &lt;ui5-select id=&quot;mySelect&quot; required&gt; &lt;ui5-option&gt;Manager&lt;/ui5-option&gt; &lt;ui5-option&gt;Sales&lt;/ui5-option&gt; &lt;ui5-option selected&gt;Developer&lt;/ui5-option&gt; &lt;/ui5-select&gt; &lt;ui5-label id=&quot;myLabel4&quot; for=&quot;myTextArea&quot; required show-colon&gt;Description label test&lt;/ui5-label&gt; &lt;ui5-textarea id=&quot;myTextArea&quot; required placeholder=&quot;Type as much text as you wish&quot;&gt;&lt;/ui5-textarea&gt; &lt;ui5-label for=&quot;myCB&quot; required show-colon&gt;Accept terms of use&lt;/ui5-label&gt; &lt;ui5-checkbox id=&quot;myCB&quot; required&gt;&lt;/ui5-checkbox&gt; &lt;/section&gt; Overview The ui5-label is a component used to represent a label, providing valuable information to the user. Usually it is placed next to a value holder, such as a text field. It informs the user about what data is displayed or expected in the value holder. The ui5-label appearance can be influenced by properties, such as required and wrappingType. The appearance of the Label can be configured in a limited way by using the design property. For a broader choice of designs, you can use custom styles. ES6 Module Import import &quot;@ui5/webcomponents/dist/Label&quot;; Properties/Attributes You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different. Name Type Default Value Description for string &quot;&quot; Defines the labeled input by providing its ID. Note: Can be used with both ui5-input and native input. required boolean false Defines whether an asterisk character is added to the component text. Note: Usually indicates that user input (bound with the for property) is required. In that case the required&lt;/&gt; property of the corresponding input should also be set. &lt;/div&gt; &lt;/div&gt; showColon show-colon boolean false Defines whether colon is added to the component text. Note: Usually used in forms. wrappingType wrapping-type WrappingType &quot;None&quot; Defines how the text of a component will be displayed when there is not enough space. Available options are: None - The text will be truncated with an ellipsis. Normal - The text will wrap. The words will not be broken based on hyphenation. &lt;/div&gt; Slots This Element provides slot(s). This means it can display its child nodes. Unless targeting the default slot, use the slot attribute to define the destination slot for each child. Text, along with HTML Elements with no slot attribute, goes the the default slot. Slot Type Description default Node [0..n] Defines the text of the component. Note: Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design. &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; Privacy Policy Legal",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Label/",
    "relUrl": "/playground/components/Label/"
  },
  "140": {
    "id": "140",
    "title": "Link",
    "content": "&lt;!DOCTYPE html&gt; Playground Standard Link Subtle link Disabled Emphasized Link with no href Link with no target cross-origin linknative span link with accessible-namenative span prevent-default link click default preventednative span overstyle-link link with different colornative span Disabled link Disabled link Wrapping link Eu enim consectetur do amet elit. Eu enim consectetur do amet elit. Link designs Eu enim consectetur do amet elit. Eu enim consectetur do amet elit. Eu enim consectetur do amet elit. Text from aria-labelledby Go to Go to Collapsible text Maxlines ... Lorem ipsum dolor st amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat Less Link opens a dialog Sign in Email: Password: Sign in Link with prevent default and modifiers Link 1",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Link/",
    "relUrl": "/playground/main/pages/Link/"
  },
  "141": {
    "id": "141",
    "title": "Link",
    "content": "Link @ui5/webcomponents &lt;ui5-link&gt; Different Link Designs Standard Link Subtle link Disabled Emphasized &lt;ui5-link href=&quot;https://www.sap.com&quot; target=&quot;_blank&quot;&gt;Standard Link&lt;/ui5-link&gt; &lt;ui5-link href=&quot;https://www.sap.com&quot; target=&quot;_blank&quot; design=&quot;Subtle&quot;&gt;Subtle link&lt;/ui5-link&gt; &lt;ui5-link href=&quot;https://www.sap.com&quot; target=&quot;_blank&quot; disabled&gt;Disabled&lt;/ui5-link&gt; &lt;ui5-link href=&quot;https://www.sap.com&quot; target=&quot;_blank&quot; design=&quot;Emphasized&quot;&gt;Emphasized&lt;/ui5-link&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The &lt;code&gt;ui5-link&lt;/code&gt; is a hyperlink component that is used to navigate to other apps and web pages, or to trigger actions. It is a clickable text element, visualized in such a way that it stands out from the standard text. On hover, it changes its style to an underlined text to provide additional feedback to the user. Usage You can set the ui5-link to be enabled or disabled. To create a visual hierarchy in large lists of links, you can set the less important links as Subtle or the more important ones as Emphasized, by using the design property. If the href property is set, the link behaves as the HTML anchor tag (&lt;a&gt;&lt;a&#47;&gt;) and opens the specified URL in the given target frame (target property). To specify where the linked content is opened, you can use the target property. Responsive behavior If there is not enough space, the text of the ui5-link becomes truncated. If the wrappingType property is set to &quot;Normal&quot;, the text is displayed on several lines instead of being truncated. ES6 Module Import import &quot;@ui5/webcomponents/dist/Link&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibilityAttributes &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;object&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; An object of strings that defines several additional accessibility attribute values for customization depending on the use case. It supports the following fields: &lt;ul&gt; &lt;li&gt;&lt;code&gt;expanded&lt;/code&gt;: Indicates whether the anchor element, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: &lt;ul&gt; &lt;li&gt;&lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;false&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;hasPopup&lt;/code&gt;: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the anchor element. Accepts the following string values: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Grid&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ListBox&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tree&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.2.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the input &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleRole &lt;br&gt; &lt;code&gt;accessible-role&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;link&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the ARIA role of the component. &lt;b&gt;Note:&lt;/b&gt; Use the &quot;button&quot; role in cases when navigation is not expected to occur and the href property is not defined. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.9.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; design &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;LinkDesign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Default&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the component design. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Avaialble options are &lt;code&gt;Default&lt;/code&gt;, &lt;code&gt;Subtle&lt;/code&gt;, and &lt;code&gt;Emphasized&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is disabled. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When disabled, the click event cannot be triggered by the user. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; href &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the component href. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Standard hyperlink behavior is supported. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; target &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the component target. &lt;br&gt;&lt;br&gt; &lt;b&gt;Notes:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;_self&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;_top&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;_blank&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;_parent&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;_search&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;b&gt;This property must only be used when the &lt;code&gt;href&lt;/code&gt; property is set.&lt;/b&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; wrappingType &lt;br&gt; &lt;code&gt;wrapping-type&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;WrappingType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines how the text of a component will be displayed when there is not enough space. Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt; - The text will be truncated with an ellipsis.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Normal&lt;/code&gt; - The text will wrap. The words will not be broken based on hyphenation.&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the text of the component. &lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the component is triggered either with a mouse/tap or by using the Enter key. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;altKey&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Returns whether the &quot;ALT&quot; key was pressed when the event was triggered.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;ctrlKey&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Returns whether the &quot;CTRL&quot; key was pressed when the event was triggered.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;metaKey&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Returns whether the &quot;META&quot; key was pressed when the event was triggered.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;shiftKey&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Returns whether the &quot;SHIFT&quot; key was pressed when the event was triggered.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Link/",
    "relUrl": "/playground/components/Link/"
  },
  "142": {
    "id": "142",
    "title": "List",
    "content": "&lt;!DOCTYPE html&gt; ui5-list / ui5-li List growing=&quot;Scroll&quot; new items loaded: 0 times: 0 New Items Voluptate do eu cupidatat elit est culpa. Reprehenderit eiusmod voluptate ex est dolor nostrud Lorem Lorem do nisi laborum veniam. Sint do non culpa aute occaecat labore ipsum veniam minim tempor est. Duis pariatur aute culpa irure ad excepteur pariatur culpa culpa ea duis occaecat aute irure. Ipsum velit culpa non exercitation ex laboris deserunt in eu non officia in. Laborum sunt aliqua labore cupidatat sunt labore. Laptop Lenovo IPhone 3 Discounted Items HP Monitor 24 Audio cabel DVD set Discounted Items HP Monitor 24 Audio cabel DVD set ui5-list New Items Voluptate do eu cupidatat elit est culpa. Reprehenderit eiusmod voluptate ex est dolor nostrud Lorem Lorem do nisi laborum veniam. Sint do non culpa aute occaecat labore ipsum veniam minim tempor est. Duis pariatur aute culpa irure ad excepteur pariatur culpa culpa ea duis occaecat aute irure. Ipsum velit culpa non exercitation ex laboris deserunt in eu non officia in. Laborum sunt aliqua labore cupidatat sunt labore. Laptop Lenovo IPhone 3 Discounted Items HP Monitor 24 Audio cabel DVD set Discounted Items HP Monitor 24 Audio cabel DVD set Option 1 Laptop HP laptop Lenovo IPhone 3 Avatar inside imageContent slot Avatar inside imageContent slot Active item - press Active item - press Inactive item Inactive item Detail item Inactive item Inactive item Inactive item Inactive item Navigation item Navigation item Navigated item Navigated item Argentina Bulgaria China [prevented Event] itemClick :: n/a Argentina Bulgaria China [Event] itemPress :: n/a [Event] itemClick :: n/a [Event] selectionChange :: n/a Argentina Bulgaria China Italy Vietnam Dolor dolor ipsum culpa proident esse quis quis incididunt. Sunt duis eu ad deserunt dolor sunt Lorem incididunt est irure qui dolore minim consectetur. Voluptate minim veniam aliqua aute et consectetur magna commodo sit. Duis fugiat esse culpa ea velit sit excepteur duis deserunt aliquip minim laborum. Amet aliquip excepteur esse aute ut dolore labore. Bulgaria China [Event] itemPress :: n/a [Event] selectionChange :: n/a Argentina Bulgaria China Items 3/3 Reset List Argentina Bulgaria China Detail item Denmark Custom Delete Button Laptop HP laptop Lenovo IPhone 3 Press me Go to SAP Press me Go to SAP Press me Go to SAP Option 1 Option 2 Option 3 Option 1 Option 2 Option 3 Export Argentina Click me UI5 link Click me China Header button Option 1 Option 2 Option 3 Change mode: None SingleSelect SingleSelectBegin SingleSelectEnd MultiSelect Delete Press me Go to SAP Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/List/",
    "relUrl": "/playground/main/pages/List/"
  },
  "143": {
    "id": "143",
    "title": "List",
    "content": "List @ui5/webcomponents &lt;ui5-list&gt; Basic List Pineapple Orange Blueberry Mango &lt;ui5-list id=&quot;myList&quot; class=&quot;full-width&quot;&gt; &lt;ui5-li icon=&quot;nutrition-activity&quot; description=&quot;Tropical plant with an edible fruit&quot; additional-text=&quot;In-stock&quot; additional-text-state=&quot;Success&quot;&gt;Pineapple&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;nutrition-activity&quot; description=&quot;Occurs between red and yellow&quot; additional-text=&quot;Expires&quot; additional-text-state=&quot;Warning&quot;&gt;Orange&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;nutrition-activity&quot; description=&quot;The yellow lengthy fruit&quot; additional-text=&quot;Re-stock&quot; additional-text-state=&quot;Information&quot;&gt;Blueberry&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;nutrition-activity&quot; description=&quot;The tropical stone fruit&quot; additional-text=&quot;Re-stock&quot; additional-text-state=&quot;Error&quot;&gt;Mango&lt;/ui5-li&gt; &lt;/ui5-list&gt; List with growing=&quot;Scroll&quot; Pineapple Orange Banana Mango Apple Peach Pomelo Pear &lt;ui5-list id=&quot;infiniteScrollEx&quot; style=&quot;height: 300px&quot; growing=&quot;Scroll&quot;&gt; &lt;ui5-li icon=&quot;nutrition-activity&quot; description=&quot;Tropical plant with an edible fruit&quot; additional-text=&quot;In-stock&quot; additional-text-state=&quot;Success&quot;&gt;Pineapple&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;nutrition-activity&quot; description=&quot;Occurs between red and yellow&quot; additional-text=&quot;Expires&quot; additional-text-state=&quot;Warning&quot;&gt;Orange&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;nutrition-activity&quot; description=&quot;The yellow lengthy fruit&quot; additional-text=&quot;Re-stock&quot; additional-text-state=&quot;Error&quot;&gt;Banana&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;nutrition-activity&quot; description=&quot;The tropical stone fruit&quot; additional-text=&quot;Re-stock&quot; additional-text-state=&quot;Error&quot;&gt;Mango&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;nutrition-activity&quot; description=&quot;An apple is a sweet, edible fruit produced by an apple tree &quot; additional-text=&quot;In-stock&quot; additional-text-state=&quot;Success&quot;&gt;Apple&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;nutrition-activity&quot; description=&quot;The peach (Prunus persica) is a deciduous tree native to the region of Northwest China&quot; additional-text=&quot;Expires&quot; additional-text-state=&quot;Warning&quot;&gt;Peach&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;nutrition-activity&quot; description=&quot;The pomelo is the largest citrus fruit from the family Rutaceae and the principal ancestor of the grapefruit&quot; additional-text=&quot;Re-stock&quot; additional-text-state=&quot;Error&quot;&gt;Pomelo&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;nutrition-activity&quot; description=&quot;The pear (/ˈpɛər/) tree and shrub are a species of genus Pyrus, bearing the pomaceous fruit of the same name.&quot; additional-text=&quot;Re-stock&quot; additional-text-state=&quot;Error&quot;&gt;Pear&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;script&gt; const infiniteScrollEx = document.getElementById(&quot;infiniteScrollEx&quot;); infiniteScrollEx.addEventListener(&quot;load-more&quot;, (e) =&gt; { infiniteScrollEx.busy = true; setTimeout(() =&gt; { for(let i = 0; i &lt; 5; i++) { const li = document.createElement(&quot;ui5-li&quot;); li.textContent = &quot;Fruit name&quot; + i; infiniteScrollEx.appendChild(li); } infiniteScrollEx.busy = false; }, 200); }); &lt;/script&gt; List in Single-selection Mode Argentina Bulgaria China Denmark (ui5-li type=&#39;Inactive&#39;) &lt;ui5-list id=&quot;country-selector&quot; mode=&quot;SingleSelect&quot; header-text=&quot;Select a country:&quot;&gt; &lt;ui5-li selected icon=&quot;map&quot; icon-end&gt;Argentina&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;map&quot; icon-end&gt;Bulgaria&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;map&quot; icon-end&gt;China&lt;/ui5-li&gt; &lt;ui5-li type=&quot;Inactive&quot; icon=&quot;map&quot; icon-end&gt;Denmark (ui5-li type=&#39;Inactive&#39;)&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;script&gt; document.getElementById(&#39;country-selector&#39;).addEventListener(&quot;selection-change&quot;, function (event) { var selectedItems = event.detail.selectedItems; alert(&quot;The selected item: &quot; + selectedItems[0].textContent); }); &lt;/script&gt; List in Multi-selection Mode Pineapple Orange Banana Mango &lt;ui5-list id=&quot;myList1&quot; mode=&#39;MultiSelect&#39; header-text=&quot;Multiple selection is possible&quot;&gt; &lt;ui5-li&gt;Pineapple&lt;/ui5-li&gt; &lt;ui5-li selected&gt;Orange&lt;/ui5-li&gt; &lt;ui5-li&gt;Banana&lt;/ui5-li&gt; &lt;ui5-li&gt;Mango&lt;/ui5-li&gt; &lt;/ui5-list&gt; Busy List &lt;ui5-list header-text=&quot;Fetching data ...&quot; busy&gt;&lt;/ui5-list&gt; List With GroupHeaders Front End Developers Jennifer Lora Carlotta Back End Developers Clark Ellen Adam FullStack Developers Susan David Natalie &lt;ui5-list header-text=&quot;Team Members&quot; mode=&quot;MultiSelect&quot;&gt; &lt;ui5-li-groupheader&gt;Front End Developers&lt;/ui5-li-groupheader&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/woman_avatar_3.png&quot; icon=&quot;navigation-right-arrow&quot; icon-end&gt;Jennifer&lt;/ui5-li&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/woman_avatar_4.png&quot; icon=&quot;navigation-right-arrow&quot; icon-end&gt;Lora&lt;/ui5-li&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/woman_avatar_5.png&quot; icon=&quot;navigation-right-arrow&quot; icon-end&gt;Carlotta&lt;/ui5-li&gt; &lt;ui5-li-groupheader&gt;Back End Developers&lt;/ui5-li-groupheader&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/man_avatar_1.png&quot; icon=&quot;navigation-right-arrow&quot; icon-end&gt;Clark&lt;/ui5-li&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/woman_avatar_1.png&quot; icon=&quot;navigation-right-arrow&quot; icon-end&gt;Ellen&lt;/ui5-li&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/man_avatar_2.png&quot; icon=&quot;navigation-right-arrow&quot; icon-end&gt;Adam&lt;/ui5-li&gt; &lt;ui5-li-groupheader&gt;FullStack Developers&lt;/ui5-li-groupheader&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/woman_avatar_2.png&quot; icon=&quot;navigation-right-arrow&quot; icon-end&gt;Susan&lt;/ui5-li&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/man_avatar_3.png&quot; icon=&quot;navigation-right-arrow&quot; icon-end&gt;David&lt;/ui5-li&gt; &lt;ui5-li image=&quot;../../../assets/images/avatars/woman_avatar_3.png&quot; icon=&quot;navigation-right-arrow&quot; icon-end&gt;Natalie&lt;/ui5-li&gt; &lt;/ui5-list&gt; List items using imageContent slot Avatar inside imageContent slot Avatar inside imageContent slot &lt;ui5-list class=&quot;full-width&quot;&gt; &lt;ui5-li&gt; Avatar inside imageContent slot &lt;div slot=&quot;imageContent&quot;&gt; &lt;ui5-avatar shape=&quot;Square&quot; initials=&quot;ABC&quot; color-scheme=&quot;Accent2&quot;&gt;&lt;/ui5-avatar&gt; &lt;/div&gt; &lt;/ui5-li&gt; &lt;ui5-li&gt; Avatar inside imageContent slot &lt;div slot=&quot;imageContent&quot;&gt; &lt;ui5-avatar &gt; &lt;img src=&quot;./img/woman_avatar_5.png&quot; alt=&quot;Woman image&quot;&gt; &lt;/ui5-avatar&gt; &lt;/div&gt; &lt;/ui5-li&gt; &lt;/ui5-list&gt; List in Delete Mode Argentina Bulgaria China Denmark Custom Delete Button &lt;ui5-list id=&quot;myList5&quot; mode=&quot;Delete&quot; header-text=&quot;Note: The list items removal is up to application developers&quot;&gt; &lt;ui5-li&gt;Argentina&lt;/ui5-li&gt; &lt;ui5-li&gt;Bulgaria&lt;/ui5-li&gt; &lt;ui5-li&gt;China&lt;/ui5-li&gt; &lt;ui5-li&gt;Denmark &lt;div slot=&quot;deleteButton&quot;&gt; &lt;ui5-button&gt;Custom Delete Button&lt;/ui5-button&gt; &lt;/div&gt; &lt;/ui5-li&gt; &lt;/ui5-list&gt; List with No Data &lt;ui5-list class=&quot;full-width&quot; header-text=&quot;Products&quot; no-data-text=&quot;No Data Available&quot; separators=&quot;None&quot;&gt;&lt;/ui5-list&gt; List Item Separation Types Item #1 Item #2 Item #3 Devilered Pending Declined &lt;ui5-list header-text=&quot;No separators&quot; separators=&quot;None&quot; class=&quot;full-width&quot;&gt; &lt;ui5-li icon=&quot;product&quot;&gt;Item #1&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;product&quot;&gt;Item #2&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;product&quot;&gt;Item #3&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;ui5-list header-text=&quot;Inner separators&quot; separators=&quot;Inner&quot; class=&quot;full-width&quot;&gt; &lt;ui5-li icon=&quot;shipping-status&quot;&gt;Devilered&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;shipping-status&quot;&gt;Pending&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;shipping-status&quot;&gt;Declined&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-list component allows displaying a list of items, advanced keyboard handling support for navigating between items, and predefined modes to improve the development efficiency. The ui5-list is a container for the available list items: &lt;ul&gt; &lt;li&gt;ui5-li&lt;/li&gt; &lt;li&gt;ui5-li-custom&lt;/li&gt; &lt;li&gt;ui5-li-groupheader&lt;/li&gt; &lt;/ul&gt; To benefit from the built-in selection mechanism, you can use the available selection modes, such as SingleSelect, MultiSelect and Delete. Additionally, the ui5-list provides header, footer, and customization for the list item separators. &lt;h3&gt;Keyboard Handling&lt;/h3&gt; Basic Navigation The ui5-list provides advanced keyboard handling. When a list is focused the user can use the following keyboard shortcuts in order to perform a navigation: [UP/DOWN] - Navigates up and down the items [HOME] - Navigates to first item [END] - Navigates to the last item The user can use the following keyboard shortcuts to perform actions (such as select, delete), when the mode property is in use: &lt;ul&gt; &lt;li&gt;[SPACE] - Select an item (if type is ‘Active’) when mode is selection&lt;/li&gt; &lt;li&gt;[DELETE] - Delete an item if mode property is Delete&lt;/li&gt; &lt;/ul&gt; Fast Navigation This component provides a build in fast navigation group which can be used via F6 / Shift + F6 or Ctrl + Alt(Option) + Down / Ctrl + Alt(Option) + Up. In order to use this functionality, you need to import the following module: import &quot;@ui5/webcomponents-base/dist/features/F6Navigation.js&quot; ES6 Module Import import &quot;@ui5/webcomponents/dist/List.js&quot;; import &quot;@ui5/webcomponents/dist/StandardListItem.js&quot;; (for ui5-li) import &quot;@ui5/webcomponents/dist/CustomListItem.js&quot;; (for ui5-li-custom) import &quot;@ui5/webcomponents/dist/GroupHeaderListItem.js&quot;; (for ui5-li-groupheader) &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the IDs of the elements that label the input. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleRole &lt;br&gt; &lt;code&gt;accessible-role&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;list&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible role of the component. &lt;br&gt;&lt;br&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; busy &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the component would display a loading indicator over the list. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.6&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; busyDelay &lt;br&gt; &lt;code&gt;busy-delay&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;1000&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the delay in milliseconds, after which the busy indicator will show up for this component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; footerText &lt;br&gt; &lt;code&gt;footer-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the footer text. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; growing &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ListGrowingMode&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component will have growing capability either by pressing a &lt;code&gt;More&lt;/code&gt; button, or via user scroll. In both cases &lt;code&gt;load-more&lt;/code&gt; event is fired. &lt;br&gt;&lt;br&gt; Available options: &lt;br&gt;&lt;br&gt; &lt;code&gt;Button&lt;/code&gt; - Shows a &lt;code&gt;More&lt;/code&gt; button at the bottom of the list, pressing of which triggers the &lt;code&gt;load-more&lt;/code&gt; event. &lt;br&gt; &lt;code&gt;Scroll&lt;/code&gt; - The &lt;code&gt;load-more&lt;/code&gt; event is triggered when the user scrolls to the bottom of the list; &lt;br&gt; &lt;code&gt;None&lt;/code&gt; (default) - The growing is off. &lt;br&gt;&lt;br&gt; &lt;b&gt;Restrictions:&lt;/b&gt; &lt;code&gt;growing=&quot;Scroll&quot;&lt;/code&gt; is not supported for Internet Explorer, on IE the component will fallback to &lt;code&gt;growing=&quot;Button&quot;&lt;/code&gt;. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.13&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; headerText &lt;br&gt; &lt;code&gt;header-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the component header text. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If &lt;code&gt;header&lt;/code&gt; is set this property is ignored. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; indent &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the component is indented. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; mode &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ListMode&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the mode of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Available options are &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;SingleSelect&lt;/code&gt;, &lt;code&gt;SingleSelectBegin&lt;/code&gt;, &lt;code&gt;SingleSelectEnd&lt;/code&gt;, &lt;code&gt;MultiSelect&lt;/code&gt;, and &lt;code&gt;Delete&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; noDataText &lt;br&gt; &lt;code&gt;no-data-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text that is displayed when the component contains no items. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; separators &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ListSeparators&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;All&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the item separator style that is used. &lt;br&gt;&lt;br&gt; &lt;b&gt;Notes:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;Avalaible options are &lt;code&gt;All&lt;/code&gt;, &lt;code&gt;Inner&lt;/code&gt;, and &lt;code&gt;None&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;When set to &lt;code&gt;None&lt;/code&gt;, none of the items are separated by horizontal lines.&lt;/li&gt; &lt;li&gt;When set to &lt;code&gt;Inner&lt;/code&gt;, the first item doesn&#39;t have a top separator and the last item doesn&#39;t have a bottom separator.&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the items of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Use &lt;code&gt;ui5-li&lt;/code&gt;, &lt;code&gt;ui5-li-custom&lt;/code&gt;, and &lt;code&gt;ui5-li-groupheader&lt;/code&gt; for the intended design.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;header&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the component header. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When &lt;code&gt;header&lt;/code&gt; is set, the &lt;code&gt;headerText&lt;/code&gt; property is ignored.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;item-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when an item is activated, unless the item&#39;s &lt;code&gt;type&lt;/code&gt; property is set to &lt;code&gt;Inactive&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The clicked item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;item-close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the &lt;code&gt;Close&lt;/code&gt; button of any item is clicked &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; This event is only applicable to list items that can be closed (such as notification list items), not to be confused with &lt;code&gt;item-delete&lt;/code&gt;. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.8&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the item about to be closed.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;item-delete&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the Delete button of any item is pressed. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A Delete button is displayed on each item, when the component &lt;code&gt;mode&lt;/code&gt; property is set to &lt;code&gt;Delete&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the deleted item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;item-toggle&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the &lt;code&gt;Toggle&lt;/code&gt; button of any item is clicked. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; This event is only applicable to list items that can be toggled (such as notification group list items). &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.8&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the toggled item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;load-more&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the user scrolls to the bottom of the list. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The event is fired when the &lt;code&gt;growing=&#39;Scroll&#39;&lt;/code&gt; property is enabled. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.6&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;selection-change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when selection is changed by user interaction in &lt;code&gt;SingleSelect&lt;/code&gt;, &lt;code&gt;SingleSelectBegin&lt;/code&gt;, &lt;code&gt;SingleSelectEnd&lt;/code&gt; and &lt;code&gt;MultiSelect&lt;/code&gt; modes. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;selectedItems&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Array &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; An array of the selected items.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;previouslySelectedItems&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Array &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; An array of the previously selected items.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;StandardListItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; The &lt;code&gt;ui5-li&lt;/code&gt; represents the simplest type of item for a &lt;code&gt;ui5-list&lt;/code&gt;. This is a list item, providing the most common use cases such as text, image and icon. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-li exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;title - Used to style the title of the list item&lt;/li&gt; &lt;li&gt;description - Used to style the description of the list item&lt;/li&gt; &lt;li&gt;additional-text - Used to style the additionalText of the list item&lt;/li&gt; &lt;li&gt;icon - Used to style the icon of the list item&lt;/li&gt; &lt;/ul&gt; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text alternative of the component. Note: If not provided a default text alternative will be set, if present. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; additionalText &lt;br&gt; &lt;code&gt;additional-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;additionalText&lt;/code&gt;, displayed in the end of the list item. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; additionalTextState &lt;br&gt; &lt;code&gt;additional-text-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.base.types.ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the state of the &lt;code&gt;additionalText&lt;/code&gt;. &lt;br&gt; Available options are: &lt;code&gt;&quot;None&quot;&lt;/code&gt; (by default), &lt;code&gt;&quot;Success&quot;&lt;/code&gt;, &lt;code&gt;&quot;Warning&quot;&lt;/code&gt;, &lt;code&gt;&quot;Information&quot;&lt;/code&gt; and &lt;code&gt;&quot;Error&quot;&lt;/code&gt;. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; description &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the description displayed right under the item text, if such is present. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v0.8.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;icon&lt;/code&gt; source URI. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; SAP-icons font provides numerous built-in icons. To find all the available icons, see the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; iconEnd &lt;br&gt; &lt;code&gt;icon-end&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the &lt;code&gt;icon&lt;/code&gt; should be displayed in the beginning of the list item or in the end. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If &lt;code&gt;image&lt;/code&gt; is set, the &lt;code&gt;icon&lt;/code&gt; would be displayed after the &lt;code&gt;image&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; image &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;image&lt;/code&gt; source URI. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;image&lt;/code&gt; would be displayed in the beginning of the list item. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; navigated &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; The navigated state of the list item. If set to &lt;code&gt;true&lt;/code&gt;, a navigation indicator is displayed at the end of the list item. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; type &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.types.ListItemType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Active&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the visual indication and behavior of the list items. Available options are &lt;code&gt;Active&lt;/code&gt; (by default), &lt;code&gt;Inactive&lt;/code&gt;, &lt;code&gt;Detail&lt;/code&gt; and &lt;code&gt;Navigation&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When set to &lt;code&gt;Active&lt;/code&gt; or &lt;code&gt;Navigation&lt;/code&gt;, the item will provide visual response upon press and hover, while with type &lt;code&gt;Inactive&lt;/code&gt; and &lt;code&gt;Detail&lt;/code&gt; - will not. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selected &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the selected state of the &lt;code&gt;ListItem&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the text of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;imageContent&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;b&gt;Note:&lt;/b&gt; While the slot allows option for setting custom avatar, to match the design guidelines, please use the &lt;code&gt;ui5-avatar&lt;/code&gt; with it`s default size - S. &lt;b&gt;Note:&lt;/b&gt; If bigger &lt;code&gt;ui5-avatar&lt;/code&gt; needs to be used, then the size of the &lt;code&gt;ui5-li&lt;/code&gt; should be customized in order to fit.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;deleteButton&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.IButton&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the delete button, displayed in &quot;Delete&quot; mode. &lt;b&gt;Note:&lt;/b&gt; While the slot allows custom buttons, to match design guidelines, please use the &lt;code&gt;ui5-button&lt;/code&gt; component. &lt;b&gt;Note:&lt;/b&gt; When the slot is not present, a built-in delete button will be displayed.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;detail-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the user clicks on the detail button when type is &lt;code&gt;Detail&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;CustomListItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; A component to be used as custom list item within the &lt;code&gt;ui5-list&lt;/code&gt; the same way as the standard &lt;code&gt;ui5-li&lt;/code&gt;. The component accepts arbitrary HTML content to allow full customization. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text alternative of the component. Note: If not provided a default text alternative will be set, if present. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; navigated &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; The navigated state of the list item. If set to &lt;code&gt;true&lt;/code&gt;, a navigation indicator is displayed at the end of the list item. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; type &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.types.ListItemType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Active&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the visual indication and behavior of the list items. Available options are &lt;code&gt;Active&lt;/code&gt; (by default), &lt;code&gt;Inactive&lt;/code&gt;, &lt;code&gt;Detail&lt;/code&gt; and &lt;code&gt;Navigation&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When set to &lt;code&gt;Active&lt;/code&gt; or &lt;code&gt;Navigation&lt;/code&gt;, the item will provide visual response upon press and hover, while with type &lt;code&gt;Inactive&lt;/code&gt; and &lt;code&gt;Detail&lt;/code&gt; - will not. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selected &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the selected state of the &lt;code&gt;ListItem&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content of the component.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;deleteButton&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.IButton&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the delete button, displayed in &quot;Delete&quot; mode. &lt;b&gt;Note:&lt;/b&gt; While the slot allows custom buttons, to match design guidelines, please use the &lt;code&gt;ui5-button&lt;/code&gt; component. &lt;b&gt;Note:&lt;/b&gt; When the slot is not present, a built-in delete button will be displayed.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;detail-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the user clicks on the detail button when type is &lt;code&gt;Detail&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;GroupHeaderListItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; The &lt;code&gt;ui5-li-groupheader&lt;/code&gt; is a special list item, used only to separate other list items into logical groups. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text alternative of the component. Note: If not provided a default text alternative will be set, if present. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selected &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the selected state of the &lt;code&gt;ListItem&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the text of the component. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/List/",
    "relUrl": "/playground/components/List/"
  },
  "144": {
    "id": "144",
    "title": "List Growing_ Button",
    "content": "&lt;!DOCTYPE html&gt; ui5-list / ui5-li List growing=&quot;Button&quot; New Items Voluptate do eu cupidatat elit est culpa. Reprehenderit eiusmod voluptate ex est dolor nostrud Lorem Lorem do nisi laborum veniam. Sint do non culpa aute occaecat labore ipsum veniam minim tempor est. Duis pariatur aute culpa irure ad excepteur pariatur culpa culpa ea duis occaecat aute irure. Ipsum velit culpa non exercitation ex laboris deserunt in eu non officia in. Laborum sunt aliqua labore cupidatat sunt labore. Laptop Lenovo IPhone 3 Discounted Items HP Monitor 24 Audio cabel DVD set",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/ListGrowing_Button/",
    "relUrl": "/playground/main/pages/ListGrowing_Button/"
  },
  "145": {
    "id": "145",
    "title": "List Growing_ Scroll",
    "content": "&lt;!DOCTYPE html&gt; ui5-list / ui5-li List growing=&quot;Scroll&quot; max-height: 10.5rem; New Items Voluptate do eu cupidatat elit est culpa. Reprehenderit eiusmod voluptate ex est dolor nostrud Lorem Lorem do nisi laborum veniam. Sint do non culpa aute occaecat labore ipsum veniam minim tempor est. Duis pariatur aute culpa irure ad excepteur pariatur culpa culpa ea duis occaecat aute irure. Ipsum velit culpa non exercitation ex laboris deserunt in eu non officia in. Laborum sunt aliqua labore cupidatat sunt labore. Laptop Lenovo IPhone 3 Discounted Items HP Monitor 24 Audio cabel DVD set List growing=&quot;Scroll&quot; max-height: 8rem; New Items Voluptate do eu cupidatat elit est culpa. Reprehenderit eiusmod voluptate ex est dolor nostrud Lorem Lorem do nisi laborum veniam. Sint do non culpa aute occaecat labore ipsum veniam minim tempor est. Duis pariatur aute culpa irure ad excepteur pariatur culpa culpa ea duis occaecat aute irure. Ipsum velit culpa non exercitation ex laboris deserunt in eu non officia in. Laborum sunt aliqua labore cupidatat sunt labore. Laptop Lenovo IPhone 3 Discounted Items HP Monitor 24 Audio cabel DVD set List growing=&quot;Scroll&quot; New Items Voluptate do eu cupidatat elit est culpa. Reprehenderit eiusmod voluptate ex est dolor nostrud Lorem Lorem do nisi laborum veniam. Sint do non culpa aute occaecat labore ipsum veniam minim tempor est. Duis pariatur aute culpa irure ad excepteur pariatur culpa culpa ea duis occaecat aute irure. Ipsum velit culpa non exercitation ex laboris deserunt in eu non officia in. Laborum sunt aliqua labore cupidatat sunt labore. Laptop Lenovo IPhone 3 Discounted Items HP Monitor 24 Audio cabel DVD set",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/ListGrowing_Scroll/",
    "relUrl": "/playground/main/pages/ListGrowing_Scroll/"
  },
  "146": {
    "id": "146",
    "title": "List_keyboard_support",
    "content": "&lt;!DOCTYPE html&gt; List UI5 Table Web Component The sample shows the keyboard navigation support of the Table To navigate between items use the [UP] and [DOWN] arrow keys To navigate within an item use the [TAB] and [SHIFT+TAB] keys Countries Export Argentina Bulgaria Click me UI5 link Click me China Argentina Bulgaria Click me UI5 link Click me China Test PAGE UP/DOWN 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/List_keyboard_support/",
    "relUrl": "/playground/main/pages/List_keyboard_support/"
  },
  "147": {
    "id": "147",
    "title": "List_test_page",
    "content": "&lt;!DOCTYPE html&gt; ui5-list / ui5-li List growing=&quot;Scroll&quot; scroll Laptop Lenovo IPhone 3 HP Monitor 24 Audio cabel DVD set HP Monitor 24 Audio cabel Last Item List growing=&quot;Scroll&quot; items don&#39;t overflow initially New Items Argentina Bulgaria China Portugal Argentina Bulgaria Argentina Argentina Argentina Argentina New Items Argentina Bulgaria Argentina Bulgaria China Portugal New Items Laptop HP Laptop Lenovo IPhone 3 Discounted Items HP Monitor 24 Audio cabel DVD set 0 Laptop HP Audio cabel DVD set Option #1 Option #2 Option #3 Option #1 Option #2 Option #3 Before button Export Argentina Click me UI5 link Disabled China After button List Title Here Avatar inside imageContent slot Inactive item Inactive item Inactive item Inactive item 0 Detail item Normal item item item Test aria item item IPhone 3 HP Monitor 24 Change empty item text Events within ui5-li-custom List Button 1 List Button 2 List Button 2 Open popup with List Test Laptop HP Audio cabel DVD set Link1",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/List_test_page/",
    "relUrl": "/playground/main/pages/List_test_page/"
  },
  "148": {
    "id": "148",
    "title": "Lit Key Function",
    "content": "&lt;!DOCTYPE html&gt; LitHTML key function test page",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/LitKeyFunction/",
    "relUrl": "/playground/main/pages/LitKeyFunction/"
  },
  "149": {
    "id": "149",
    "title": "Media Gallery",
    "content": "&lt;!DOCTYPE html&gt; ui5-media-gallery Switch theme: Fiori 3 Fiori 3 Dark Fiori 3 HCB Fiori 3 HCW Belize Belize HCB Belize HCW Horizon Layout preferences: Layout: Auto Vertical Horizontal Thumbnails menu: Menu horizontal align: Right Left Menu vertical align: Top Bottom Events: Last selected index: Call count &quot;selection-change&quot;: Clear Call count &quot;overflow-click&quot;: Call count &quot;display-area-click&quot;: MediaGallery with disabled items: Not found content: Not found thumbnail and content: Narrow container",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/MediaGallery/",
    "relUrl": "/playground/fiori/pages/MediaGallery/"
  },
  "150": {
    "id": "150",
    "title": "Media Gallery",
    "content": "MediaGallery v1.1.0 @ui5/webcomponents-fiori &lt;ui5-media-gallery&gt; Usage &lt;ui5-media-gallery show-all-thumbnails&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1000.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1010.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1022.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1030.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-2002.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-2026.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;/ui5-media-gallery&gt; MediaGallery with vertical layout &lt;ui5-media-gallery show-all-thumbnails layout=&quot;Vertical&quot;&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1000.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1010.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1022.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1030.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-2002.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-2026.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;/ui5-media-gallery&gt; MediaGallery with thumbnails on the right &lt;ui5-media-gallery show-all-thumbnails layout=&quot;Horizontal&quot; menu-horizontal-align=&quot;Right&quot;&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1000.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1010.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1022.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1030.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-2002.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-2026.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;/ui5-media-gallery&gt; MediaGallery item with separate image for its thumbnail &lt;ui5-media-gallery&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1000.jpg&quot;&gt; &lt;img src=&quot;../../../assets/images/HT-1000-small.jpg&quot; slot=&quot;thumbnail&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;/ui5-media-gallery&gt; MediaGallery item with video content &lt;ui5-media-gallery&gt; &lt;ui5-media-gallery-item layout=&quot;Wide&quot;&gt; &lt;iframe src=&quot;https://www.youtube.com/embed/GxGZG2fv6Aw&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt; &lt;img src=&quot;../../../assets/images/sap-logo-square.svg&quot; slot=&quot;thumbnail&quot; alt=&quot;SAP Video&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;/ui5-media-gallery&gt; MediaGallery with disabled content &lt;ui5-media-gallery&gt; &lt;ui5-media-gallery-item disabled&gt; &lt;img src=&quot;../../../assets/images/HT-1000.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1010.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;/ui5-media-gallery&gt; MediaGallery with initially selected item &lt;ui5-media-gallery&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1000.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item selected&gt; &lt;img src=&quot;../../../assets/images/HT-1010.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;/ui5-media-gallery&gt; MediaGallery with thumbnails overflow Item Details Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis quam lectus, tristique semper mi et, faucibus viverra metus. Quisque nec venenatis massa. Ut eu dolor a justo ornare feugiat. Morbi congue diam id enim porttitor, sit amet placerat nunc pulvinar. Vivamus eu feugiat justo. Ut eu lectus mauris. Aliquam erat volutpat. Vestibulum et enim sit amet ipsum tincidunt aliquet nec in dui. Sed dui est, hendrerit non sollicitudin quis, venenatis vel libero. Suspendisse sit amet lorem posuere, egestas neque eget, sodales ipsum. Donec sollicitudin leo ut risus tincidunt tincidunt. Ut vel nisl nisl. Cras leo odio, viverra a ante nec, cursus volutpat lectus. Cras ac metus nisi. Aliquam fermentum nec felis sit amet tristique. Nunc luctus a lacus non semper. Curabitur euismod tellus id massa mattis, in consectetur mi luctus. Mauris dignissim efficitur lobortis. Etiam sit amet nunc commodo, lacinia nisi sagittis, finibus nulla. Proin quis elementum eros. Ut facilisis lacinia viverra. Item Close &lt;div class=&quot;container&quot;&gt; &lt;ui5-media-gallery id=&quot;mediaGallery&quot; interactive-display-area&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1000.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1010.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1022.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1030.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-2002.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-2026.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;/ui5-media-gallery&gt; &lt;div class=&quot;details&quot;&gt; &lt;ui5-title level=&quot;H1&quot;&gt;Item Details&lt;/ui5-title&gt; Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis quam lectus, tristique semper mi et, faucibus viverra metus. Quisque nec venenatis massa. Ut eu dolor a justo ornare feugiat. Morbi congue diam id enim porttitor, sit amet placerat nunc pulvinar. Vivamus eu feugiat justo. Ut eu lectus mauris. Aliquam erat volutpat. Vestibulum et enim sit amet ipsum tincidunt aliquet nec in dui. Sed dui est, hendrerit non sollicitudin quis, venenatis vel libero. Suspendisse sit amet lorem posuere, egestas neque eget, sodales ipsum. Donec sollicitudin leo ut risus tincidunt tincidunt. Ut vel nisl nisl. Cras leo odio, viverra a ante nec, cursus volutpat lectus. Cras ac metus nisi. Aliquam fermentum nec felis sit amet tristique. Nunc luctus a lacus non semper. Curabitur euismod tellus id massa mattis, in consectetur mi luctus. Mauris dignissim efficitur lobortis. Etiam sit amet nunc commodo, lacinia nisi sagittis, finibus nulla. Proin quis elementum eros. Ut facilisis lacinia viverra. &lt;/div&gt; &lt;/div&gt; &lt;ui5-dialog id=&quot;mediaGalleryDialog&quot; header-text=&quot;Item&quot; stretch&gt; &lt;ui5-bar design=&quot;Header&quot; slot=&quot;header&quot;&gt; &lt;ui5-label&gt;Item&lt;/ui5-label&gt; &lt;/ui5-bar&gt; &lt;ui5-media-gallery show-all-thumbnails menu-horizontal-align=&quot;Right&quot;&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1000.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1010.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1022.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-1030.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-2002.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;ui5-media-gallery-item&gt; &lt;img src=&quot;../../../assets/images/HT-2026.jpg&quot;&gt; &lt;/ui5-media-gallery-item&gt; &lt;/ui5-media-gallery&gt; &lt;div slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt; &lt;div style=&quot;flex: 1;&quot;&gt;&lt;/div&gt; &lt;ui5-button id=&quot;closeDialogButton&quot;&gt;Close&lt;/ui5-button&gt; &lt;/div&gt; &lt;/ui5-dialog&gt; &lt;style&gt; @media (min-width: 1024px) { .container { display:grid; gap: 1rem; grid-template-columns: 1fr 1fr; } } &lt;/style&gt; &lt;script&gt; mediaGallery.addEventListener(&quot;overflow-click&quot;, function(event) { mediaGalleryDialog.show(); }); mediaGallery.addEventListener(&quot;display-area-click&quot;, function(event) { mediaGalleryDialog.show(); }); closeDialogButton.addEventListener(&quot;click&quot;, function() { mediaGalleryDialog.close(); }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-media-gallery component allows the user to browse through multimedia items. Currently, the supported items are images and videos. The items should be defined using the ui5-media-gallery-item component. The items are initially displayed as thumbnails. When the user selects a thumbnail, the corresponding item is displayed in larger size. The component is responsive by default and adjusts the position of the menu with respect to viewport size, but the application is able to further customize the layout via the provided API. Keyboard Handling The ui5-media-gallery provides advanced keyboard handling. When the thumbnails menu is focused the following keyboard shortcuts allow the user to navigate through the thumbnail items: [UP/DOWN] - Navigates up and down the items [HOME] - Navigates to first item [END] - Navigates to the last item [SPACE/ENTER] - Select an item &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/MediaGallery&quot;; import &quot;@ui5/webcomponents-fiori/dist/MediaGalleryItem&quot;; Properties/Attributes You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different. Name Type Default Value Description interactiveDisplayArea interactive-display-area boolean false If enabled, a display-area-click event is fired when the user clicks or taps on the display area. The display area is the central area that contains the enlarged content of the currently selected item. layout MediaGalleryLayout &quot;Auto&quot; Determines the layout of the component. Available options are: Auto Vertical Horizontal menuHorizontalAlign menu-horizontal-align MediaGalleryMenuHorizontalAlign &quot;Left&quot; Determines the horizontal alignment of the thumbnails menu vs. the central display area. Available options are: Left Right menuVerticalAlign menu-vertical-align MediaGalleryMenuVerticalAlign &quot;Bottom&quot; Determines the vertical alignment of the thumbnails menu vs. the central display area. Available options are: Top Bottom showAllThumbnails show-all-thumbnails boolean false If set to true, all thumbnails are rendered in a scrollable container. If false, only up to five thumbnails are rendered, followed by an overflow button that shows the count of the remaining thumbnails. Slots This Element provides slot(s). This means it can display its child nodes. Unless targeting the default slot, use the slot attribute to define the destination slot for each child. Text, along with HTML Elements with no slot attribute, goes the the default slot. Slot Type Description default HTMLElement [0..n] Defines the component items. Note: Only one selected item is allowed. Note: Use the ui5-media-gallery-item component to define the desired items. Events This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as addEventListener. Name Description display-area-click Fired when the display area is clicked. The display area is the central area that contains the enlarged content of the currently selected item. overflow-click Fired when the thumbnails overflow button is clicked. selection-change Fired when selection is changed by user interaction. item type: HTMLElement description: the selected item. &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; MediaGalleryItem Overview The ui5-media-gallery-item web component represents the items displayed in the ui5-media-gallery web component. Note: ui5-media-gallery-item is not supported when used outside of ui5-media-gallery. Keyboard Handling The ui5-media-gallery provides advanced keyboard handling. When focused, the user can use the following keyboard shortcuts in order to perform a navigation: [SPACE/ENTER/RETURN] - Trigger ui5-click event ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/MediaGalleryItem.js&quot;; (comes with ui5-media-gallery) Properties/Attributes You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different. Name Type Default Value Description disabled boolean false Defines whether the component is in disabled state. layout sap.ui.webc.fiori.types.MediaGalleryItemLayout &quot;Square&quot; Determines the layout of the item container. Available options are: Square Wide selected boolean false Defines the selected state of the component. Slots This Element provides slot(s). This means it can display its child nodes. Unless targeting the default slot, use the slot attribute to define the destination slot for each child. Text, along with HTML Elements with no slot attribute, goes the the default slot. Slot Type Description default HTMLElement Defines the content of the component. thumbnail HTMLElement Defines the content of the thumbnail. Privacy Policy Legal",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/MediaGallery/",
    "relUrl": "/playground/components/MediaGallery/"
  },
  "151": {
    "id": "151",
    "title": "Memory Leak",
    "content": "&lt;!DOCTYPE html&gt; Button How many date pickers to create Create+Open+Destroy Create Open Destroy",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/MemoryLeak/",
    "relUrl": "/playground/main/pages/MemoryLeak/"
  },
  "152": {
    "id": "152",
    "title": "Menu",
    "content": "&lt;!DOCTYPE html&gt; Menu Open Menu Clicked menu item text Text Direction Prevent &quot;before-open&quot; event Prevent &quot;before-close&quot; event open/opener Add opener Remove opener Toggle open Event logger",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Menu/",
    "relUrl": "/playground/main/pages/Menu/"
  },
  "153": {
    "id": "153",
    "title": "Menu",
    "content": "Menu v1.3.0 @ui5/webcomponents &lt;ui5-menu&gt; Basic Menu Open Menu &lt;ui5-button id=&quot;btnOpenBasic&quot;&gt;Open Menu&lt;/ui5-button&gt; &lt;br/&gt; &lt;ui5-menu id=&quot;menuBasic&quot;&gt; &lt;ui5-menu-item text=&quot;New File&quot; icon=&quot;add-document&quot;&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;New Folder&quot; icon=&quot;add-folder&quot; disabled&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Open&quot; icon=&quot;open-folder&quot; starts-section&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Close&quot;&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Preferences&quot; icon=&quot;action-settings&quot; starts-section&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Exit&quot; icon=&quot;journey-arrive&quot;&gt;&lt;/ui5-menu-item&gt; &lt;/ui5-menu&gt; &lt;script&gt; btnOpenBasic.addEventListener(&quot;click&quot;, function(event) { menuBasic.showAt(btnOpenBasic); }); &lt;/script&gt; Menu with Sub-menu items Open Menu &lt;ui5-button id=&quot;btnOpenSubs&quot;&gt;Open Menu&lt;/ui5-button&gt; &lt;br/&gt; &lt;ui5-menu id=&quot;menuSubs&quot;&gt; &lt;ui5-menu-item text=&quot;New File&quot; icon=&quot;add-document&quot;&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;New Folder&quot; icon=&quot;add-folder&quot; disabled&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Open&quot; icon=&quot;open-folder&quot; starts-section&gt; &lt;ui5-menu-item text=&quot;Open Locally&quot; icon=&quot;open-folder&quot;&gt; &lt;ui5-menu-item text=&quot;Open from C&quot;&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Open from D&quot;&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Open from E&quot;&gt;&lt;/ui5-menu-item&gt; &lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Open from Cloud&quot;&gt;&lt;/ui5-menu-item&gt; &lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Save&quot; icon=&quot;save&quot;&gt; &lt;ui5-menu-item text=&quot;Save Locally&quot; icon=&quot;save&quot;&gt; &lt;ui5-menu-item text=&quot;Save on C&quot; icon=&quot;save&quot;&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Save on D&quot; icon=&quot;save&quot;&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Save on E&quot; icon=&quot;save&quot;&gt;&lt;/ui5-menu-item&gt; &lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Save on Cloud&quot; icon=&quot;upload-to-cloud&quot;&gt;&lt;/ui5-menu-item&gt; &lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Close&quot;&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Preferences&quot; icon=&quot;action-settings&quot; starts-section&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Exit&quot; icon=&quot;journey-arrive&quot;&gt;&lt;/ui5-menu-item&gt; &lt;/ui5-menu&gt; &lt;script&gt; btnOpenSubs.addEventListener(&quot;click&quot;, function(event) { menuSubs.showAt(btnOpenSubs); }); &lt;/script&gt; Menu with additional text on menu items Open Menu &lt;ui5-button id=&quot;btnOpenAdditionalText&quot;&gt;Open Menu&lt;/ui5-button&gt; &lt;br/&gt; &lt;ui5-menu id=&quot;menuAdditionalText&quot;&gt; &lt;ui5-menu-item text=&quot;New File&quot; icon=&quot;add-document&quot; additional-text=&quot;Ctrl+N&quot;&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;New Folder&quot; icon=&quot;add-folder&quot; additional-text=&quot;Ctrl+F&quot; disabled&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Open&quot; icon=&quot;open-folder&quot; starts-section&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Close&quot;&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Preferences&quot; icon=&quot;action-settings&quot; starts-section&gt;&lt;/ui5-menu-item&gt; &lt;ui5-menu-item text=&quot;Exit&quot; icon=&quot;journey-arrive&quot; additional-text=&quot;Ctrl+X&quot;&gt;&lt;/ui5-menu-item&gt; &lt;/ui5-menu&gt; &lt;script&gt; btnOpenAdditionalText.addEventListener(&quot;click&quot;, function(event) { menuAdditionalText.showAt(btnOpenAdditionalText); }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; ui5-menu component represents a hierarchical menu structure. Usage ui5-menu contains ui5-menu-item components. An arbitrary hierarchy structure can be represented by recursively nesting menu items. Keyboard Handling The ui5-menu provides advanced keyboard handling. The user can use the following keyboard shortcuts in order to navigate trough the tree: &lt;ul&gt; &lt;li&gt;Arrow Up / Arrow Down - Navigates up and down the menu items that are currently visible.&lt;/li&gt; &lt;li&gt;Arrow Right, Space or Enter - Opens a sub-menu if there are menu items nested in the currently clicked menu item.&lt;/li&gt; &lt;li&gt;Arrow Left or Escape - Closes the currently opened sub-menu.&lt;/li&gt; &lt;/ul&gt; Note: if the text ditrection is set to Right-to-left (RTL), Arrow Right and Arrow Left functionality is swapped. ES6 Module Import import &quot;@ui5/webcomponents/dist/Menu.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; headerText &lt;br&gt; &lt;code&gt;header-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the header text of the menu (displayed on mobile). &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; open &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Indicates if the menu is open &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; opener &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;DOMReference&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the ID or DOM Reference of the element that the menu is shown at &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the items of this component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Use &lt;code&gt;ui5-menu-item&lt;/code&gt; for the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;after-close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired after the menu is closed. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;after-open&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired after the menu is opened. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;before-close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired before the menu is closed. This event can be cancelled, which will prevent the menu from closing. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;escPressed&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Indicates that &lt;code&gt;ESC&lt;/code&gt; key has triggered the event.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;before-open&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired before the menu is opened. This event can be cancelled, which will prevent the menu from opening. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;item-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when an item is being clicked. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; object &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The currently clicked menu item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;text&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The text of the currently clicked menu item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Closes the Menu.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;showAt&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Shows the Menu near the opener element.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;opener&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the element that the popover is shown at&lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;MenuItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; ui5-menu-item is the item to use inside a ui5-menu. An arbitrary hierarchy structure can be represented by recursively nesting menu items. Usage ui5-menu-item is an abstract element, representing a node in a ui5-menu. The menu itself is rendered as a list, and each ui5-menu-item is represented by a list item (ui5-li) in that list. Therefore, you should only use ui5-menu-item directly in your apps. The ui5-li list item is internal for the list, and not intended for public use. ES6 Module Import import &quot;@ui5/webcomponents/dist/MenuItem.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.7.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; additionalText &lt;br&gt; &lt;code&gt;additional-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;additionalText&lt;/code&gt;, displayed in the end of the menu item. &lt;b&gt;Note:&lt;/b&gt; The additional text would not be displayed if the item has a submenu. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.8.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether &lt;code&gt;ui5-menu-item&lt;/code&gt; is in disabled state. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A disabled &lt;code&gt;ui5-menu-item&lt;/code&gt; is noninteractive. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options. &lt;br&gt;&lt;br&gt; &lt;b&gt;* Example:&lt;/b&gt; See all the available icons in the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; startsSection &lt;br&gt; &lt;code&gt;starts-section&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether a visual separator should be rendered before the item. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the tree item. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.IMenuItem [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the items of this component.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Menu/",
    "relUrl": "/playground/components/Menu/"
  },
  "154": {
    "id": "154",
    "title": "Message Page",
    "content": "&lt;!DOCTYPE html&gt; Message Page No matching items found. Check the filter settings.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/MessagePage/",
    "relUrl": "/playground/main/pages/MessagePage/"
  },
  "155": {
    "id": "155",
    "title": "Message Strip",
    "content": "&lt;!DOCTYPE html&gt; MessageStrip Hello World! Default (Information) with default icon and close button: Negative with default icon and close button: Warning with default icon and close button: Positive with default icon and close button: Information with default icon. Ea mollit nulla laborum et fugiat nulla excepteur ea. Duis et dolor enim Lorem laboris adipisicing cillum quis proident dolor veniam voluptate. Nostrud dolore ipsum anim voluptate enim dolore eiusmod aliqua et. Est eu ex dolor ea ipsum. Adipisicing duis aliquip ullamco culpa dolore exercitation ullamco cillum irure. Ea mollit nulla laborum et fugiat nulla excepteur ea. Duis et dolor enim Lorem laboris adipisicing cillum quis proident dolor veniam voluptate. Nostrud dolore ipsum anim voluptate enim dolore eiusmod aliqua et. Est eu ex dolor ea ipsum. Adipisicing duis aliquip ullamco culpa dolore exercitation ullamco cillum irure. Ea mollit nulla laborum et fugiat nulla excepteur ea. Duis et dolor enim Lorem laboris adipisicing cillum quis proident dolor veniam voluptate. Nostrud dolore ipsum anim voluptate enim dolore eiusmod aliqua et. Est eu ex dolor ea ipsum. Adipisicing duis aliquip ullamco culpa dolore exercitation ullamco cillum irure. Ea mollit nulla laborum et fugiat nulla excepteur ea. Duis et dolor enim Lorem laboris adipisicing cillum quis proident dolor veniam voluptate. Nostrud dolore ipsum anim voluptate enim dolore eiusmod aliqua et. Est eu ex dolor ea ipsum. Adipisicing duis aliquip ullamco culpa dolore exercitation ullamco cillum irure. Custom icon Custom icon",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/MessageStrip/",
    "relUrl": "/playground/main/pages/MessageStrip/"
  },
  "156": {
    "id": "156",
    "title": "Message Strip",
    "content": "MessageStrip v0.9.0 @ui5/webcomponents &lt;ui5-message-strip&gt; MessageStrip Information MessageStrip Positive MessageStrip Negative MessageStrip Warning MessageStrip &lt;ui5-message-strip design=&quot;Information&quot;&gt;Information MessageStrip&lt;/ui5-message-strip&gt; &lt;ui5-message-strip design=&quot;Positive&quot;&gt;Positive MessageStrip&lt;/ui5-message-strip&gt; &lt;ui5-message-strip design=&quot;Negative&quot;&gt;Negative MessageStrip&lt;/ui5-message-strip&gt; &lt;ui5-message-strip design=&quot;Warning&quot;&gt;Warning MessageStrip&lt;/ui5-message-strip&gt; &lt;script&gt; document.querySelectorAll(&quot;ui5-message-strip&quot;).forEach(function(messageStrip) { messageStrip.addEventListener(&quot;close&quot;, function() { messageStrip.parentNode.removeChild(messageStrip); }); }); &lt;/script&gt; MessageStrip With No Close Button Information MessageStrip With No Close Button Positive MessageStrip With No Close Button Negative MessageStrip With No Close Button Warning MessageStrip With No Close Button &lt;ui5-message-strip design=&quot;Information&quot; hide-close-button&gt;Information MessageStrip With No Close Button&lt;/ui5-message-strip&gt; &lt;ui5-message-strip design=&quot;Positive&quot; hide-close-button&gt;Positive MessageStrip With No Close Button&lt;/ui5-message-strip&gt; &lt;ui5-message-strip design=&quot;Negative&quot; hide-close-button&gt;Negative MessageStrip With No Close Button&lt;/ui5-message-strip&gt; &lt;ui5-message-strip design=&quot;Warning&quot; hide-close-button&gt;Warning MessageStrip With No Close Button&lt;/ui5-message-strip&gt; MessageStrip With No Icon Information MessageStrip With No Icon Positive MessageStrip With No Icon Negative MessageStrip With No Icon Warning MessageStrip With No Icon &lt;ui5-message-strip design=&quot;Information&quot; hide-icon&gt;Information MessageStrip With No Icon&lt;/ui5-message-strip&gt; &lt;ui5-message-strip design=&quot;Positive&quot; hide-icon&gt;Positive MessageStrip With No Icon&lt;/ui5-message-strip&gt; &lt;ui5-message-strip design=&quot;Negative&quot; hide-icon&gt;Negative MessageStrip With No Icon&lt;/ui5-message-strip&gt; &lt;ui5-message-strip design=&quot;Warning&quot; hide-icon&gt;Warning MessageStrip With No Icon&lt;/ui5-message-strip&gt; &lt;script&gt; document.querySelectorAll(&quot;ui5-message-strip&quot;).forEach(function(messageStrip) { messageStrip.addEventListener(&quot;close&quot;, function() { messageStrip.parentNode.removeChild(messageStrip); }); }); &lt;/script&gt; Dynamic Message Strip Generator Generate MessageStrip &lt;div class=&quot;wrapper&quot;&gt; &lt;ui5-button id=&quot;button1&quot;&gt;Generate MessageStrip&lt;/ui5-button&gt; &lt;/div&gt; &lt;script&gt; const container = document.querySelector(&quot;.wrapper&quot;); const button = document.querySelector(&quot;#button1&quot;); button.addEventListener(&quot;click&quot;, function(event) { let invisibleMessage = window[&quot;sap-ui-webcomponents-bundle&quot;].invisibleMessage; const messageStrip = document.querySelector(&quot;#msgStrip&quot;); const types = [&quot;Information&quot;, &quot;Warning&quot;, &quot;Negative&quot;, &quot;Positive&quot;]; const text = &quot;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua ut enim ad minim veniam, quis nostrud exercitation ullamco.&quot;; let type = types[Math.round(Math.random() * 3)]; if (messageStrip) { container.removeChild(messageStrip); } let generatedMsgStrip = document.createElement(&quot;ui5-message-strip&quot;); generatedMsgStrip.id = &quot;msgStrip&quot;; generatedMsgStrip.design = type; generatedMsgStrip.textContent = text; invisibleMessage.announce(`New Information Bar of type ${type} ${text}`, &quot;Assertive&quot;); container.appendChild(generatedMsgStrip); }); &lt;/script&gt; Custom MessageStrip You have new message. Successfull login! Access denied! Update is required. Custom icon Custom animated gif &lt;ui5-message-strip design=&quot;Information&quot; style=&quot;width: 200px;&quot; hide-icon hide-close-button&gt;You have new message.&lt;/ui5-message-strip&gt; &lt;ui5-message-strip design=&quot;Positive&quot; style=&quot;width: 200px;&quot; hide-close-button&gt;Successfull login!&lt;/ui5-message-strip&gt; &lt;ui5-message-strip design=&quot;Negative&quot; style=&quot;width: 200px;&quot; hide-icon&gt;Access denied!&lt;/ui5-message-strip&gt; &lt;ui5-message-strip design=&quot;Warning&quot; style=&quot;width: 200px;&quot;&gt;Update is required.&lt;/ui5-message-strip&gt; &lt;ui5-message-strip design=&quot;Warning&quot; style=&quot;width: 200px;&quot;&gt;&lt;ui5-icon name=&quot;palette&quot; slot=&quot;icon&quot;&gt;&lt;/ui5-icon&gt;Custom icon&lt;/ui5-message-strip&gt; &lt;ui5-message-strip design=&quot;Positive&quot; style=&quot;width: 200px;&quot;&gt;&lt;img src=&quot;../../../assets/images/loading.gif&quot; width=&quot;16&quot; height=&quot;16&quot; slot=&quot;icon&quot;&gt;Custom animated gif&lt;/ui5-message-strip&gt; &lt;script&gt; document.querySelectorAll(&quot;ui5-message-strip&quot;).forEach(function(messageStrip) { messageStrip.addEventListener(&quot;close&quot;, function() { messageStrip.parentNode.removeChild(messageStrip); }); }); &lt;/script&gt; &lt;script&gt; [].slice.call(document.querySelectorAll(&quot;ui5-message-strip&quot;)).forEach(function(messageStrip) { messageStrip.addEventListener(&quot;close&quot;, function() { messageStrip.parentNode.removeChild(messageStrip); }); }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-message-strip component enables the embedding of app-related messages. It displays 4 designs of messages, each with corresponding semantic color and icon: Information, Positive, Warning and Negative. Each message can have a Close button, so that it can be removed from the UI, if needed. Usage For the ui5-message-strip component, you can define whether it displays an icon in the beginning and a close button. Moreover, its size and background can be controlled with CSS. Keyboard Handling Fast Navigation This component provides a build in fast navigation group which can be used via F6 / Shift + F6 or Ctrl + Alt(Option) + Down / Ctrl + Alt(Option) + Up. In order to use this functionality, you need to import the following module: import &quot;@ui5/webcomponents-base/dist/features/F6Navigation.js&quot; ES6 Module Import import &quot;@ui5/webcomponents/dist/MessageStrip&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; design &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;MessageStripDesign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Information&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the component type. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Available options are &lt;code&gt;&quot;Information&quot;&lt;/code&gt;, &lt;code&gt;&quot;Positive&quot;&lt;/code&gt;, &lt;code&gt;&quot;Negative&quot;&lt;/code&gt;, and &lt;code&gt;&quot;Warning&quot;&lt;/code&gt;. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideCloseButton &lt;br&gt; &lt;code&gt;hide-close-button&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the MessageStrip renders close button. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideIcon &lt;br&gt; &lt;code&gt;hide-icon&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the MessageStrip will show an icon in the beginning. You can directly provide an icon with the &lt;code&gt;icon&lt;/code&gt; slot. Otherwise, the default icon for the type will be used. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the text of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;icon&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content to be displayed as graphical element within the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If no icon is given, the default icon for the component type will be used. The SAP-icons font provides numerous options. &lt;br&gt;&lt;br&gt; See all the available icons in the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the close button is pressed either with a click/tap or by using the Enter or Space key. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/MessageStrip/",
    "relUrl": "/playground/components/MessageStrip/"
  },
  "157": {
    "id": "157",
    "title": "Multi Combo Box",
    "content": "&lt;!DOCTYPE html&gt; MultiComboBox test page Predefined value Focus MultiComboBox Validating input and predefined allow-custom-values and predefined value Validating input and placeholder disabled and placeholder value state success value state information Information message. This is a Link. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3. value state warning value state error readonly Readonly with value state MultiComboBox with items MultiComboBox without type ahead MultiComboBox with more items MultiComboBox with validation MultiComboBox n more MultiComboBox with validation MultiComboBox with grouping SelectionChange events emitted: Fired event: Parameters Count: Event call count: Reset fields MultiComboBox in Compact Two-column items Placeholder test Toggle Item Toggle Item Add Tokens",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/MultiComboBox/",
    "relUrl": "/playground/main/pages/MultiComboBox/"
  },
  "158": {
    "id": "158",
    "title": "Multi Combo Box",
    "content": "MultiComboBox v0.11.0 @ui5/webcomponents &lt;ui5-multi-combobox&gt; Basic MultiComboBox &lt;ui5-multi-combobox placeholder=&quot;Type your value&quot;&gt; &lt;ui5-mcb-item selected text=&quot;UI5&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;/ui5-multi-combobox&gt; &lt;ui5-multi-combobox readonly value=&quot;Readonly combo&quot;&gt; &lt;ui5-mcb-item selected text=&quot;UI5&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;/ui5-multi-combobox&gt; &lt;ui5-multi-combobox disabled value=&quot;Disabled combo&quot;&gt; &lt;ui5-mcb-item selected text=&quot;UI5&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;/ui5-multi-combobox&gt; MultiComboBox with items &lt;ui5-multi-combobox placeholder=&quot;Choose your countries&quot;&gt; &lt;ui5-mcb-item selected text=&quot;Argentina&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Bulgaria&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Denmark&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;England&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Albania&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Morocco&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Portugal&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Germany&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Philippines&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Paraguay&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;/ui5-multi-combobox&gt; MultiComboBox with free text input &lt;ui5-multi-combobox placeholder=&quot;Choose your countries&quot; allow-custom-values&gt; &lt;ui5-mcb-item text=&quot;Argentina&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item selected text=&quot;Bulgaria&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Denmark&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item selected text=&quot;England&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Albania&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Morocco&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Portugal&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item selected text=&quot;Germany&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Philippines&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Paraguay&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;/ui5-multi-combobox&gt; MultiComboBox with Value State &lt;ui5-multi-combobox value-state=&quot;Success&quot;&gt; &lt;ui5-mcb-item text=&quot;Fortune&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Luck&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item selected text=&quot;Success&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;/ui5-multi-combobox&gt; &lt;ui5-multi-combobox value-state=&quot;Warning&quot;&gt; &lt;ui5-mcb-item text=&quot;Attention&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Caution&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item selected text=&quot;Warning&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;/ui5-multi-combobox&gt; &lt;ui5-multi-combobox value-state=&quot;Error&quot;&gt; &lt;ui5-mcb-item text=&quot;Fault&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item selected text=&quot;Error&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Mistake&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;/ui5-multi-combobox&gt; MultiComboBox with Grouping of Items &lt;ui5-multi-combobox placeholder=&quot;Select a country&quot;&gt; &lt;ui5-mcb-group-item text=&quot;Asia&quot;&gt;&lt;/ui5-mcb-group-item&gt; &lt;ui5-mcb-item text=&quot;Afghanistan&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;China&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;India&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Indonesia&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-group-item text=&quot;Europe&quot;&gt;&lt;/ui5-mcb-group-item&gt; &lt;ui5-mcb-item text=&quot;Austria&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Bulgaria&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Germany&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Italy&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-group-item text=&quot;North America&quot;&gt;&lt;/ui5-mcb-group-item&gt; &lt;ui5-mcb-item text=&quot;Canada&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Granada&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;Haiti&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;ui5-mcb-item text=&quot;United States&quot;&gt;&lt;/ui5-mcb-item&gt; &lt;/ui5-multi-combobox&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-multi-combobox component consists of a list box with items and a text field allowing the user to either type a value directly into the text field, or choose from the list of existing items. The drop-down list is used for selecting and filtering values, it enables users to select one or more options from a predefined list. The control provides an editable input field to filter the list, and a dropdown arrow to expand/collapse the list of available options. The options in the list have checkboxes that permit multi-selection. Entered values are displayed as tokens. &lt;h3&gt;Structure&lt;/h3&gt; The ui5-multi-combobox consists of the following elements: &lt;ul&gt; &lt;li&gt; Tokenizer - a list of tokens with selected options. &lt;li&gt; Input field - displays the selected option/s as token/s. Users can type to filter the list. &lt;li&gt; Drop-down arrow - expands collapses the option list.&lt;/li&gt; &lt;li&gt; Option list - the list of available options.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Keyboard Handling&lt;/h3&gt; The ui5-multi-combobox provides advanced keyboard handling. Picker If the ui5-multi-combobox is focused, you can open or close the drop-down by pressing F4, ALT+UP or ALT+DOWN keys. Once the drop-down is opened, you can use the UP and DOWN arrow keys to navigate through the available options and select one by pressing the Space or Enter keys. Tokens Left/Right arrow keys - moves the focus selection form the currently focused token to the previous/next one (if available). Delete - deletes the token and focuses the previous token. Backspace - deletes the token and focus the next token. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-multi-combobox exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;token-{index} - Used to style each token(where token-0 corresponds to the first item)&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/MultiComboBox&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.4.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.4.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; allowCustomValues &lt;br&gt; &lt;code&gt;allow-custom-values&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the user input will be prevented, if no matching item has been found &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is in disabled state. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A disabled component is completely noninteractive. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; filter &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;StartsWithPerTerm&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the filter type of the component. Available options are: &lt;code&gt;StartsWithPerTerm&lt;/code&gt;, &lt;code&gt;StartsWith&lt;/code&gt;, &lt;code&gt;Contains&lt;/code&gt; and &lt;code&gt;None&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; noTypeahead &lt;br&gt; &lt;code&gt;no-typeahead&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the value will be autcompleted to match an item &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.4.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; open (readonly) &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Indicates whether the dropdown is open. True if the dropdown is open, false otherwise. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.5&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; placeholder &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a short hint intended to aid the user with data entry when the component has no value. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; readonly &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is read-only. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A read-only component is not editable, but still provides visual feedback upon user interaction. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; required &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is required. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.5&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The property is updated upon typing. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; valueState &lt;br&gt; &lt;code&gt;value-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value state of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Success&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Information&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the component items.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;icon&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the icon to be displayed in the component.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;valueStateMessage&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the value state message that will be displayed as pop up under the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If not specified, a default text (in the respective language) will be displayed. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;valueStateMessage&lt;/code&gt; would be displayed, when the component is in &lt;code&gt;Information&lt;/code&gt;, &lt;code&gt;Warning&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt; value state.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the input operation has finished by pressing Enter or on focusout. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;input&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the value of the component changes at each keystroke. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;open-change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the dropdown is opened or closed. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.5&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;selection-change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when selection is changed by user interaction in &lt;code&gt;SingleSelect&lt;/code&gt; and &lt;code&gt;MultiSelect&lt;/code&gt; modes. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;items&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Array &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; an array of the selected items.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;MultiComboBoxItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; The &lt;code&gt;ui5-mcb-item&lt;/code&gt; represents the item for a &lt;code&gt;ui5-multi-combobox&lt;/code&gt;. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selected &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the selected state of the component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; additionalText &lt;br&gt; &lt;code&gt;additional-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the additional text of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.11&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the component. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;MultiComboBoxGroupItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; The &lt;code&gt;ui5-mcb-group-item&lt;/code&gt; is type of suggestion item, that can be used to split the &lt;code&gt;ui5-multi-combobox&lt;/code&gt; suggestions into groups. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the component. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/MultiComboBox/",
    "relUrl": "/playground/components/MultiComboBox/"
  },
  "159": {
    "id": "159",
    "title": "Multi Input",
    "content": "&lt;!DOCTYPE html&gt; ui5-multi-input Basic API Empty Multi Input Multi Input with Value Help Icon Multi Input with Value Help Icon and a custom icon Multi Input with 1 token Readonly Multi Input with tokens Multi Input with 11 tokens (overflowing) Multi Input with 11 tokens (overflowing) and value help icon Value States Multi Input - Success Multi Input - Information Information message. This is a Link. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3. Multi Input - Warning Multi Input - Error Tokens Multi Input without tokens Add more tokens Multi Input with 1 token Add more tokens Multi Input with 2 tokens Multi Input with 5 tokens Add more tokens Tokens + Suggestions Save Cancel Token is already in the list Test value-help-trigger with F4 and Alt + ArrowUp/Down MultiInput with tokens with custom icon Eventing Event: Count: Event target text:",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/MultiInput/",
    "relUrl": "/playground/main/pages/MultiInput/"
  },
  "160": {
    "id": "160",
    "title": "Multi Input",
    "content": "Multi Input @ui5/webcomponents &lt;ui5-multi-input&gt; Basic Multi Input &lt;ui5-multi-input value=&quot;basic input&quot;&gt;&lt;/ui5-multi-input&gt; &lt;ui5-multi-input show-value-help-icon value=&quot;value help icon&quot;&gt;&lt;/ui5-multi-input&gt; Multi Input with tokens &lt;ui5-multi-input&gt; &lt;ui5-token slot=&quot;tokens&quot; text=&quot;Bulgaria&quot;&gt;&lt;/ui5-token&gt; &lt;/ui5-multi-input&gt; &lt;ui5-multi-input&gt; &lt;ui5-token slot=&quot;tokens&quot; text=&quot;Argentina&quot;&gt;&lt;/ui5-token&gt; &lt;ui5-token slot=&quot;tokens&quot; text=&quot;Bulgaria&quot;&gt;&lt;/ui5-token&gt; &lt;ui5-token slot=&quot;tokens&quot; text=&quot;England&quot;&gt;&lt;/ui5-token&gt; &lt;ui5-token slot=&quot;tokens&quot; text=&quot;Finland&quot;&gt;&lt;/ui5-token&gt; &lt;ui5-token slot=&quot;tokens&quot; text=&quot;Germany&quot;&gt;&lt;/ui5-token&gt; &lt;ui5-token slot=&quot;tokens&quot; text=&quot;Hungary&quot;&gt;&lt;/ui5-token&gt; &lt;ui5-token slot=&quot;tokens&quot; text=&quot;Italy&quot;&gt;&lt;/ui5-token&gt; &lt;ui5-token slot=&quot;tokens&quot; text=&quot;Luxembourg&quot;&gt;&lt;/ui5-token&gt; &lt;ui5-token slot=&quot;tokens&quot; text=&quot;Mexico&quot;&gt;&lt;/ui5-token&gt; &lt;ui5-token slot=&quot;tokens&quot; text=&quot;Philippines&quot;&gt;&lt;/ui5-token&gt; &lt;ui5-token slot=&quot;tokens&quot; text=&quot;Sweden&quot;&gt;&lt;/ui5-token&gt; &lt;ui5-token slot=&quot;tokens&quot; text=&quot;USA&quot;&gt;&lt;/ui5-token&gt; &lt;/ui5-multi-input&gt; Multi Input and token creation onChange Token is already in the list &lt;ui5-multi-input show-suggestions id=&quot;token-unique&quot; style=&quot;width: 50%&quot;&gt; &lt;div slot=&quot;valueStateMessage&quot;&gt;Token is already in the list&lt;/div&gt; &lt;ui5-suggestion-item text=&quot;Argentina&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;ui5-suggestion-item text=&quot;Bulgaria&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;ui5-suggestion-item text=&quot;England&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;ui5-suggestion-item text=&quot;Finland&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;ui5-suggestion-item text=&quot;Germany&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;ui5-suggestion-item text=&quot;Hungary&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;ui5-suggestion-item text=&quot;Italy&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;ui5-suggestion-item text=&quot;Luxembourg&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;ui5-suggestion-item text=&quot;Mexico&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;ui5-suggestion-item text=&quot;Philippines&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;ui5-suggestion-item text=&quot;Sweden&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;ui5-suggestion-item text=&quot;USA&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;/ui5-multi-input&gt; &lt;script&gt; var createTokenFromText = function (text) { var token = document.createElement(&quot;ui5-token&quot;); token.setAttribute(&quot;text&quot;, text); token.setAttribute(&quot;slot&quot;, &quot;tokens&quot;); return token; }; document.getElementById(&quot;token-unique&quot;).addEventListener(&quot;token-delete&quot;, function (event) { const token = event.detail?.token; token &amp;&amp; token.remove(); }); document.getElementById(&quot;token-unique&quot;).addEventListener(&quot;change&quot;, function (event) { if (!event.target.value) { return; } var isDuplicate = event.target.tokens.some(function(token) { return token.text === event.target.value }); if (isDuplicate) { event.target.valueState = &quot;Error&quot;; setTimeout(function () { event.target.valueState = &quot;Normal&quot;; }, 2000); return; } event.target.appendChild(createTokenFromText(event.target.value)); event.target.value = &quot;&quot;; }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3&gt;Overview&lt;/h3&gt; A &lt;code&gt;ui5-multi-input&lt;/code&gt; field allows the user to enter multiple values, which are displayed as &lt;code&gt;ui5-token&lt;/code&gt;. User can choose interaction for creating tokens. Fiori Guidelines say that user should create tokens when: &lt;ul&gt; &lt;li&gt;Type a value in the input and press enter or focus out the input field (change event is fired) &lt;li&gt;Select a value from the suggestion list&lt;/li&gt; (suggestion-item-select event is fired) &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/MultiInput&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showValueHelpIcon &lt;br&gt; &lt;code&gt;show-value-help-icon&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether a value help icon will be visualized in the end of the input. Pressing the icon will fire &lt;code&gt;value-help-trigger&lt;/code&gt; event. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the input. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is in disabled state. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A disabled component is completely noninteractive. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; maxlength &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Sets the maximum number of characters available in the input field. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; This property is not compatible with the ui5-input type InputType.Number. If the ui5-input type is set to Number, the maxlength value is ignored. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.5&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; name &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the name with which the component will be submitted in an HTML form. &lt;br&gt;&lt;br&gt; &lt;b&gt;Important:&lt;/b&gt; For the &lt;code&gt;name&lt;/code&gt; property to have effect, you must add the following import to your project: &lt;code&gt;import &quot;@ui5/webcomponents/dist/features/InputElementsFormSupport.js&quot;;&lt;/code&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When set, a native &lt;code&gt;input&lt;/code&gt; HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; noTypeahead &lt;br&gt; &lt;code&gt;no-typeahead&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the value will be autcompleted to match an item &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.4.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; placeholder &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a short hint intended to aid the user with data entry when the component has no value. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; previewItem (readonly) &lt;br&gt; &lt;code&gt;preview-item&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;IInputSuggestionItem|null&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; The suggestion item on preview. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; readonly &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is read-only. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A read-only component is not editable, but still provides visual feedback upon user interaction. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; required &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is required. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.3&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showClearIcon &lt;br&gt; &lt;code&gt;show-clear-icon&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the clear icon of the input will be shown. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.2.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showSuggestions &lt;br&gt; &lt;code&gt;show-suggestions&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component should show suggestions, if such are present. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; You need to import the &lt;code&gt;InputSuggestions&lt;/code&gt; module from &lt;code&gt;&quot;@ui5/webcomponents/dist/features/InputSuggestions.js&quot;&lt;/code&gt; to enable this functionality. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; type &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;InputType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Text&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the HTML type of the component. Available options are: &lt;code&gt;Text&lt;/code&gt;, &lt;code&gt;Email&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;Password&lt;/code&gt;, &lt;code&gt;Tel&lt;/code&gt;, and &lt;code&gt;URL&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Notes:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;The particular effect of this property differs depending on the browser and the current language settings, especially for type &lt;code&gt;Number&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;The property is mostly intended to be used with touch devices that use different soft keyboard layouts depending on the given input type.&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The property is updated upon typing. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; valueState &lt;br&gt; &lt;code&gt;value-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value state of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Success&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Information&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;tokens&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the component tokens.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the suggestion items. &lt;br&gt;&lt;br&gt; Example: &lt;br&gt;&lt;br&gt; &amp;lt;ui5-input show-suggestions&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;ui5-suggestion-item text=&quot;Item #1&quot;&gt;&amp;lt;/ui5-suggestion-item&gt;&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;ui5-suggestion-item text=&quot;Item #2&quot;&gt;&amp;lt;/ui5-suggestion-item&gt;&lt;br&gt; &amp;lt;/ui5-input&gt; &lt;br&gt; &lt;ui5-input show-suggestions&gt; &lt;ui5-suggestion-group-item text=&quot;Group #1&quot;&gt;&lt;/ui5-suggestion-group-item&gt; &lt;ui5-suggestion-item text=&quot;Item #1&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;ui5-suggestion-item text=&quot;Item #2&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;ui5-suggestion-group-item text=&quot;Group #2&quot;&gt;&lt;/ui5-suggestion-group-item&gt; &lt;ui5-suggestion-item text=&quot;Item #3&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;ui5-suggestion-item text=&quot;Item #4&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;/ui5-input&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The suggestions would be displayed only if the &lt;code&gt;showSuggestions&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;&amp;lt;ui5-suggestion-item&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;ui5-suggestion-group-item&amp;gt;&lt;/code&gt; are recommended to be used as suggestion items. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Importing the Input Suggestions Support feature: &lt;br&gt; &lt;code&gt;import &quot;@ui5/webcomponents/dist/features/InputSuggestions.js&quot;;&lt;/code&gt; &lt;br&gt; automatically imports the &lt;code&gt;&amp;lt;ui5-suggestion-item&gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;ui5-suggestion-group-item&gt;&lt;/code&gt; for your convenience.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;icon&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the icon to be displayed in the component.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;valueStateMessage&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the value state message that will be displayed as pop up under the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If not specified, a default text (in the respective language) will be displayed. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;valueStateMessage&lt;/code&gt; would be displayed, when the component is in &lt;code&gt;Information&lt;/code&gt;, &lt;code&gt;Warning&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt; value state. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If the component has &lt;code&gt;suggestionItems&lt;/code&gt;, the &lt;code&gt;valueStateMessage&lt;/code&gt; would be displayed as part of the same popover, if used on desktop, or dialog - on phone.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;token-delete&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when a token is about to be deleted. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;token&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; deleted token.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;value-help-trigger&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the value help icon is pressed and F4 or ALT/OPTION + ARROW_UP/ARROW_DOWN keyboard keys are used. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the input operation has finished by pressing Enter or on focusout. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;input&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the value of the component changes at each keystroke, and when a suggestion item has been selected. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;suggestion-item-preview&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the user navigates to a suggestion item via the ARROW keys, as a preview, before the final selection. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.8&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The previewed suggestion item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;targetRef&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The DOM ref of the suggestion item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;suggestion-item-select&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when a suggestion item, that is displayed in the suggestion popup, is selected. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The selected item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;openPicker&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Manually opens the suggestions popover, assuming suggestions are enabled. Items must be preloaded for it to open.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;Token&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; Tokens are small items of information (similar to tags) that mainly serve to visualize previously selected items. ES6 Module Import import &quot;@ui5/webcomponents/dist/Token.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; readonly &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is read-only. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A read-only component can not be deleted or selected, but still provides visual feedback upon user interaction. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selected &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is selected or not. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the token. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;closeIcon&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.IIcon&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the close icon for the token. If nothing is provided to this slot, the default close icon will be used. Accepts &lt;code&gt;ui5-icon&lt;/code&gt;.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;select&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the the component is selected by user interaction with mouse or by clicking space. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/MultiInput/",
    "relUrl": "/playground/components/MultiInput/"
  },
  "161": {
    "id": "161",
    "title": "Multi Input_ Suggestions",
    "content": "&lt;!DOCTYPE html&gt; ui5-multi-input Tokens + Suggestions Save Cancel Token Creation on enter or focus out Token Creation onChange (unique) Token is already in the list",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/MultiInput_Suggestions/",
    "relUrl": "/playground/main/pages/MultiInput_Suggestions/"
  },
  "162": {
    "id": "162",
    "title": "Notification List Group Item",
    "content": "&lt;!DOCTYPE html&gt; NotificationListGroupItem And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. John Doe 2 Days Other stuff And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days Short description Patricia Clarck 3 Days . With a very long description - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. John SMith 3 Days",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/NotificationListGroupItem/",
    "relUrl": "/playground/fiori/pages/NotificationListGroupItem/"
  },
  "163": {
    "id": "163",
    "title": "Notification List Group Item",
    "content": "NotificationListGroupItem v1.0.0-rc.8 @ui5/webcomponents-fiori &lt;ui5-li-notification-group&gt; NotificationListGroupItem And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days &lt;ui5-list id=&quot;myList&quot; header-text=&quot;Notifications grouped&quot;&gt; &lt;ui5-li-notification-group show-close show-counter title-text=&quot;Orders&quot; priority=&quot;High&quot; &gt; &lt;ui5-li-notification show-close title-text=&quot;New order (#2525) With a very long title - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc.&quot; priority=&quot;High&quot; &gt; ... &lt;/ui5-li-notification&gt; &lt;ui5-li-notification show-close title-text=&quot;New order (#2526) With a very long title - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc.&quot; priority=&quot;High&quot; &gt; ... &lt;/ui5-li-notification&gt; &lt;ui5-notification-action icon=&quot;accept&quot; text=&quot;Accept All&quot; slot=&quot;actions&quot;&gt;&lt;/ui5-notification-action&gt; &lt;ui5-notification-action icon=&quot;message-error&quot; text=&quot;Reject All&quot; slot=&quot;actions&quot;&gt;&lt;/ui5-notification-action&gt; &lt;/ui5-li-notification-group&gt; ... &lt;/ui5-list&gt; NotificationListGroupItem In ShellBar And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days &lt;ui5-shellbar id=&quot;shellbar&quot; primary-title=&quot;Corporate Portal&quot; logo=&quot;../../../assets/images/sap-logo-svg.svg&quot; show-notifications notifications-count=&quot;6&quot; &gt; &lt;/ui5-shellbar&gt; &lt;ui5-popover id=&quot;notificationsPopover&quot; style=&quot;max-width: 400px&quot; placement-type=&quot;Bottom&quot; horizontal-align=&quot;Right&quot; &gt; &lt;ui5-list header-text=&quot;Notifications&quot;&gt; &lt;ui5-li-notification-group show-close show-counter title-text=&quot;Orders&quot; priority=&quot;High&quot; &gt; &lt;ui5-li-notification show-close title-text=&quot;New order (#2525) With a very long title - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc.&quot; &gt; And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. &lt;ui5-avatar slot=&quot;avatar&quot; size=&quot;XS&quot;&gt; &lt;img src=&quot;./img/man_avatar_1.png&quot; /&gt; &lt;/ui5-avatar&gt; &lt;span slot=&quot;footnotes&quot;&gt;John Doe&lt;/span&gt; &lt;span slot=&quot;footnotes&quot;&gt;2 Days&lt;/span&gt; &lt;ui5-notification-action id=&quot;acceptBtnInPopover&quot; icon=&quot;accept&quot; text=&quot;Accept&quot; slot=&quot;actions&quot;&gt;&lt;/ui5-notification-action&gt; &lt;ui5-notification-action id=&quot;rejectBtnInPopover&quot; icon=&quot;message-error&quot; text=&quot;Reject&quot; slot=&quot;actions&quot;&gt;&lt;/ui5-notification-action&gt; &lt;/ui5-li-notification&gt; &lt;/ui5-li-notification-group&gt; ... &lt;/ui5-list&gt; &lt;/ui5-popover&gt; &lt;script&gt; shellbar.addEventListener(&quot;notifications-click&quot;, function(event) { notificationsPopover.showAt(event.detail.targetRef); }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The &lt;code&gt;ui5-li-notification-group&lt;/code&gt; is a special type of list item, that unlike others can group items within self, usually &lt;code&gt;ui5-li-notification&lt;/code&gt; items. &lt;br&gt; The component consists of: &lt;ul&gt; &lt;li&gt;Toggle button to expand and collapse the group&lt;/li&gt; &lt;li&gt;Priority icon to display the priority of the group&lt;/li&gt; &lt;li&gt;TitleText to entitle the group&lt;/li&gt; &lt;li&gt;Custom actions - with the use of ui5-notification-action&lt;/li&gt; &lt;li&gt;Items of the group&lt;/li&gt; &lt;/ul&gt; Usage The component can be used in a standard ui5-list. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-li-notification-group exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;title-text - Used to style the titleText of the notification list group item&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/NotificationListGroupItem.js&quot;; import &quot;@ui5/webcomponents/dist/NotificationAction.js&quot;; (optional) &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; collapsed &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the group is collapsed or expanded. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showCounter &lt;br&gt; &lt;code&gt;show-counter&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the items &lt;code&gt;counter&lt;/code&gt; would be displayed. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; busy &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if a busy indicator would be displayed over the item. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.8&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; busyDelay &lt;br&gt; &lt;code&gt;busy-delay&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;1000&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the delay in milliseconds, after which the busy indicator will show up for this component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; priority &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Priority&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;priority&lt;/code&gt; of the item. Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Low&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Medium&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;High&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; read &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the &lt;code&gt;notification&lt;/code&gt; is new or has been already read. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; if set to &lt;code&gt;false&lt;/code&gt; the &lt;code&gt;titleText&lt;/code&gt; has bold font, if set to true - it has a normal font. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showClose &lt;br&gt; &lt;code&gt;show-close&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the &lt;code&gt;close&lt;/code&gt; button would be displayed. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; titleText &lt;br&gt; &lt;code&gt;title-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;titleText&lt;/code&gt; of the item. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the items of the &lt;code&gt;ui5-li-notification-group&lt;/code&gt;, usually &lt;code&gt;ui5-li-notification&lt;/code&gt; items.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;actions&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the actions, displayed in the top-right area. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; use the &lt;code&gt;ui5-notification-action&lt;/code&gt; component.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;toggle&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the &lt;code&gt;ui5-li-notification-group&lt;/code&gt; is expanded/collapsed by user interaction. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the &lt;code&gt;Close&lt;/code&gt; button is pressed. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the closed item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;NotificationAction&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; The &lt;code&gt;ui5-notification-action&lt;/code&gt; represents an abstract action, used in the &lt;code&gt;ui5-li-notification&lt;/code&gt; and the &lt;code&gt;ui5-li-notification-group&lt;/code&gt; items. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; design &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.types.ButtonDesign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Transparent&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the action design. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Emphasized&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Positive&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Negative&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Transparent&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the action is disabled. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; a disabled action can&#39;t be pressed or focused, and it is not in the tab chain. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;icon&lt;/code&gt; source URI. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; SAP-icons font provides numerous built-in icons. To find all the available icons, see the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the &lt;code&gt;ui5-notification-action&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/NotificationListGroupItem/",
    "relUrl": "/playground/components/NotificationListGroupItem/"
  },
  "164": {
    "id": "164",
    "title": "Notification List Item",
    "content": "&lt;!DOCTYPE html&gt; NotificationListItem And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. John Doe 2 Days Other stuff And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days Short description Patricia Clarck 3 Days And with a very long description - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. John SMith 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. John Doe 2 Days Other stuff And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And short description John Doe 3 Days With a very long description - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. John SMith 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. John Doe 2 Days Other stuff And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days Short description Patricia Clarck 3 Days . With a very long description - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. John SMith 3 Days",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/NotificationListItem/",
    "relUrl": "/playground/fiori/pages/NotificationListItem/"
  },
  "165": {
    "id": "165",
    "title": "Notification List Item",
    "content": "NotificationListItem v1.0.0-rc.8 @ui5/webcomponents-fiori &lt;ui5-li-notification&gt; NotificationListItem And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Monique Legrand 2 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Alain Chevalier 2 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. John Doe 2 Days &lt;ui5-list header-text=&quot;Notifications&quot;&gt; &lt;ui5-li-notification show-close title-text=&quot;New order (#2525) With a very long title - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc.&quot; priority=&quot;High&quot; &gt; And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. &lt;ui5-avatar size=&quot;XS&quot; slot=&quot;avatar&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_1.png&quot; /&gt; &lt;/ui5-avatar&gt; &lt;span slot=&quot;footnotes&quot;&gt;Monique Legrand&lt;/span&gt; &lt;span slot=&quot;footnotes&quot;&gt;2 Days&lt;/span&gt; &lt;/ui5-li-notification&gt; &lt;ui5-li-notification show-close title-text=&quot;New order (#2526) With a very long title - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc.&quot; priority=&quot;High&quot; &gt; And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. &lt;ui5-avatar size=&quot;XS&quot; slot=&quot;avatar&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/man_avatar_1.png&quot; /&gt; &lt;/ui5-avatar&gt; &lt;span slot=&quot;footnotes&quot;&gt;Alain Chevalier&lt;/span&gt; &lt;span slot=&quot;footnotes&quot;&gt;2 Days&lt;/span&gt; &lt;/ui5-li-notification&gt; ... &lt;/ui5-list&gt; &lt;script&gt; myList.addEventListener(&quot;item-close&quot;, e =&gt; { e.detail.item.hidden = true; }); &lt;/script&gt; NotificationListItem - Custom Actions And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Monique Legrand 2 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Alain Chevalier 2 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. John Doe 2 Days &lt;ui5-list header-text=&quot;Notifications&quot;&gt; &lt;ui5-li-notification show-close priority=&quot;Low&quot; title-text=&quot;New order (#2525) With a very long title - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc.&quot; &gt; And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. &lt;ui5-avatar size=&quot;XS&quot; slot=&quot;avatar&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_1.png&quot; /&gt; &lt;/ui5-avatar&gt; &lt;span slot=&quot;footnotes&quot;&gt;Monique Legrand&lt;/span&gt; &lt;span slot=&quot;footnotes&quot;&gt;2 Days&lt;/span&gt; &lt;/ui5-li-notification&gt; ... &lt;/ui5-list&gt; NotificationListItem In ShellBar And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. John Doe 2 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days Short description Patricia Clarck 3 Days . With a very long description - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. John SMith 3 Days &lt;ui5-shellbar id=&quot;shellbar&quot; primary-title=&quot;Corporate Portal&quot; logo=&quot;../../../assets/images/sap-logo-svg.svg&quot; show-notifications notifications-count=&quot;4&quot; &gt; &lt;/ui5-shellbar&gt; &lt;ui5-popover id=&quot;notificationsPopover&quot; style=&quot;max-width: 400px&quot; placement-type=&quot;Bottom&quot; horizontal-align=&quot;Right&quot; &gt; &lt;ui5-list header-text=&quot;Notifications&quot;&gt; &lt;ui5-li-notification show-close title-text=&quot;New order (#2525) With a very long title - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc.&quot; &gt; And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. &lt;ui5-avatar size=&quot;XS&quot; slot=&quot;avatar&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/man_avatar_1.png&quot; /&gt; &lt;/ui5-avatar&gt; &lt;span slot=&quot;footnotes&quot;&gt;John Doe&lt;/span&gt; &lt;span slot=&quot;footnotes&quot;&gt;2 Days&lt;/span&gt; &lt;ui5-notification-action id=&quot;acceptBtnInPopover&quot; icon=&quot;accept&quot; text=&quot;Accept&quot; slot=&quot;actions&quot;&gt;&lt;/ui5-notification-action&gt; &lt;ui5-notification-action id=&quot;rejectBtnInPopover&quot; icon=&quot;message-error&quot; text=&quot;Reject&quot; slot=&quot;actions&quot;&gt;&lt;/ui5-notification-action&gt; &lt;/ui5-li-notification&gt; ... &lt;/ui5-list&gt; &lt;/ui5-popover&gt; &lt;script&gt; shellbar.addEventListener(&quot;notifications-click&quot;, function(event) { notificationsPopover.showAt(event.detail.targetRef); }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The &lt;code&gt;ui5-li-notification&lt;/code&gt; is a type of list item, meant to display notifications. &lt;br&gt; The component has a rich set of various properties that allows the user to set avatar, titleText, descriptive content and footnotes to fully describe a notification. The user can: &lt;ul&gt; &lt;li&gt;display a Close button&lt;/li&gt; &lt;li&gt;can control whether the titleText and description should wrap or truncate and display a ShowMore button to switch between less and more information&lt;/li&gt; &lt;li&gt;add custom actions by using the ui5-notification-action component&lt;/li&gt; &lt;/ul&gt; Usage The component can be used in a standard ui5-list. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-li-notification exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;title-text - Used to style the titleText of the notification list item&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/NotificationListItem.js&quot;; import &quot;@ui5/webcomponents/dist/NotificationAction.js&quot;; (optional) &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; wrappingType &lt;br&gt; &lt;code&gt;wrapping-type&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;WrappingType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the &lt;code&gt;titleText&lt;/code&gt; and &lt;code&gt;description&lt;/code&gt; should wrap, they truncate by default. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; by default the &lt;code&gt;titleText&lt;/code&gt; and &lt;code&gt;decription&lt;/code&gt;, and a &lt;code&gt;ShowMore/Less&lt;/code&gt; button would be displayed. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; busy &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if a busy indicator would be displayed over the item. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.8&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; busyDelay &lt;br&gt; &lt;code&gt;busy-delay&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;1000&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the delay in milliseconds, after which the busy indicator will show up for this component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; priority &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Priority&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;priority&lt;/code&gt; of the item. Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Low&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Medium&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;High&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; read &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the &lt;code&gt;notification&lt;/code&gt; is new or has been already read. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; if set to &lt;code&gt;false&lt;/code&gt; the &lt;code&gt;titleText&lt;/code&gt; has bold font, if set to true - it has a normal font. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showClose &lt;br&gt; &lt;code&gt;show-close&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the &lt;code&gt;close&lt;/code&gt; button would be displayed. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; titleText &lt;br&gt; &lt;code&gt;title-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;titleText&lt;/code&gt; of the item. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;avatar&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the avatar, displayed in the &lt;code&gt;ui5-li-notification&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Consider using the &lt;code&gt;ui5-avatar&lt;/code&gt; to display icons, initials or images. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt;In order to be complaint with the UX guidlines and for best experience, we recommend using avatars with 2rem X 2rem in size (32px X 32px). In case you are using the &lt;code&gt;ui5-avatar&lt;/code&gt; you can set its &lt;code&gt;size&lt;/code&gt; property to &lt;code&gt;XS&lt;/code&gt; to get the required size - &lt;code&gt;&amp;lt;ui5-avatar size=&quot;XS&quot;&gt;&amp;lt;/ui5-avatar&gt;&lt;/code&gt;.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content of the &lt;code&gt;ui5-li-notification&lt;/code&gt;, usually a description of the notification. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;footnotes&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the elements, displayed in the footer of the of the component.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;actions&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the actions, displayed in the top-right area. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; use the &lt;code&gt;ui5-notification-action&lt;/code&gt; component.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the &lt;code&gt;Close&lt;/code&gt; button is pressed. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the closed item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;NotificationAction&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; The &lt;code&gt;ui5-notification-action&lt;/code&gt; represents an abstract action, used in the &lt;code&gt;ui5-li-notification&lt;/code&gt; and the &lt;code&gt;ui5-li-notification-group&lt;/code&gt; items. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; design &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.types.ButtonDesign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Transparent&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the action design. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Emphasized&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Positive&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Negative&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Transparent&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the action is disabled. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; a disabled action can&#39;t be pressed or focused, and it is not in the tab chain. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;icon&lt;/code&gt; source URI. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; SAP-icons font provides numerous built-in icons. To find all the available icons, see the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the &lt;code&gt;ui5-notification-action&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/NotificationListItem/",
    "relUrl": "/playground/components/NotificationListItem/"
  },
  "166": {
    "id": "166",
    "title": "Notification List_test_page",
    "content": "&lt;!DOCTYPE html&gt; NotificationListItem and NotificationListGroupItem Test NotificationListItem and NotificationListGroupItem itemClick event: itemClose event: itemToggle event: custom action click: And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days And with a very long description and long labels of the action buttons - Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent feugiat, turpis vel scelerisque pharetra, tellus odio vehicula dolor, nec elementum lectus turpis at nunc. Office Notifications 3 Days",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/NotificationList_test_page/",
    "relUrl": "/playground/fiori/pages/NotificationList_test_page/"
  },
  "167": {
    "id": "167",
    "title": "Open U I5",
    "content": "&lt;!DOCTYPE html&gt; OpenUI5 + UI5 Web Components Web Component",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/OpenUI5/",
    "relUrl": "/playground/main/pages/OpenUI5/"
  },
  "168": {
    "id": "168",
    "title": "Page",
    "content": "&lt;!DOCTYPE html&gt; Page Title Toggle visibility Toggle floating footer Toggle scrolling Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Agree Decline Cancel",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/Page/",
    "relUrl": "/playground/fiori/pages/Page/"
  },
  "169": {
    "id": "169",
    "title": "Page",
    "content": "Page v1.0.0-rc.12 @ui5/webcomponents-fiori &lt;ui5-page&gt; Page with floating footer Title Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Turpis massa sed elementum tempus egestas sed sed risus pretium. Eget nullam non nisi est sit amet facilisis. Imperdiet dui accumsan sit amet nulla facilisi morbi. Sem viverra aliquet eget sit amet tellus cras adipiscing. Faucibus purus in massa tempor nec. Egestas quis ipsum suspendisse ultrices gravida dictum. Amet facilisis magna etiam tempor. Sapien et ligula ullamcorper malesuada proin libero nunc consequat. Ac orci phasellus egestas tellus. Quis imperdiet massa tincidunt nunc. Mollis nunc sed id semper risus in hendrerit gravida rutrum. Amet consectetur adipiscing elit duis tristique. Tortor condimentum lacinia quis vel eros. Elit sed vulputate mi sit amet mauris commodo quis imperdiet. Sed nisi lacus sed viverra tellus in hac habitasse. Praesent tristique magna sit amet purus gravida quis blandit. Magnis dis parturient montes nascetur ridiculus. Sit amet nulla facilisi morbi tempus iaculis urna id. Senectus et netus et malesuada fames. Faucibus ornare suspendisse sed nisi lacus sed. Facilisis volutpat est velit egestas dui id ornare arcu odio. In tellus integer feugiat scelerisque. Eu turpis egestas pretium aenean pharetra magna. Integer enim neque volutpat ac tincidunt vitae semper quis lectus. Euismod elementum nisi quis eleifend quam adipiscing vitae proin sagittis. Ante in nibh mauris cursus mattis. Sagittis vitae et leo duis. Sodales ut eu sem integer. Arcu vitae elementum curabitur vitae nunc sed velit dignissim. Tellus rutrum tellus pellentesque eu tincidunt tortor. Etiam tempor orci eu lobortis elementum nibh. Velit laoreet id donec ultrices tincidunt arcu non sodales. Scelerisque felis imperdiet proin fermentum leo vel orci porta non. Odio ut sem nulla pharetra diam sit amet nisl. Semper auctor neque vitae tempus quam pellentesque nec nam aliquam. Donec enim diam vulputate ut pharetra sit. Posuere ac ut consequat semper viverra nam libero. Viverra mauris in aliquam sem fringilla ut morbi tincidunt augue. Aliquam eleifend mi in nulla posuere sollicitudin aliquam ultrices. Ac placerat vestibulum lectus mauris ultrices. Consequat semper viverra nam libero justo laoreet. In mollis nunc sed id. Eget egestas purus viverra accumsan in. Diam vulputate ut pharetra sit amet aliquam. Arcu bibendum at varius vel pharetra vel turpis nunc. Lacus sed turpis tincidunt id aliquet risus feugiat. Tempus urna et pharetra pharetra massa massa. Volutpat maecenas volutpat blandit aliquam etiam. Viverra suspendisse potenti nullam ac. Nisl purus in mollis nunc sed id. Nibh mauris cursus mattis molestie a iaculis at erat. Ultricies leo integer malesuada nunc vel risus commodo viverra maecenas. Tempor id eu nisl nunc mi ipsum faucibus vitae. Eget lorem dolor sed viverra. Pellentesque habitant morbi tristique senectus et. Et tortor at risus viverra adipiscing at in tellus. Venenatis lectus magna fringilla urna. Sed cras ornare arcu dui vivamus arcu felis. Gravida dictum fusce ut placerat orci nulla pellentesque dignissim. Aliquam purus sit amet luctus venenatis lectus magna fringilla urna. Arcu dictum varius duis at consectetur lorem donec. Tortor posuere ac ut consequat semper viverra nam. Vulputate mi sit amet mauris commodo quis. Convallis convallis tellus id interdum velit. Ac placerat vestibulum lectus mauris ultrices eros. Nulla at volutpat diam ut venenatis tellus. Turpis in eu mi bibendum neque egestas congue quisque egestas. Tristique nulla aliquet enim tortor at auctor urna nunc id. Luctus venenatis lectus magna fringilla urna. Quis enim lobortis scelerisque fermentum dui faucibus in. Turpis massa sed elementum tempus egestas. Varius sit amet mattis vulputate enim nulla aliquet porttitor. Justo laoreet sit amet cursus sit amet. Mauris pharetra et ultrices neque ornare aenean euismod elementum. Erat imperdiet sed euismod nisi porta lorem mollis. Arcu ac tortor dignissim convallis aenean et tortor at risus. Feugiat sed lectus vestibulum mattis ullamcorper velit sed. Dui nunc mattis enim ut tellus elementum sagittis. Vel orci porta non pulvinar neque laoreet suspendisse interdum. Elementum sagittis vitae et leo duis ut diam quam. Vulputate dignissim suspendisse in est ante. Enim diam vulputate ut pharetra sit amet aliquam id diam. Quam vulputate dignissim suspendisse in est ante in nibh. Vestibulum morbi blandit cursus risus at ultrices mi. Nam at lectus urna duis convallis. Non quam lacus suspendisse faucibus interdum posuere lorem ipsum. Viverra aliquet eget sit amet tellus cras adipiscing enim. Venenatis tellus in metus vulputate eu scelerisque felis imperdiet. In est ante in nibh mauris cursus mattis molestie. Urna condimentum mattis pellentesque id nibh tortor id. Curabitur vitae nunc sed velit dignissim sodales ut. Ac ut consequat semper viverra. Diam maecenas sed enim ut sem viverra aliquet eget sit. Sagittis aliquam malesuada bibendum arcu. Cursus vitae congue mauris rhoncus aenean vel elit scelerisque. Cras semper auctor neque vitae. Malesuada bibendum arcu vitae elementum curabitur vitae nunc sed. Aliquam eleifend mi in nulla posuere sollicitudin aliquam. Ante in nibh mauris cursus. Iaculis at erat pellentesque adipiscing commodo elit. Lectus sit amet est placerat in egestas. Egestas pretium aenean pharetra magna ac placerat vestibulum. Sed blandit libero volutpat sed cras. At augue eget arcu dictum varius duis. Suscipit adipiscing bibendum est ultricies integer. Nullam ac tortor vitae purus faucibus. Ultricies mi eget mauris pharetra. Quisque non tellus orci ac. Nisi vitae suscipit tellus mauris a diam. Eu nisl nunc mi ipsum faucibus vitae aliquet. Augue mauris augue neque gravida in fermentum et sollicitudin. Ullamcorper sit amet risus nullam eget felis eget nunc. Elementum nisi quis eleifend quam adipiscing vitae proin sagittis nisl. Quis commodo odio aenean sed adipiscing diam. Elit sed vulputate mi sit amet. Nullam vehicula ipsum a arcu. Sed sed risus pretium quam. Aliquam sem fringilla ut morbi tincidunt augue. At elementum eu facilisis sed odio. Volutpat sed cras ornare arcu dui. At lectus urna duis convallis convallis. Nunc faucibus a pellentesque sit. Molestie nunc non blandit massa. Eu non diam phasellus vestibulum. Dolor sit amet consectetur adipiscing elit duis tristique sollicitudin. Nisl tincidunt eget nullam non nisi. Nunc vel risus commodo viverra. At augue eget arcu dictum varius duis at. Facilisi nullam vehicula ipsum a arcu cursus vitae. Massa sapien faucibus et molestie ac. Viverra ipsum nunc aliquet bibendum enim facilisis gravida. Sit amet massa vitae tortor condimentum lacinia. Sit amet risus nullam eget felis. Ipsum a arcu cursus vitae congue mauris rhoncus aenean vel. Consequat mauris nunc congue nisi vitae suscipit tellus mauris a. Tellus at urna condimentum mattis pellentesque id nibh tortor. Sagittis eu volutpat odio facilisis mauris sit amet massa vitae. Magna etiam tempor orci eu lobortis elementum nibh tellus. Volutpat ac tincidunt vitae semper quis. Diam vel quam elementum pulvinar etiam non quam lacus suspendisse. Id leo in vitae turpis massa sed elementum tempus. Convallis tellus id interdum velit laoreet id donec ultrices. Ac turpis egestas maecenas pharetra convallis posuere morbi leo. Non quam lacus suspendisse faucibus interdum posuere lorem ipsum dolor. Amet cursus sit amet dictum sit amet justo donec. Habitant morbi tristique senectus et netus. Agree Decline Cancel &lt;ui5-page id=&quot;page&quot; background-design=&quot;List&quot; floating-footer show-footer&gt; &lt;ui5-bar design=&quot;Header&quot; slot=&quot;header&quot;&gt; &lt;ui5-button icon=&quot;home&quot; tooltip=&quot;Go home&quot; slot=&quot;startContent&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-label&gt;Title&lt;/ui5-label&gt; &lt;ui5-button icon=&quot;action-settings&quot; tooltip=&quot;Go to settings&quot; slot=&quot;endContent&quot;&gt;&lt;/ui5-button&gt; &lt;/ui5-bar&gt; &lt;div&gt; &lt;p&gt; Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Turpis massa sed elementum tempus egestas sed sed risus pretium. Eget nullam non nisi est sit amet facilisis. Imperdiet dui accumsan sit amet nulla facilisi morbi. Sem viverra aliquet eget sit amet tellus cras adipiscing. Faucibus purus in massa tempor nec. Egestas quis ipsum suspendisse ultrices gravida dictum. Amet facilisis magna etiam tempor. Sapien et ligula ullamcorper malesuada proin libero nunc consequat. Ac orci phasellus egestas tellus. Quis imperdiet massa tincidunt nunc. Mollis nunc sed id semper risus in hendrerit gravida rutrum. &lt;/p&gt; &lt;p&gt; Amet consectetur adipiscing elit duis tristique. Tortor condimentum lacinia quis vel eros. Elit sed vulputate mi sit amet mauris commodo quis imperdiet. Sed nisi lacus sed viverra tellus in hac habitasse. Praesent tristique magna sit amet purus gravida quis blandit. Magnis dis parturient montes nascetur ridiculus. Sit amet nulla facilisi morbi tempus iaculis urna id. Senectus et netus et malesuada fames. Faucibus ornare suspendisse sed nisi lacus sed. Facilisis volutpat est velit egestas dui id ornare arcu odio. In tellus integer feugiat scelerisque. Eu turpis egestas pretium aenean pharetra magna. Integer enim neque volutpat ac tincidunt vitae semper quis lectus. Euismod elementum nisi quis eleifend quam adipiscing vitae proin sagittis. Ante in nibh mauris cursus mattis. Sagittis vitae et leo duis. &lt;/p&gt; &lt;p&gt; Sodales ut eu sem integer. Arcu vitae elementum curabitur vitae nunc sed velit dignissim. Tellus rutrum tellus pellentesque eu tincidunt tortor. Etiam tempor orci eu lobortis elementum nibh. Velit laoreet id donec ultrices tincidunt arcu non sodales. Scelerisque felis imperdiet proin fermentum leo vel orci porta non. Odio ut sem nulla pharetra diam sit amet nisl. Semper auctor neque vitae tempus quam pellentesque nec nam aliquam. Donec enim diam vulputate ut pharetra sit. Posuere ac ut consequat semper viverra nam libero. Viverra mauris in aliquam sem fringilla ut morbi tincidunt augue. Aliquam eleifend mi in nulla posuere sollicitudin aliquam ultrices. Ac placerat vestibulum lectus mauris ultrices. &lt;/p&gt; &lt;/div&gt; &lt;div slot=&quot;footer&quot;&gt; &lt;ui5-bar design=&quot;FloatingFooter&quot;&gt; &lt;ui5-icon name=&quot;home&quot; slot=&quot;startContent&quot;&gt;&lt;/ui5-icon&gt; &lt;ui5-button design=&quot;Positive&quot; slot=&quot;endContent&quot;&gt;Agree&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Negative&quot; slot=&quot;endContent&quot;&gt;Decline&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Transparent&quot; slot=&quot;endContent&quot;&gt;Cancel&lt;/ui5-button&gt; &lt;/ui5-bar&gt; &lt;/div&gt; &lt;/ui5-page&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-page is a container component that holds one whole screen of an application. The page has three distinct areas that can hold content - a header, content area and a footer. &lt;h3&gt;Structure&lt;/h3&gt; &lt;h4&gt;Header&lt;/h4&gt; The top most area of the page is occupied by the header. The standard header includes a navigation button and a title. &lt;h4&gt;Content&lt;/h4&gt; The content occupies the main part of the page. Only the content area is scrollable by default. This can be prevented by setting enableScrolling to false. &lt;h4&gt;Footer&lt;/h4&gt; The footer is optional and occupies the fixed bottom part of the page. Alternatively, the footer can be floating above the bottom part of the content. This is enabled with the floatingFooter property. Note: ui5-page occipues the whole available space of its parent. In order to achieve the intended design you have to make sure that there is enough space for the ui5-page to be rendered. ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/Page.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; backgroundDesign &lt;br&gt; &lt;code&gt;background-design&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;PageBackgroundDesign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Solid&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the background color of the &lt;code&gt;ui5-page&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When a ui5-list is placed inside the page, we recommend using “List” to ensure better color contrast. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Solid&lt;/code&gt;&lt;/li&gt; (default) &lt;li&gt;&lt;code&gt;Transparent&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;List&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disableScrolling &lt;br&gt; &lt;code&gt;disable-scrolling&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Disables vertical scrolling of page content. If set to true, there will be no vertical scrolling at all. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; floatingFooter &lt;br&gt; &lt;code&gt;floating-footer&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;true&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the footer should float over the content. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When set to true the footer floats over the content with a slight offset from the bottom, otherwise it is fixed at the very bottom of the page. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideFooter &lt;br&gt; &lt;code&gt;hide-footer&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the footer visibility. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content HTML Element.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;footer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the footer HTML Element.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;header&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the header HTML Element.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Page/",
    "relUrl": "/playground/components/Page/"
  },
  "170": {
    "id": "170",
    "title": "Panel",
    "content": "&lt;!DOCTYPE html&gt; Panel Expandable but not expanded Add child No new children added yet. Cancel Done This is my panel Lorem ipsum! Lorem ipsum dolor sit amet, tamquam invidunt cu sed, unum regione mel ea, quo ea alia novum. Ne qui illud zril nostrum, vel ea sint dicant postea. Vel ne facete tritani, neglegentur concludaturque sed te. His animal dolorum ut. Aeterno appareat ei mei, cu sed elit scripserit, an quodsi oportere accusamus quo. Pri ea probo corpora rationibus, soluta incorrupte ex his. Mei ei brute cetero, id duo magna aeque torquatos. Quodsi erroribus mediocritatem his ut, ad pri legere iracundia democritum. Menandri intellegam in mea, ex vero movet qualisque sed. Maiorum verterem perfecto nec ea, est velit elaboraret consequuntur eu, eam ad reque postea admodum. Ne inimicus convenire pri, doctus vidisse te ius. Percipitur contentiones in vis, cu vim propriae phaedrum. Has ad magna errem honestatis, duo vero graeco epicurei no, populo semper sit ne. Vulputate dissentiunt interpretaris ea vis, nec civibus moderatius at. Cu vim stet dissentias, no vidit saperet indoctum nec, et pro magna prima nobis. Vis consul feugiat qualisque in, regione persecuti cotidieque id eos, id ius omnesque vituperata. Pri ex impedit percipit consulatu. Ius iudico feugiat instructior an. Iusto putant eum eu, ubique splendide pri ad, cu qui salutandi assentior percipitur. At esse ceteros salutandi ius. Te dicam reprehendunt nec, ea discere ponderum sensibus duo. Vis cu commodo definiebas, postea dissentias ne vim. Modo homero eos ad. Ut vix equidem temporibus. At duo audire volumus, id volumus rationibus vim. Sit ne diam volumus. Augue labitur mel cu, an eam omnis causae hendrerit. Lorem ipsum! Lorem ipsum dolor sit amet, tamquam invidunt cu sed, unum regione mel ea, quo ea alia novum. Ne qui illud zril nostrum, vel ea sint dicant postea. Vel ne facete tritani, neglegentur concludaturque sed te. His animal dolorum ut. Aeterno appareat ei mei, cu sed elit scripserit, an quodsi oportere accusamus quo. Pri ea probo corpora rationibus, soluta incorrupte ex his. Mei ei brute cetero, id duo magna aeque torquatos. Quodsi erroribus mediocritatem his ut, ad pri legere iracundia democritum. Menandri intellegam in mea, ex vero movet qualisque sed. Maiorum verterem perfecto nec ea, est velit elaboraret consequuntur eu, eam ad reque postea admodum. Ne inimicus convenire pri, doctus vidisse te ius. Percipitur contentiones in vis, cu vim propriae phaedrum. Has ad magna errem honestatis, duo vero graeco epicurei no, populo semper sit ne. Vulputate dissentiunt interpretaris ea vis, nec civibus moderatius at. Cu vim stet dissentias, no vidit saperet indoctum nec, et pro magna prima nobis. Vis consul feugiat qualisque in, regione persecuti cotidieque id eos, id ius omnesque vituperata. Pri ex impedit percipit consulatu. Ius iudico feugiat instructior an. Iusto putant eum eu, ubique splendide pri ad, cu qui salutandi assentior percipitur. At esse ceteros salutandi ius. Te dicam reprehendunt nec, ea discere ponderum sensibus duo. Vis cu commodo definiebas, postea dissentias ne vim. Modo homero eos ad. Ut vix equidem temporibus. At duo audire volumus, id volumus rationibus vim. Sit ne diam volumus. Augue labitur mel cu, an eam omnis causae hendrerit. Lorem ipsum! Some short text. Lorem ipsum! Some short text. Panel without header and header text The panel consists only of a content part. This is a demo how to use the &quot;expand&quot; event. Some short text. Expandable but not expanded This is a demo how to use the &quot;expand&quot; event. Some short text. Lorem ipsum! Lorem ipsum! Accessible name test 3 Lorem ipsum! Accessible name test 4 Lorem ipsum!",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Panel/",
    "relUrl": "/playground/main/pages/Panel/"
  },
  "171": {
    "id": "171",
    "title": "Panel",
    "content": "Panel @ui5/webcomponents &lt;ui5-panel&gt; Basic Panel I am a native heading! Short text. Another text. Aute ullamco officia fugiat culpa do tempor tempor aute excepteur magna. Quis velit adipisicing excepteur do eu duis elit. Sunt ea pariatur nulla est laborum proident sunt labore commodo Lorem laboris nisi Lorem. &lt;ui5-panel width=&quot;100%&quot; accessible-role=&quot;Complementary&quot; header-text=&quot;Both expandable and expanded&quot; class=&quot;full-width&quot;&gt; &lt;h1 class=&quot;content-color&quot;&gt;I am a native heading!&lt;/h1&gt; &lt;ui5-label wrapping-type=&quot;Normal&quot;&gt;Short text.&lt;/ui5-label&gt; &lt;br&gt; &lt;ui5-label wrapping-type=&quot;Normal&quot;&gt;Another text.&lt;/ui5-label&gt; &lt;p class=&quot;content-color&quot;&gt; Aute ullamco officia fugiat culpa do tempor tempor aute excepteur magna. Quis velit adipisicing excepteur do eu duis elit. Sunt ea pariatur nulla est laborum proident sunt labore commodo Lorem laboris nisi Lorem. &lt;/p&gt; &lt;/ui5-panel&gt; Panel with List Argentina Bulgaria China Germany Hungary England USA Canada &lt;ui5-panel accessible-role=&quot;Complementary&quot; header-text=&quot;Select your country&quot; class=&quot;full-width&quot;&gt; &lt;ui5-list id=&quot;myList1&quot; mode=&quot;MultiSelect&quot;&gt; &lt;ui5-li key=&quot;country1&quot;&gt;Argentina&lt;/ui5-li&gt; &lt;ui5-li key=&quot;country2&quot;&gt;Bulgaria&lt;/ui5-li&gt; &lt;ui5-li key=&quot;country3&quot;&gt;China&lt;/ui5-li&gt; &lt;ui5-li key=&quot;country4&quot;&gt;Germany&lt;/ui5-li&gt; &lt;ui5-li key=&quot;country5&quot;&gt;Hungary&lt;/ui5-li&gt; &lt;ui5-li key=&quot;country6&quot;&gt;England&lt;/ui5-li&gt; &lt;ui5-li key=&quot;country7&quot;&gt;USA&lt;/ui5-li&gt; &lt;ui5-li key=&quot;country8&quot;&gt;Canada&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;/ui5-panel&gt; Fixed Panel (Can&#39;t be Collapsed/Expanded) Argentina Bulgaria China Germany &lt;ui5-panel fixed accessible-role=&quot;Complementary&quot; header-text=&quot;Country Of Birth&quot; class=&quot;panel-width&quot;&gt; &lt;ui5-list id=&quot;myList2&quot; mode=&quot;SingleSelectBegin&quot; &gt; &lt;ui5-li key=&quot;country1&quot;&gt;Argentina&lt;/ui5-li&gt; &lt;ui5-li key=&quot;country2&quot;&gt;Bulgaria&lt;/ui5-li&gt; &lt;ui5-li key=&quot;country3&quot;&gt;China&lt;/ui5-li&gt; &lt;ui5-li key=&quot;country4&quot;&gt;Germany&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;/ui5-panel&gt; Panel with Custom Header Countries Edit Add Remove Argentina Bulgaria China &lt;style&gt; .header { display: flex; align-items: center; justify-content: space-between; width: 100%; } &lt;/style&gt; &lt;ui5-panel accessible-role=&quot;Complementary&quot; class=&quot;full-width&quot;&gt; &lt;!-- Panel header --&gt; &lt;div slot=&quot;header&quot; class=&quot;header&quot;&gt; &lt;ui5-title&gt;Countries&lt;/ui5-title&gt; &lt;div&gt; &lt;ui5-button&gt;Edit&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Emphasized&quot;&gt;Add&lt;/ui5-button&gt; &lt;ui5-button design=&quot;Negative&quot;&gt;Remove&lt;/ui5-button&gt; &lt;/div&gt; &lt;/div&gt; &lt;ui5-list id=&quot;myList1&quot; mode=&quot;MultiSelect&quot;&gt; &lt;ui5-li key=&quot;country1&quot;&gt;Argentina&lt;/ui5-li&gt; &lt;ui5-li key=&quot;country2&quot;&gt;Bulgaria&lt;/ui5-li&gt; &lt;ui5-li key=&quot;country3&quot;&gt;China&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;/ui5-panel&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-panel component is a container which has a header and a content area and is used for grouping and displaying information. It can be collapsed to save space on the screen. Guidelines: Nesting two or more panels is not recommended. Do not stack too many panels on one page. Structure The panel’s header area consists of a title bar with a header text or custom header. The header is clickable and can be used to toggle between the expanded and collapsed state. It includes an icon which rotates depending on the state. The custom header can be set through the header slot and it may contain arbitraray content, such as: title, buttons or any other HTML elements. The content area can contain an arbitrary set of controls. Note: The custom header is not clickable out of the box, but in this case the icon is interactive and allows to show/hide the content area. Responsive Behavior If the width of the panel is set to 100% (default), the panel and its children are resized responsively, depending on its parent container. If the panel has a fixed height, it will take up the space even if the panel is collapsed. When the panel is expandable (the fixed property is set to false), an arrow icon (pointing to the right) appears in front of the header. When the animation is activated, expand/collapse uses a smooth animation to open or close the content area. When the panel expands/collapses, the arrow icon rotates 90 degrees clockwise/counter-clockwise. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-panel exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;header - Used to style the wrapper of the header&lt;/li&gt; &lt;li&gt;content - Used to style the wrapper of the content&lt;/li&gt; &lt;/ul&gt; Keyboard Handling Fast Navigation This component provides a build in fast navigation group which can be used via F6 / Shift + F6 or Ctrl + Alt(Option) + Down / Ctrl + Alt(Option) + Up. In order to use this functionality, you need to import the following module: import &quot;@ui5/webcomponents-base/dist/features/F6Navigation.js&quot; ES6 Module Import import &quot;@ui5/webcomponents/dist/Panel&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleRole &lt;br&gt; &lt;code&gt;accessible-role&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;PanelAccessibleRole&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Form&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Sets the accessible ARIA role of the component. Depending on the usage, you can change the role from the default &lt;code&gt;Form&lt;/code&gt; to &lt;code&gt;Region&lt;/code&gt; or &lt;code&gt;Complementary&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; collapsed &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Indicates whether the component is collapsed and only the header is displayed. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; fixed &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the component is in a fixed state that is not expandable/collapsible by user interaction. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; headerLevel &lt;br&gt; &lt;code&gt;header-level&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;TitleLevel&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;H2&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &quot;aria-level&quot; of component heading, set by the &lt;code&gt;headerText&lt;/code&gt;. &lt;br&gt;&lt;br&gt; Available options are: &lt;code&gt;&quot;H6&quot;&lt;/code&gt; to &lt;code&gt;&quot;H1&quot;&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; headerText &lt;br&gt; &lt;code&gt;header-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; This property is used to set the header text of the component. The text is visible in both expanded and collapsed states. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; This property is overridden by the &lt;code&gt;header&lt;/code&gt; slot. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; noAnimation &lt;br&gt; &lt;code&gt;no-animation&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Indicates whether the transition between the expanded and the collapsed state of the component is animated. By default the animation is enabled. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.16&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content of the component. The content is visible only when the component is expanded.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;header&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the component header area. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When a header is provided, the &lt;code&gt;headerText&lt;/code&gt; property is ignored.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;toggle&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the component is expanded/collapsed by user interaction. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Panel/",
    "relUrl": "/playground/components/Panel/"
  },
  "172": {
    "id": "172",
    "title": "Popover",
    "content": "&lt;!DOCTYPE html&gt; Popover Click me ! I am in the header Hello World Again Open Popover Hello World Again Super Danger ! Hello World Again Hello World I am in the footer Open with Attribute Close with Method Close with Attribute Hello World Open Big Popover Open Popover ACC role - AlertDialog Open Popover ACC role - None Opens modal popover! Hello Again Wooooooooooooooooooooooooooooorld Close Opens modal popover with no block layer! Hello Again Wooooooooooooooooooooooooooooorld Close Opens popover with initial focus! Hello Again Wold Close Test open popup and hide opener Open popup and hide myself focusable element placement-type=&quot;Right&quot; (default) No space on the Right, try Left, Bottom, Top Click me ! Click me ! placement-type=&quot;Right&quot; (default) and allow-target-overlap=true No space on the right, try Left, Bottom, Top and if nothing works, the target will be overlapped Click me ! Click me ! placement-type=&quot;Left&quot; No space on the Left, try Right, Bottom, Top Click me ! Click me ! placement-type=&quot;Left&quot; and allow-target-overlap=true No space on the right, try Roght, Bottom, Top and if nothing works, the target will be overlapped Click me ! Click me ! placement-type=&quot;Top&quot; Click me ! placement-type=&quot;Bottom&quot; Click me ! I am in the header Hello World Again I am in the header Hello World Again I am in the header Hello World Again I am in the header Hello World Again I am in the header Hello World Again I am in the header Hello World Again Actions Delete Product Audit Log Settings OData API Audit Products Laptop Lenovo IPhone 3 HP Monitor 24 Open Popup Left aligned I am in the header I am in the header I am in the header Open Popup Right aligned I am in the header I am in the header I am in the header Right-aligned Popover, wider than button, arrow should be centered on the button Open Lorem ipsum dolor sit amet consectetur adipisicing elit. Magni architecto tenetur quia nam reprehenderit quas eveniet possimus similique quisquam culpa distinctio ex doloremque molestiae maxime sed harum, in exercitationem! Incidunt? First button Second button Sample text for the ui5-popover Open Popover with div Inside I&#39;m a div, which can&#39;t get focus. Click me and see where focus goes. Subscribe Popover on right edge of screen Input field: Popover with accessibleNameRef Some label Hello world Open chained popover 1 Chained Popover 1 Open chained popover 2 Chained Popover 2 Close chained popover 2 Dialog Focus Header text Close Some message Confirm",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Popover/",
    "relUrl": "/playground/main/pages/Popover/"
  },
  "173": {
    "id": "173",
    "title": "Popover",
    "content": "Popover @ui5/webcomponents &lt;ui5-popover&gt; Basic Popover Open Popover Email: Subscribe &lt;ui5-button id=&quot;openPopoverButton&quot; design=&quot;Emphasized&quot;&gt;Open Popover&lt;/ui5-button&gt; &lt;ui5-popover id=&quot;hello-popover&quot; header-text=&quot;Newsletter subscription&quot;&gt; &lt;div class=&quot;popover-content&quot;&gt; &lt;div class=&quot;flex-column&quot;&gt; &lt;ui5-label for=&quot;emailInput&quot; required&gt;Email: &lt;/ui5-label&gt; &lt;ui5-input id=&quot;emailInput&quot; class=&quot;samples-margin-top&quot; placeholder=&quot;Enter Email&quot;&gt;&lt;/ui5-input&gt; &lt;/div&gt; &lt;/div&gt; &lt;div slot=&quot;footer&quot; class=&quot;popover-footer&quot;&gt; &lt;div style=&quot;flex: 1;&quot;&gt;&lt;/div&gt; &lt;ui5-button id=&quot;closePopoverButton&quot; design=&quot;Emphasized&quot;&gt;Subscribe&lt;/ui5-button&gt; &lt;/div&gt; &lt;/ui5-popover&gt; &lt;script&gt; var popoverOpener = document.getElementById(&quot;openPopoverButton&quot;); var popover = document.getElementById(&quot;hello-popover&quot;); var popoverCloser = document.getElementById(&quot;closePopoverButton&quot;); popoverOpener.addEventListener(&quot;click&quot;, function() { popover.showAt(popoverOpener); }); popoverCloser.addEventListener(&quot;click&quot;, function() { popover.close(); }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-popover component displays additional information for an object in a compact way and without leaving the page. The Popover can contain various UI elements, such as fields, tables, images, and charts. It can also include actions in the footer. Structure The popover has three main areas: &lt;ul&gt; &lt;li&gt;Header (optional)&lt;/li&gt; &lt;li&gt;Content&lt;/li&gt; &lt;li&gt;Footer (optional)&lt;/li&gt; &lt;/ul&gt; Note: The ui5-popover is closed when the user clicks or taps outside the popover or selects an action within the popover. You can prevent this with the modal property. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-popover exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;header - Used to style the header of the component&lt;/li&gt; &lt;li&gt;content - Used to style the content of the component&lt;/li&gt; &lt;li&gt;footer - Used to style the footer of the component&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/Popover.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; allowTargetOverlap &lt;br&gt; &lt;code&gt;allow-target-overlap&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines if there is no enough space, the component can be placed over the target. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; headerText &lt;br&gt; &lt;code&gt;header-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the header text. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If &lt;code&gt;header&lt;/code&gt; slot is provided, the &lt;code&gt;headerText&lt;/code&gt; is ignored. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideArrow &lt;br&gt; &lt;code&gt;hide-arrow&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the component arrow is hidden. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideBackdrop &lt;br&gt; &lt;code&gt;hide-backdrop&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the block layer will be shown if modal property is set to true. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.10&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; horizontalAlign &lt;br&gt; &lt;code&gt;horizontal-align&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;PopoverHorizontalAlign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Center&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the horizontal alignment of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Center&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Left&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Right&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Stretch&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; modal &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component should close when clicking/tapping outside of the popover. If enabled, it blocks any interaction with the background. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; opener &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;DOMReference&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the ID or DOM Reference of the element that the popover is shown at &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.2.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; placementType &lt;br&gt; &lt;code&gt;placement-type&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;PopoverPlacementType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Right&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines on which side the component is placed at. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Left&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Right&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Top&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Bottom&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; verticalAlign &lt;br&gt; &lt;code&gt;vertical-align&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;PopoverVerticalAlign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Center&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the vertical alignment of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Center&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Top&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Bottom&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Stretch&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the IDs of the elements that label the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleRole &lt;br&gt; &lt;code&gt;accessible-role&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;PopupAccessibleRole&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Dialog&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Allows setting a custom role. Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;AlertDialog&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; initialFocus &lt;br&gt; &lt;code&gt;initial-focus&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the ID of the HTML Element, which will get the initial focus. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; open &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Indicates if the element is open &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.2.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; preventFocusRestore &lt;br&gt; &lt;code&gt;prevent-focus-restore&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the focus should be returned to the previously focused element, when the popup closes. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.8&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;footer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the footer HTML Element.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;header&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the header HTML Element.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content of the Popup.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;after-close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired after the component is closed. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;after-open&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired after the component is opened. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;before-close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired before the component is closed. This event can be cancelled, which will prevent the popup from closing. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;escPressed&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Indicates that &lt;code&gt;ESC&lt;/code&gt; key has triggered the event.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;before-open&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired before the component is opened. This event can be cancelled, which will prevent the popup from opening. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;showAt&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Shows the popover.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;opener&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the element that the popover is shown at&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;preventInitialFocus&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; prevents applying the focus inside the popover&lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;applyFocus&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Focuses the element denoted by &lt;code&gt;initialFocus&lt;/code&gt;, if provided, or the first focusable element otherwise.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Closes the popup.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;isOpen&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Tells if the component is opened&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Popover/",
    "relUrl": "/playground/components/Popover/"
  },
  "174": {
    "id": "174",
    "title": "Popover Arrow Bounds",
    "content": "&lt;!DOCTYPE html&gt; PopoverArrowBounds 1 2 3 4 5 6 Bigger Popover My Popover",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/PopoverArrowBounds/",
    "relUrl": "/playground/main/pages/PopoverArrowBounds/"
  },
  "175": {
    "id": "175",
    "title": "Popups",
    "content": "&lt;!DOCTYPE html&gt; Popups Countries: OK Argentina Bulgaria China Click me Popups Popover JS Components Web Component Dialog JS Components Web Component Open Dialog Custom Header Custom Footer Accept Open New Dialog Close Dialog Open New Popover Popover Button Open New Popover Open New Dialog Dialog Button Popover JS Components Web Component Open Popover Custom Header Custom Footer Accept Open New Popover Popover Button Open New Popover Close Popover Open New Dialog Open New Dialog Dialog Button",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Popups/",
    "relUrl": "/playground/main/pages/Popups/"
  },
  "176": {
    "id": "176",
    "title": "Product Switch",
    "content": "&lt;!DOCTYPE html&gt; ui5-product-switch",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/ProductSwitch/",
    "relUrl": "/playground/fiori/pages/ProductSwitch/"
  },
  "177": {
    "id": "177",
    "title": "Product Switch",
    "content": "ProductSwitch v1.0.0-rc.5 @ui5/webcomponents-fiori &lt;ui5-product-switch&gt; Basic sample &lt;ui5-product-switch&gt; &lt;ui5-product-switch-item title-text=&quot;Home&quot; subtitle-text=&quot;Central Home&quot; icon=&quot;home&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;Analytics Cloud&quot; subtitle-text=&quot;Analytics Cloud&quot; icon=&quot;business-objects-experience&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;Catalog&quot; subtitle-text=&quot;Ariba&quot; icon=&quot;contacts&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;Travel &amp; Expense&quot; subtitle-text=&quot;Concur&quot; icon=&quot;flight&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;/ui5-product-switch&gt; ProductSwitch within ShellBar &lt;ui5-shellbar id=&quot;shellbar&quot; title-text=&quot;Corporate Portal&quot; secondary-title=&quot;secondary title&quot; logo=&quot;../../../assets/images/sap-logo-svg.svg&quot; show-product-switch show-co-pilot&gt; &lt;/ui5-shellbar&gt; &lt;ui5-popover id=&quot;productswitch-popover&quot; placement-type=&quot;Bottom&quot;&gt; &lt;ui5-product-switch&gt; &lt;ui5-product-switch-item title-text=&quot;Home&quot; subtitle-text=&quot;Central Home&quot; icon=&quot;home&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;Analytics Cloud&quot; subtitle-text=&quot;Analytics Cloud&quot; icon=&quot;business-objects-experience&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;Catalog&quot; subtitle-text=&quot;Ariba&quot; icon=&quot;contacts&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;Guided Buying&quot; icon=&quot;credit-card&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;Strategic Procurement&quot; icon=&quot;cart-3&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;Travel &amp; Expense&quot; subtitle-text=&quot;Concur&quot; icon=&quot;flight&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;Vendor Management&quot; subtitle-text=&quot;Fieldglass&quot; icon=&quot;shipping-status&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;Human Capital Management&quot; icon=&quot;customer&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;Sales Cloud&quot; subtitle-text=&quot;Sales Cloud&quot; icon=&quot;sales-notification&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;Commerce Cloud&quot; subtitle-text=&quot;Commerce Cloud&quot; icon=&quot;retail-store&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;Marketing Cloud&quot; subtitle-text=&quot;Marketing Cloud&quot; icon=&quot;marketing-campaign&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;Service Cloud&quot; icon=&quot;family-care&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;Customer Data Cloud&quot; icon=&quot;customer-briefing&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;ui5-product-switch-item title-text=&quot;S/4HANA&quot; icon=&quot;batch-payments&quot;&gt;&lt;/ui5-product-switch-item&gt; &lt;/ui5-product-switch&gt; &lt;/ui5-popover&gt; &lt;script&gt; var shellBar = document.getElementById(&quot;shellbar&quot;); var popover = document.getElementById(&quot;productswitch-popover&quot;); shellbar.addEventListener(&quot;product-switch-click&quot;, event =&gt; { if (popover.opened) { popover.close(); } else { popover.showAt(event.detail.targetRef); } }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-product-switch is an SAP Fiori specific web component that is used in ui5-shellbar and allows the user to easily switch between products. Keyboard Handling The ui5-product-switch provides advanced keyboard handling. When focused, the user can use the following keyboard shortcuts in order to perform a navigation: &lt;ul&gt; &lt;li&gt;[TAB] - Move focus to the next interactive element after the ui5-product-switch&lt;/li&gt; &lt;li&gt;[UP/DOWN] - Navigates up and down the items &lt;/li&gt; &lt;li&gt;[LEFT/RIGHT] - Navigates left and right the items&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/ProductSwitch.js&quot;; import &quot;@ui5/webcomponents-fiori/dist/ProductSwitchItem.js&quot;; (for ui5-product-switch-item) &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the items of the &lt;code&gt;ui5-product-switch&lt;/code&gt;.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;ProductSwitchItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The &lt;code&gt;ui5-product-switch-item&lt;/code&gt; web component represents the items displayed in the &lt;code&gt;ui5-product-switch&lt;/code&gt; web component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; &lt;code&gt;ui5-product-switch-item&lt;/code&gt; is not supported when used outside of &lt;code&gt;ui5-product-switch&lt;/code&gt;. &lt;br&gt;&lt;br&gt; Keyboard Handling The ui5-product-switch provides advanced keyboard handling. When focused, the user can use the following keyboard shortcuts in order to perform a navigation: &lt;ul&gt; &lt;li&gt;[SPACE/ENTER/RETURN] - Trigger ui5-click event&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/ProductSwitchItem.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the icon to be displayed as a graphical element within the component. &lt;br&gt;&lt;br&gt; Example: &lt;br&gt; &lt;pre&gt;ui5-product-switch-item icon=&quot;palette&quot;&lt;/pre&gt; See all the available icons in the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; subtitleText &lt;br&gt; &lt;code&gt;subtitle-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the subtitle of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; target &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a target where the &lt;code&gt;targetSrc&lt;/code&gt; content must be open. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;_self&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;_top&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;_blank&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;_parent&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;_search&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; targetSrc &lt;br&gt; &lt;code&gt;target-src&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the component target URI. Supports standard hyperlink behavior. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; titleText &lt;br&gt; &lt;code&gt;title-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the title of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the &lt;code&gt;ui5-product-switch-item&lt;/code&gt; is activated either with a click/tap or by using the Enter or Space key. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/ProductSwitch/",
    "relUrl": "/playground/components/ProductSwitch/"
  },
  "178": {
    "id": "178",
    "title": "Product Switch Item",
    "content": "&lt;!DOCTYPE html&gt; ui5-product-switch-item",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/ProductSwitchItem/",
    "relUrl": "/playground/fiori/pages/ProductSwitchItem/"
  },
  "179": {
    "id": "179",
    "title": "Progress Indicator",
    "content": "&lt;!DOCTYPE html&gt; Progress Indicator Value is 0 Value is 100 Value less than 50 Value greater than 50 Value less than 50 without value Value greater than 50 without value ValueState.None ValueState.Error ValueState.Warning ValueState.Success ValueState.Information Disabled ValueState.None ValueState.Error ValueState.Warning ValueState.Success ValueState.Information Disabled Custom Display Value Custom Size 1 Custom Size 2 Test progress indicator Set 0 value Set 25 value Set 50 value Set 75 value Set 100 value Set negative value Set larger than 100 value",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/ProgressIndicator/",
    "relUrl": "/playground/main/pages/ProgressIndicator/"
  },
  "180": {
    "id": "180",
    "title": "Progress Indicator",
    "content": "Progress Indicator v1.0.0-rc.8 @ui5/webcomponents &lt;ui5-progress-indicator&gt; Basic Progress Indicator &lt;ui5-progress-indicator value=&quot;0&quot;&gt;&lt;/ui5-progress-indicator&gt; &lt;ui5-progress-indicator value=&quot;25&quot;&gt;&lt;/ui5-progress-indicator&gt; &lt;ui5-progress-indicator value=&quot;75&quot; disabled&gt;&lt;/ui5-progress-indicator&gt; &lt;ui5-progress-indicator value=&quot;100&quot;&gt;&lt;/ui5-progress-indicator&gt; Progress Indicator With Custom Display Value &lt;ui5-progress-indicator value=&quot;25&quot; display-value=&quot;Custom Display Value&quot;&gt;&lt;/ui5-progress-indicator&gt; Progress Indicator With Value State &lt;ui5-progress-indicator value-state=&quot;None&quot; value=&quot;25&quot;&gt;&lt;/ui5-progress-indicator&gt; &lt;ui5-progress-indicator value-state=&quot;Error&quot; value=&quot;50&quot;&gt;&lt;/ui5-progress-indicator&gt; &lt;ui5-progress-indicator value-state=&quot;Warning&quot; value=&quot;75&quot;&gt;&lt;/ui5-progress-indicator&gt; &lt;ui5-progress-indicator value-state=&quot;Success&quot; value=&quot;90&quot;&gt;&lt;/ui5-progress-indicator&gt; &lt;ui5-progress-indicator value-state=&quot;Information&quot; value=&quot;100&quot;&gt;&lt;/ui5-progress-indicator&gt; Progress Indicator With Custom Sizes &lt;ui5-progress-indicator value=&quot;25&quot; style=&quot;height: 50px; width: 200px;&quot;&gt;&lt;/ui5-progress-indicator&gt; &lt;ui5-progress-indicator value=&quot;75&quot; style=&quot;height: 50px; width: 200px;&quot;&gt;&lt;/ui5-progress-indicator&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; Shows the progress of a process in a graphical way. To indicate the progress, the inside of the component is filled with a color. Responsive Behavior You can change the size of the Progress Indicator by changing its width or height CSS properties. ES6 Module Import import &quot;@ui5/webcomponents/dist/ProgressIndicator.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether component is in disabled state. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; displayValue &lt;br&gt; &lt;code&gt;display-value&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Specifies the text value to be displayed in the bar. &lt;b&gt;Note:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;If there is no value provided or the value is empty, the default percentage value is shown.&lt;/li&gt; &lt;li&gt;If &lt;code&gt;hideValue&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt; both the &lt;code&gt;displayValue&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; property values are not shown.&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideValue &lt;br&gt; &lt;code&gt;hide-value&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component value is shown. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;0&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Specifies the numerical value in percent for the length of the component. &lt;b&gt;Note:&lt;/b&gt; If a value greater than 100 is provided, the percentValue is set to 100. In other cases of invalid value, percentValue is set to its default of 0. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; valueState &lt;br&gt; &lt;code&gt;value-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value state of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Success&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Information&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/ProgressIndicator/",
    "relUrl": "/playground/components/ProgressIndicator/"
  },
  "181": {
    "id": "181",
    "title": "Frameworks",
    "content": "Usage with Frameworks In this section, you can find framework-specific tutorials on how to get started with UI5 Web Components. We have created a bunch of tutorials that cover the integration of UI5 Web Components with some of the most popular existing frameworks. In these tutorials, you will find some framework-specific features &amp; learn how to use them. You might want to check them before you start active development.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/frameworks",
    "relUrl": "/playground/frameworks"
  },
  "182": {
    "id": "182",
    "title": "Getting started",
    "content": "Getting Started Read on to start using UI5 Web Components right away! This section outlines the basic concepts you need to get acquainted with.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/getting-started",
    "relUrl": "/playground/getting-started"
  },
  "183": {
    "id": "183",
    "title": "Advanced",
    "content": "Advanced Concepts This section outlines more advanced concepts, related to application development with UI5 Web Components.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/advanced",
    "relUrl": "/playground/advanced"
  },
  "184": {
    "id": "184",
    "title": "Development",
    "content": "UI5 Web Components Custom Development This section explains how to create your own custom UI5 Web Components packages and develop your own UI5 Web Components.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/development",
    "relUrl": "/playground/development"
  },
  "185": {
    "id": "185",
    "title": "Customizing",
    "content": "Providing Custom Resources This section shows ways (other than the public APIs) to customize UI5 Web Components. Start with: Custom Theming with UI Theme Designer",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/customizing",
    "relUrl": "/playground/customizing"
  },
  "186": {
    "id": "186",
    "title": "Contributing",
    "content": "Contributing to the UI5 Web Components Project Contributions are welcome! This section explains our conventions, how to run the project locally, and more.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/contributing",
    "relUrl": "/playground/contributing"
  },
  "187": {
    "id": "187",
    "title": "R T L",
    "content": "&lt;!DOCTYPE html&gt; RTL and Language EN DE BG ES HE AR Manually switch RTL: This section does not define dir This section defines dir=LTR This section defines dir=RTL",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/RTL/",
    "relUrl": "/playground/main/pages/RTL/"
  },
  "188": {
    "id": "188",
    "title": "Radio Button",
    "content": "&lt;!DOCTYPE html&gt; ui5-radio-button Radios within a group Group1 - None pre-selection Group 2 Group 3 Group 4 Group 5 - Value states N/A 0 Standalone Radios Not Grouped accessibleName accessibleNameRef Label for this radio button: Label for this radio button: *Params - for compact add &#39;ui5-content-density-compact&#39; class to any dom element - for belize use &#39;sap-ui-theme=sap_belize&#39; Navigation in RTL add/remove radio buttons in DOM Form Support Select: Form Support - native HTML Select: Option A Option B Option C",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/RadioButton/",
    "relUrl": "/playground/main/pages/RadioButton/"
  },
  "189": {
    "id": "189",
    "title": "Radio Button",
    "content": "RadioButton @ui5/webcomponents &lt;ui5-radio-button&gt; Basic RadioButton Types &lt;ui5-radio-button text=&quot;Option A&quot; checked name=&quot;GroupA&quot;&gt;&lt;/ui5-radio-button&gt; &lt;ui5-radio-button text=&quot;Option B&quot; value-state=&quot;None&quot; name=&quot;GroupA&quot;&gt;&lt;/ui5-radio-button&gt; &lt;ui5-radio-button text=&quot;Option C&quot; value-state=&quot;Warning&quot; name=&quot;GroupA&quot;&gt;&lt;/ui5-radio-button&gt; &lt;ui5-radio-button text=&quot;Option D&quot; value-state=&quot;Error&quot; name=&quot;GroupA&quot;&gt;&lt;/ui5-radio-button&gt; &lt;ui5-radio-button text=&quot;Option C&quot; value-state=&quot;Success&quot; name=&quot;GroupA&quot;&gt;&lt;/ui5-radio-button&gt; &lt;ui5-radio-button text=&quot;Option D&quot; value-state=&quot;Information&quot; name=&quot;GroupA&quot;&gt;&lt;/ui5-radio-button&gt; &lt;ui5-radio-button text=&quot;Option E&quot; disabled name=&quot;GroupA&quot;&gt;&lt;/ui5-radio-button&gt; &lt;ui5-radio-button text=&quot;Option F&quot; readonly name=&quot;GroupA&quot;&gt;&lt;/ui5-radio-button&gt; RadioButton in group - navigate via [UP/Right] and [DOWN/Left] arrow keys Group of states Selected radio: None Group of options Selected radio: Option A &lt;script&gt; radioGroup.addEventListener(&quot;change&quot;, function(e) { lblRadioGroup.innerHTML = e.target.text; }); &lt;/script&gt; &lt;div aria-labelledby=&quot;radioGroupTitle1&quot; role=&quot;radiogroup&quot; id=&quot;radioGroup&quot; class=&quot;radio-button-group&quot;&gt; &lt;ui5-title id=&quot;radioGroupTitle1&quot;&gt;Group of states&lt;/ui5-title&gt; &lt;ui5-label id=&quot;lblRadioGroup&quot;&gt;Selected radio: None&lt;/ui5-label&gt; &lt;ui5-radio-button text=&quot;None&quot; value-state=&quot;None&quot; checked name=&quot;GroupB&quot;&gt;&lt;/ui5-radio-button&gt; &lt;ui5-radio-button text=&quot;Warning&quot; value-state=&quot;Warning&quot; name=&quot;GroupB&quot;&gt;&lt;/ui5-radio-button&gt; &lt;ui5-radio-button text=&quot;Error&quot; value-state=&quot;Error&quot; name=&quot;GroupB&quot;&gt;&lt;/ui5-radio-button&gt; &lt;ui5-radio-button text=&quot;Success&quot; value-state=&quot;Success&quot; name=&quot;GroupB&quot;&gt;&lt;/ui5-radio-button&gt; &lt;ui5-radio-button text=&quot;Information&quot; value-state=&quot;Information&quot; name=&quot;GroupB&quot;&gt;&lt;/ui5-radio-button&gt; &lt;/div&gt; &lt;div aria-labelledby=&quot;radioGroupTitle2&quot; role=&quot;radiogroup&quot; id=&quot;radioGroup2&quot; class=&quot;radio-button-group&quot;&gt; &lt;ui5-title id=&quot;radioGroupTitle2&quot;&gt;Group of options&lt;/ui5-title&gt; &lt;ui5-label id=&quot;lblRadioGroup2&quot;&gt;Selected radio: Option A&lt;/ui5-label&gt; &lt;ui5-radio-button text=&quot;Option A&quot; checked name=&quot;GroupC&quot;&gt;&lt;/ui5-radio-button&gt; &lt;ui5-radio-button text=&quot;Option B&quot; value-state=&quot;None&quot; name=&quot;GroupC&quot;&gt;&lt;/ui5-radio-button&gt; &lt;ui5-radio-button text=&quot;Option C&quot; value-state=&quot;None&quot; name=&quot;GroupC&quot;&gt;&lt;/ui5-radio-button&gt; &lt;/div&gt; RadioButton with Text Wrapping &lt;ui5-radio-button text=&quot;ui5-radio-button with &#39;wrapping-type=Normal&#39; set and some long text&quot; wrapping-type=&quot;Normal&quot;&gt;&lt;/ui5-radio-button&gt; &lt;ui5-radio-button text=&quot;Another ui5-radio-button with very long text here&quot; wrapping-type=&quot;Normal&quot;&gt;&lt;/ui5-radio-button&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-radio-button component enables users to select a single option from a set of options. When a ui5-radio-button is selected by the user, the change event is fired. When a ui5-radio-button that is within a group is selected, the one that was previously selected gets automatically deselected. You can group radio buttons by using the name property. Note: If ui5-radio-button is not part of a group, it can be selected once, but can not be deselected back. Keyboard Handling Once the ui5-radio-button is on focus, it might be selected by pressing the Space and Enter keys. The Arrow Down/Arrow Up and Arrow Left/Arrow Right keys can be used to change selection between next/previous radio buttons in one group, while TAB and SHIFT + TAB can be used to enter or leave the radio button group. Note: On entering radio button group, the focus goes to the currently selected radio button. ES6 Module Import import &quot;@ui5/webcomponents/dist/RadioButton&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.6.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the IDs of the elements that label the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; checked &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is checked or not. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The property value can be changed with user interaction, either by clicking/tapping on the component, or by using the Space or Enter key. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is disabled. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A disabled component is completely noninteractive. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; name &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the name of the component. Radio buttons with the same &lt;code&gt;name&lt;/code&gt; will form a radio button group. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The selection can be changed with &lt;code&gt;ARROW_UP/DOWN&lt;/code&gt; and &lt;code&gt;ARROW_LEFT/RIGHT&lt;/code&gt; keys between radio buttons in same group. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Only one radio button can be selected per group. &lt;br&gt;&lt;br&gt; &lt;b&gt;Important:&lt;/b&gt; For the &lt;code&gt;name&lt;/code&gt; property to have effect when submitting forms, you must add the following import to your project: &lt;code&gt;import &quot;@ui5/webcomponents/dist/features/InputElementsFormSupport.js&quot;;&lt;/code&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When set, a native &lt;code&gt;input&lt;/code&gt; HTML element will be created inside the component so that it can be submitted as part of an HTML form. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; readonly &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is read-only. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A read-only component is not editable, but still provides visual feedback upon user interaction. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; required &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is required. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.9.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the form value of the component. When a form with a radio button group is submitted, the group&#39;s value will be the value of the currently selected radio button. &lt;br&gt; &lt;b&gt;Important:&lt;/b&gt; For the &lt;code&gt;value&lt;/code&gt; property to have effect, you must add the following import to your project: &lt;code&gt;import &quot;@ui5/webcomponents/dist/features/InputElementsFormSupport.js&quot;;&lt;/code&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; valueState &lt;br&gt; &lt;code&gt;value-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value state of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Success&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Information&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; wrappingType &lt;br&gt; &lt;code&gt;wrapping-type&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;WrappingType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component text wraps when there is not enough space. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt; - The text will be truncated with an ellipsis.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Normal&lt;/code&gt; - The text will wrap. The words will not be broken based on hyphenation.&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the component checked state changes. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/RadioButton/",
    "relUrl": "/playground/components/RadioButton/"
  },
  "190": {
    "id": "190",
    "title": "Range Slider",
    "content": "&lt;!DOCTYPE html&gt; UI5 Range Slider Basic Range Slider Range Slider with custom min and max properties and tooltip Range Slider with small step and tooltip Range Slider with tickmarks Disabled Range Slider Range Slider with steps, tooltips, tickmarks and labels Event Testing Slider startValue in the change event: endValue in the change event: startValue in the input event: endValue in the input event: Event Testing Result Slider",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/RangeSlider/",
    "relUrl": "/playground/main/pages/RangeSlider/"
  },
  "191": {
    "id": "191",
    "title": "Range Slider",
    "content": "Range Slider v1.0.0-rc.11 @ui5/webcomponents &lt;ui5-range-slider&gt; Basic Range Slider &lt;ui5-range-slider end-value=&quot;20&quot;&gt;&lt;/ui5-range-slider&gt; Range Slider with Custom &#39;min&#39;, &#39;max&#39;, &#39;startValue&#39; and &#39;endValue&#39; Properties &lt;ui5-range-slider min=&quot;100&quot; max=&quot;200&quot; start-value=&quot;120&quot; end-value=&quot;150&quot;&gt;&lt;/ui5-range-slider&gt; Range Slider with Tooltips &lt;ui5-range-slider start-value=&quot;3&quot; end-value=&quot;13&quot; show-tooltip&gt;&lt;/ui5-range-slider&gt; Range Slider with Tickmarks and Custom Step &lt;ui5-range-slider step=&quot;2&quot; start-value=&quot;4&quot; end-value=&quot;12&quot; show-tickmarks&gt;&lt;/ui5-range-slider&gt; Range Slider with Tooltips, Tickmarks and Labels &lt;ui5-range-slider min=&quot;0&quot; max=&quot;112&quot; step=&quot;2&quot; start-value=&quot;4&quot; end-value=&quot;12&quot; show-tooltip label-interval=&quot;2&quot; show-tickmarks&gt;&lt;/ui5-range-slider&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; Represents a numerical interval and two handles (grips) to select a sub-range within it. The purpose of the component to enable visual selection of sub-ranges within a given interval. Structure The most important properties of the Range Slider are: &lt;ul&gt; &lt;li&gt;min - The minimum value of the slider range.&lt;/li&gt; &lt;li&gt;max - The maximum value of the slider range.&lt;/li&gt; &lt;li&gt;value - The current value of the slider.&lt;/li&gt; &lt;li&gt;step - Determines the increments in which the slider will move.&lt;/li&gt; &lt;li&gt;showTooltip - Determines if a tooltip should be displayed above the handle.&lt;/li&gt; &lt;li&gt;showTickmarks - Displays a visual divider between the step values.&lt;/li&gt; &lt;li&gt;labelInterval - Labels some or all of the tickmarks with their values.&lt;/li&gt; &lt;/ul&gt; &lt;h4&gt;Notes:&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;The right and left handle can be moved individually and their positions could therefore switch.&lt;/li&gt; &lt;li&gt;The entire range can be moved along the interval.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;Usage&lt;/h3&gt; The most common use case is to select and move sub-ranges on a continuous numerical scale. Responsive Behavior You can move the currently selected range by clicking on it and dragging it along the interval. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-range-slider exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;progress-container - Used to style the progress container(the horizontal bar which visually represents the range between the minimum and maximum value) of the ui5-range-slider.&lt;/li&gt; &lt;li&gt;progress-bar - Used to style the progress bar, which shows the progress of the ui5-range-slider.&lt;/li&gt; &lt;li&gt;handle - Used to style the handles of the ui5-range-slider.&lt;/li&gt; &lt;/ul&gt; Keyboard Handling Left or Down Arrow - Moves a component&#39;s handle or the entire selection one step to the left; Right or Up Arrow - Moves a component&#39;s handle or the entire selection one step to the right; Left or Down Arrow + Ctrl/Cmd - Moves a component&#39;s handle to the left or the entire range with step equal to 1/10th of the entire range; Right or Up Arrow + Ctrl/Cmd - Moves a component&#39;s handle to the right or the entire range with step equal to 1/10th of the entire range; Plus - Same as Right or Up Arrow; Minus - Same as Left or Down Arrow; Home - Moves the entire selection or the selected handle to the beginning of the component&#39;s range; End - Moves the entire selection or the selected handle to the end of the component&#39;s range; Page Up - Same as Right or Up Arrow + Ctrl/Cmd; Page Down - Same as Left or Down Arrow + Ctrl/Cmd; Escape - Resets the startValue and endValue properties to the values prior the component focusing; ES6 Module Import import &quot;@ui5/webcomponents/dist/RangeSlider&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; endValue &lt;br&gt; &lt;code&gt;end-value&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Float&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;100&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines end point of a selection - position of a second handle on the slider. &lt;br&gt;&lt;br&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; startValue &lt;br&gt; &lt;code&gt;start-value&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Float&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;0&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines start point of a selection - position of a first handle on the slider. &lt;br&gt;&lt;br&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.4.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the slider is in disabled state. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; labelInterval &lt;br&gt; &lt;code&gt;label-interval&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;0&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Displays a label with a value on every N-th step. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The step and tickmarks properties must be enabled. Example - if the step value is set to 2 and the label interval is also specified to 2 - then every second tickmark will be labelled, which means every 4th value number. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; max &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Float&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;100&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the maximum value of the slider. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; min &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Float&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;0&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the minimum value of the slider. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showTickmarks &lt;br&gt; &lt;code&gt;show-tickmarks&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Enables tickmarks visualization for each step. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The step must be a positive number. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showTooltip &lt;br&gt; &lt;code&gt;show-tooltip&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Enables handle tooltip displaying the current value. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; step &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;1&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the size of the slider&#39;s selection intervals (e.g. min = 0, max = 10, step = 5 would result in possible selection of the values 0, 5, 10). &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If set to 0 the slider handle movement is disabled. When negative number or value other than a number, the component fallbacks to its default value. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the value changes and the user has finished interacting with the slider. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;input&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the value changes due to user interaction that is not yet finished - during mouse/touch dragging. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/RangeSlider/",
    "relUrl": "/playground/components/RangeSlider/"
  },
  "192": {
    "id": "192",
    "title": "Rating Indicator",
    "content": "&lt;!DOCTYPE html&gt; Rating Indicator test change event readonly disabled RatingIndicator with title sizes",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/RatingIndicator/",
    "relUrl": "/playground/main/pages/RatingIndicator/"
  },
  "193": {
    "id": "193",
    "title": "Rating Indicator",
    "content": "Rating Indicator v1.0.0-rc.8 @ui5/webcomponents &lt;ui5-rating-indicator&gt; Basic Rating Indicator &lt;ui5-rating-indicator&gt;&lt;/ui5-rating-indicator&gt; &lt;ui5-rating-indicator value=&quot;3&quot;&gt;&lt;/ui5-rating-indicator&gt; &lt;ui5-rating-indicator value=&quot;3.7&quot;&gt;&lt;/ui5-rating-indicator&gt; Rating Indicator With Different Max Value &lt;ui5-rating-indicator max=&quot;10&quot; value=&quot;5&quot;&gt;&lt;/ui5-rating-indicator&gt; &lt;ui5-rating-indicator max=&quot;3&quot; value=&quot;3&quot;&gt;&lt;/ui5-rating-indicator&gt; Disabled Rating Indicator &lt;ui5-rating-indicator value=&quot;4&quot; disabled&gt;&lt;/ui5-rating-indicator&gt; &lt;ui5-rating-indicator max=&quot;10&quot; value=&quot;5&quot; disabled&gt;&lt;/ui5-rating-indicator&gt; &lt;ui5-rating-indicator max=&quot;6&quot; value=&quot;6&quot; disabled&gt;&lt;/ui5-rating-indicator&gt; Readonly Rating Indicator &lt;ui5-rating-indicator value=&quot;4&quot; readonly&gt;&lt;/ui5-rating-indicator&gt; &lt;ui5-rating-indicator max=&quot;7&quot; value=&quot;5&quot; readonly&gt;&lt;/ui5-rating-indicator&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The Rating Indicator is used to display a specific number of icons that are used to rate an item. Additionally, it is also used to display the average and overall ratings. Usage The recommended number of icons is between 5 and 7. Responsive Behavior You can change the size of the Rating Indicator by changing its font-size CSS property. Example: &lt;ui5-rating-indicator style=&quot;font-size: 3rem;&quot;&gt;&lt;/ui5-rating-indicator&gt; Keyboard Handling When the ui5-rating-indicator is focused, the user can change the rating with the following keyboard shortcuts: [RIGHT/UP] - Increases the value of the rating by one step. If the highest value is reached, does nothing [LEFT/DOWN] - Decreases the value of the rating by one step. If the lowest value is reached, does nothing. [HOME] - Sets the lowest value. [END] - Sets the highest value. [SPACE/ENTER/RETURN] - Increases the value of the rating by one step. If the highest value is reached, sets the rating to the lowest value. Any number - Changes value to the corresponding number. If typed number is larger than the number of values, sets the highest value. ES6 Module Import import &quot;@ui5/webcomponents/dist/RatingIndicator.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is disabled. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A disabled component is completely noninteractive. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; max &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;5&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; The number of displayed rating symbols. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; readonly &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is read-only. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A read-only component is not editable, but still provides visual feedback upon user interaction. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Float&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;0&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; The indicated value of the rating. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If you set a number which is not round, it would be shown as follows: &lt;ul&gt; &lt;li&gt;1.0 - 1.2 -&gt; 1&lt;/li&gt; &lt;li&gt;1.3 - 1.7 -&gt; 1.5&lt;/li&gt; &lt;li&gt;1.8 - 1.9 -&gt; 2&lt;/li&gt; &lt;ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; The event is fired when the value changes. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/RatingIndicator/",
    "relUrl": "/playground/components/RatingIndicator/"
  },
  "194": {
    "id": "194",
    "title": "Resize Handler",
    "content": "&lt;!DOCTYPE html&gt; Button With media queries With ResizeHandler",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/ResizeHandler/",
    "relUrl": "/playground/main/pages/ResizeHandler/"
  },
  "195": {
    "id": "195",
    "title": "Responsive Popover",
    "content": "&lt;!DOCTYPE html&gt; ResponsivePopover Open me Open me Header/Footer hidden on Desktop accessibleName Open with Attribute Hello World Email: Subscribe Email: You are already subscribed. Cancel Hello World Email: Subscribe Header Hello World Close Close with Method Close with Attribute Inputs based component that opens popover/dialog within dialog Open Dialog Cozy Compact Condensed Open Simple RP Content RP on Top with downward pointing arrow text Open RP and Focus Content Open RP and prevent initial focus Content Open RP that opens a Popover Open Popover Test popover RP over a Dialog Header 1 Open a new RP Header 2 Open a new RP Header 3 Close Role = &#39;AlertDialog&#39; Role &#39;AlertDialog&#39; Hello World! Role = &#39;None&#39; Role &#39;None&#39; Hello World!",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/ResponsivePopover/",
    "relUrl": "/playground/main/pages/ResponsivePopover/"
  },
  "196": {
    "id": "196",
    "title": "Responsive Popover",
    "content": "ResponsivePopover v1.0.0-rc.6 @ui5/webcomponents &lt;ui5-responsive-popover&gt; Basic ResponsivePopover Open ResponsivePopover Email: Note: If you open the page in mobile, dialog would be displayed. Subscribe &lt;ui5-button id=&quot;openBtn&quot; design=&quot;Emphasized&quot;&gt;Open Popover&lt;/ui5-button&gt; &lt;ui5-responsive-popover id=&quot;hello-popover&quot; header-text=&quot;Newsletter subscription&quot;&gt; &lt;div class=&quot;flex-column&quot;&gt; &lt;ui5-label for=&quot;emailInput&quot; required&gt;Email: &lt;/ui5-label&gt; &lt;ui5-input id=&quot;emailInput&quot; class=&quot;samples-margin-top&quot; placeholder=&quot;Enter Email&quot;&gt;&lt;/ui5-input&gt; &lt;ui5-label&gt;Note: If you open the page in mobile, dialog would be displayed.&lt;/ui5-label&gt; &lt;/div&gt; &lt;div slot=&quot;footer&quot; class=&quot;popover-footer&quot;&gt; &lt;div style=&quot;flex: 1;&quot;&gt;&lt;/div&gt; &lt;ui5-button id=&quot;closePopoverButton&quot; design=&quot;Emphasized&quot;&gt;Subscribe&lt;/ui5-button&gt; &lt;/div&gt; &lt;/ui5-responsive-popover&gt; &lt;script&gt; var popover = document.getElementById(&quot;hello-popover&quot;); var popoverOpener = document.getElementById(&quot;openBtn&quot;); var popoverCloser = document.getElementById(&quot;closePopoverButton&quot;); popoverOpener.addEventListener(&quot;click&quot;, function() { popover.showAt(popoverOpener); }); popoverCloser.addEventListener(&quot;click&quot;, function() { popover.close(); }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The &lt;code&gt;ui5-responsive-popover&lt;/code&gt; acts as a Popover on desktop and tablet, while on phone it acts as a Dialog. The component improves tremendously the user experience on mobile. Usage Use it when you want to make sure that all the content is visible on any device. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-responsive-popover exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;header - Used to style the header of the component&lt;/li&gt; &lt;li&gt;content - Used to style the content of the component&lt;/li&gt; &lt;li&gt;footer - Used to style the footer of the component&lt;/li&gt; &lt;/ul&gt; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; allowTargetOverlap &lt;br&gt; &lt;code&gt;allow-target-overlap&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines if there is no enough space, the component can be placed over the target. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; headerText &lt;br&gt; &lt;code&gt;header-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the header text. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If &lt;code&gt;header&lt;/code&gt; slot is provided, the &lt;code&gt;headerText&lt;/code&gt; is ignored. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideArrow &lt;br&gt; &lt;code&gt;hide-arrow&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the component arrow is hidden. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideBackdrop &lt;br&gt; &lt;code&gt;hide-backdrop&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the block layer will be shown if modal property is set to true. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.10&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; horizontalAlign &lt;br&gt; &lt;code&gt;horizontal-align&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;PopoverHorizontalAlign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Center&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the horizontal alignment of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Center&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Left&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Right&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Stretch&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; modal &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component should close when clicking/tapping outside of the popover. If enabled, it blocks any interaction with the background. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; opener &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;DOMReference&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the ID or DOM Reference of the element that the popover is shown at &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.2.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; placementType &lt;br&gt; &lt;code&gt;placement-type&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;PopoverPlacementType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Right&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines on which side the component is placed at. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Left&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Right&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Top&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Bottom&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; verticalAlign &lt;br&gt; &lt;code&gt;vertical-align&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;PopoverVerticalAlign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Center&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the vertical alignment of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Center&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Top&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Bottom&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Stretch&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the IDs of the elements that label the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleRole &lt;br&gt; &lt;code&gt;accessible-role&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;PopupAccessibleRole&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Dialog&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Allows setting a custom role. Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;AlertDialog&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; initialFocus &lt;br&gt; &lt;code&gt;initial-focus&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the ID of the HTML Element, which will get the initial focus. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; open &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Indicates if the element is open &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.2.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; preventFocusRestore &lt;br&gt; &lt;code&gt;prevent-focus-restore&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the focus should be returned to the previously focused element, when the popup closes. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.8&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;footer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the footer HTML Element.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;header&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the header HTML Element.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content of the Popup.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;after-close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired after the component is closed. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;after-open&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired after the component is opened. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;before-close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired before the component is closed. This event can be cancelled, which will prevent the popup from closing. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;escPressed&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Indicates that &lt;code&gt;ESC&lt;/code&gt; key has triggered the event.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;before-open&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired before the component is opened. This event can be cancelled, which will prevent the popup from opening. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Closes the popover/dialog.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;isOpen&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Tells if the responsive popover is open.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;showAt&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Shows popover on desktop and dialog on mobile.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;opener&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the element that the popover is shown at&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;preventInitialFocus&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; Prevents applying the focus inside the popup&lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;applyFocus&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Focuses the element denoted by &lt;code&gt;initialFocus&lt;/code&gt;, if provided, or the first focusable element otherwise.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/ResponsivePopover/",
    "relUrl": "/playground/components/ResponsivePopover/"
  },
  "197": {
    "id": "197",
    "title": "Segmented Button",
    "content": "&lt;!DOCTYPE html&gt; ui5-segmented-button ui5-segmented-button Segmentedbutton example Item SegmentedButtonItem Item Example with 4 items Item Item Click Pressed SegmentedButtonItem Example with 5 items Word Pressed SegmentedButtonItem With Bigger Text Item Pressed SegmentedButtonItem A Example with Icons and custom width SegmentedButton with 100% width Pressed SegmentedButtonItem SegmentedButtonItem SegmentedButtonItem SegmentedButton wrapped in a container with set width Initial focus test the focus should go to the first item Press Press",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/SegmentedButton/",
    "relUrl": "/playground/main/pages/SegmentedButton/"
  },
  "198": {
    "id": "198",
    "title": "Segmented Button",
    "content": "SegmentedButton v1.0.0-rc.6 @ui5/webcomponents &lt;ui5-segmented-button&gt; Basic SegmentedButton Map Satellite Terrain &lt;ui5-segmented-button accessible-name=&quot;Geographic location&quot;&gt; &lt;ui5-segmented-button-item&gt;Map&lt;/ui5-segmented-button-item&gt; &lt;ui5-segmented-button-item pressed&gt;Satellite&lt;/ui5-segmented-button-item&gt; &lt;ui5-segmented-button-item&gt;Terrain&lt;/ui5-segmented-button-item&gt; &lt;/ui5-segmented-button&gt; SegmentedButton with Icons &lt;ui5-segmented-button&gt; &lt;ui5-segmented-button-item icon=&quot;employee&quot; pressed&gt;&lt;/ui5-segmented-button-item&gt; &lt;ui5-segmented-button-item icon=&quot;menu&quot;&gt;&lt;/ui5-segmented-button-item&gt; &lt;ui5-segmented-button-item icon=&quot;factory&quot;&gt;&lt;/ui5-segmented-button-item&gt; &lt;/ui5-segmented-button&gt; SegmentedButton with 5 SegmentedButtonItems Item Pressed SegmentedButtonItem With Bigger Text Item SegmentedButtonItem Press me &lt;ui5-segmented-button&gt; &lt;ui5-segmented-button-item&gt;Item&lt;/ui5-segmented-button-item&gt; &lt;ui5-segmented-button-item pressed&gt;Pressed SegmentedButtonItem With Bigger Text&lt;/ui5-segmented-button-item&gt; &lt;ui5-segmented-button-item&gt;Item&lt;/ui5-segmented-button-item&gt; &lt;ui5-segmented-button-item&gt;SegmentedButtonItem&lt;/ui5-segmented-button-item&gt; &lt;ui5-segmented-button-item&gt;Press me&lt;/ui5-segmented-button-item&gt; &lt;/ui5-segmented-button&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-segmented-button shows a group of items. When the user clicks or taps one of the items, it stays in a pressed state. It automatically resizes the items to fit proportionally within the component. When no width is set, the component uses the available width. Note: There can be just one selected item at a time. ES6 Module Import import &quot;@ui5/webcomponents/dist/SegmentedButton&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.3&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selectedItem (readonly) &lt;br&gt; &lt;code&gt;selected-item&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ISegmentedButtonItem&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Currently selected item. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the items of &lt;code&gt;ui5-segmented-button&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Multiple items are allowed. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Use the &lt;code&gt;ui5-segmented-button-item&lt;/code&gt; for the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;selection-change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the selected item changes. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;selectedItem&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the pressed item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;SegmentedButtonItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; Users can use the ui5-segmented-button-item as part of a ui5-segmented-button. Clicking or tapping on a ui5-segmented-button-item changes its state to pressed. The item returns to its initial state when the user clicks or taps on it again. By applying additional custom CSS-styling classes, apps can give a different style to any ui5-segmented-button-item. ES6 Module Import import &quot;@ui5/webcomponents/dist/SegmentedButtonItem&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; design &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.types.ButtonDesign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Default&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; &lt;b&gt;Note:&lt;/b&gt; The property is inherited and not supported. If set, it won&#39;t take any effect. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; iconEnd &lt;br&gt; &lt;code&gt;icon-end&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; &lt;b&gt;Note:&lt;/b&gt; The property is inherited and not supported. If set, it won&#39;t take any effect. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; submits &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; &lt;b&gt;Note:&lt;/b&gt; The property is inherited and not supported. If set, it won&#39;t take any effect. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; pressed &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the component is displayed as pressed. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibilityAttributes &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;object&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; An object of strings that defines several additional accessibility attribute values for customization depending on the use case. It supports the following fields: &lt;ul&gt; &lt;li&gt;&lt;code&gt;expanded&lt;/code&gt;: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: &lt;ul&gt; &lt;li&gt;&lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;false&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;hasPopup&lt;/code&gt;: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Grid&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ListBox&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tree&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;controls&lt;/code&gt;: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.2.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is disabled. A disabled component can&#39;t be pressed or focused, and it is not in the tab chain. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the icon, displayed as graphical element within the component. The SAP-icons font provides numerous options. &lt;br&gt;&lt;br&gt; Example: See all the available icons within the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; tooltip &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the tooltip of the component. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A tooltip attribute should be provided for icon-only buttons, in order to represent their exact meaning/function. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.2.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the text of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the component is activated either with a mouse/tap or by using the Enter or Space key. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The event will not be fired if the &lt;code&gt;disabled&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/SegmentedButton/",
    "relUrl": "/playground/components/SegmentedButton/"
  },
  "199": {
    "id": "199",
    "title": "Select",
    "content": "&lt;!DOCTYPE html&gt; ui5-select turn lights Add new Items Restore Items click Content size Cozy Compact Condensed Error Select Cozy Compact Condensed Warning Select This option has text bigger than ui5-select&#39;s width Information message. This is a Link. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3. Success Select Cozy Compact Condensed Success Select Cozy Compact Condensed Disabled Select Input with suggestions Selection not cycling Opt1 Opt2 Opt3 Opt1 Opt2 Opt3 Cozy Compact Condensed Banana Orange Watermelon Change event counter holder Open event counter holder Close event counter holder Select aria-label and aria-labelledby info text First Second Third One Two Three Select in Compact Cozy Compact Condensed Select with a disabled option Cozy Compact Condensed Select with additional text Algeria Argentina Australia",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Select/",
    "relUrl": "/playground/main/pages/Select/"
  },
  "200": {
    "id": "200",
    "title": "Select",
    "content": "Select v0.8.0 @ui5/webcomponents &lt;ui5-select&gt; Basic Select Phone Tablet Desktop Phone Tablet Desktop &lt;ui5-select class=&quot;select&quot;&gt; &lt;ui5-option icon=&quot;iphone&quot;&gt;Phone&lt;/ui5-option&gt; &lt;ui5-option icon=&quot;ipad&quot;&gt;Tablet&lt;/ui5-option&gt; &lt;ui5-option icon=&quot;laptop&quot; selected&gt;Desktop&lt;/ui5-option&gt; &lt;/ui5-select&gt; &lt;ui5-select disabled class=&quot;select&quot;&gt; &lt;ui5-option icon=&quot;iphone&quot; selected&gt;Phone&lt;/ui5-option&gt; &lt;ui5-option icon=&quot;ipad&quot;&gt;Tablet&lt;/ui5-option&gt; &lt;ui5-option icon=&quot;laptop&quot;&gt;Desktop&lt;/ui5-option&gt; &lt;/ui5-select&gt; Select with Value State and Value State Message Apple Avocado Mango Orange Pumpkin Carrot Information message. This is a Link. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3. Information message 2. This is a Link. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3. Strawberry Tomato Red Chili Pepper Information message. This is a Link. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3. Information message 2. This is a Link. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3. Blueberry Grape Plum Information message. This is a Link. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3. Information message 2. This is a Link. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3. &lt;ui5-select value-state=&quot;Success&quot; class=&quot;select&quot;&gt; &lt;ui5-option icon=&quot;meal&quot; selected&gt;Apple&lt;/ui5-option&gt; &lt;ui5-option icon=&quot;meal&quot;&gt;Avocado&lt;/ui5-option&gt; &lt;ui5-option icon=&quot;meal&quot;&gt;Mango&lt;/ui5-option&gt; &lt;/ui5-select&gt; &lt;ui5-select value-state=&quot;Warning&quot; class=&quot;select&quot;&gt; &lt;ui5-option icon=&quot;meal&quot;&gt;Orange&lt;/ui5-option&gt; &lt;ui5-option icon=&quot;meal&quot; selected&gt;Pumpkin&lt;/ui5-option&gt; &lt;ui5-option icon=&quot;meal&quot;&gt;Carrot&lt;/ui5-option&gt; &lt;div slot=&quot;valueStateMessage&quot;&gt;Information message. This is a &lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3.&lt;/div&gt; &lt;div slot=&quot;valueStateMessage&quot;&gt;Information message 2. This is a &lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3.&lt;/div&gt; &lt;/ui5-select&gt; &lt;ui5-select value-state=&quot;Error&quot; class=&quot;select&quot;&gt; &lt;ui5-option icon=&quot;meal&quot;&gt;Strawberry&lt;/ui5-option&gt; &lt;ui5-option icon=&quot;meal&quot;&gt;Tomato&lt;/ui5-option&gt; &lt;ui5-option icon=&quot;meal&quot; selected&gt;Red Chili Pepper&lt;/ui5-option&gt; &lt;div slot=&quot;valueStateMessage&quot;&gt;Information message. This is a &lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3.&lt;/div&gt; &lt;div slot=&quot;valueStateMessage&quot;&gt;Information message 2. This is a &lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3.&lt;/div&gt; &lt;/ui5-select&gt; &lt;ui5-select value-state=&quot;Information&quot; class=&quot;select&quot;&gt; &lt;ui5-option icon=&quot;meal&quot;&gt;Blueberry&lt;/ui5-option&gt; &lt;ui5-option icon=&quot;meal&quot;&gt;Grape&lt;/ui5-option&gt; &lt;ui5-option icon=&quot;meal&quot; selected&gt;Plum&lt;/ui5-option&gt; &lt;div slot=&quot;valueStateMessage&quot;&gt;Information message. This is a &lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3.&lt;/div&gt; &lt;div slot=&quot;valueStateMessage&quot;&gt;Information message 2. This is a &lt;a href=&quot;#&quot;&gt;Link&lt;/a&gt;. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3.&lt;/div&gt; &lt;/ui5-select&gt; Select with Two-Column Layout Items Austria Belgium Brazil Bulgaria Canada &lt;ui5-select class=&quot;select&quot;&gt; &lt;ui5-option additional-text=&quot;AT&quot;&gt;Austria&lt;/ui5-option&gt; &lt;ui5-option additional-text=&quot;BE&quot;&gt;Belgium&lt;/ui5-option&gt; &lt;ui5-option additional-text=&quot;BR&quot;&gt;Brazil&lt;/ui5-option&gt; &lt;ui5-option additional-text=&quot;BG&quot;&gt;Bulgaria&lt;/ui5-option&gt; &lt;ui5-option additional-text=&quot;CA&quot;&gt;Canada&lt;/ui5-option&gt; &lt;/ui5-select&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The &lt;code&gt;ui5-select&lt;/code&gt; component is used to create a drop-down list. The items inside the &lt;code&gt;ui5-select&lt;/code&gt; define the available options by using the &lt;code&gt;ui5-option&lt;/code&gt; component. Keyboard Handling The ui5-select provides advanced keyboard handling. &lt;ul&gt; &lt;li&gt;[F4, ALT+UP, ALT+DOWN, SPACE, ENTER] - Opens/closes the drop-down.&lt;/li&gt; &lt;li&gt;[UP, DOWN] - If the drop-down is closed - changes selection to the next or the previous option. If the drop-down is opened - moves focus to the next or the previous option.&lt;/li&gt; &lt;li&gt;[SPACE, ENTER] - If the drop-down is opened - selects the focused option.&lt;/li&gt; &lt;li&gt;[ESC] - Closes the drop-down without changing the selection.&lt;/li&gt; &lt;li&gt;[HOME] - Navigates to first option&lt;/li&gt; &lt;li&gt;[END] - Navigates to the last option&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/Select&quot;; import &quot;@ui5/webcomponents/dist/Option&quot;; (comes with ui5-select) &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the select. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is in disabled state. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A disabled component is noninteractive. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; name &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the name with which the component will be submitted in an HTML form. The value of the component will be the value of the currently selected &lt;code&gt;ui5-option&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Important:&lt;/b&gt; For the &lt;code&gt;name&lt;/code&gt; property to have effect, you must add the following import to your project: &lt;code&gt;import &quot;@ui5/webcomponents/dist/features/InputElementsFormSupport.js&quot;;&lt;/code&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When set, a native &lt;code&gt;input&lt;/code&gt; HTML element will be created inside the &lt;code&gt;ui5-select&lt;/code&gt; so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; required &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is required. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.9&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; valueState &lt;br&gt; &lt;code&gt;value-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value state of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Success&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Information&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the component options. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Only one selected option is allowed. If more than one option is defined as selected, the last one would be considered as the selected one. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Use the &lt;code&gt;ui5-option&lt;/code&gt; component to define the desired options.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;valueStateMessage&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the value state message that will be displayed as pop up under the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If not specified, a default text (in the respective language) will be displayed. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;valueStateMessage&lt;/code&gt; would be displayed, when the component is in &lt;code&gt;Information&lt;/code&gt;, &lt;code&gt;Warning&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt; value state. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If the component has &lt;code&gt;suggestionItems&lt;/code&gt;, the &lt;code&gt;valueStateMessage&lt;/code&gt; would be displayed as part of the same popover, if used on desktop, or dialog - on phone.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the selected option changes. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;selectedOption&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the selected option.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;close&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired after the component&#39;s dropdown menu closes. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;open&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired after the component&#39;s dropdown menu opens. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;Option&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-option component defines the content of an option in the ui5-select. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; additionalText &lt;br&gt; &lt;code&gt;additional-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the additional text displayed at the end of the option element. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.3.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is in disabled state. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A disabled component is hidden. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.12&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;icon&lt;/code&gt; source URI. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; SAP-icons font provides numerous built-in icons. To find all the available icons, see the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selected &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the selected state of the component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value of the &lt;code&gt;ui5-select&lt;/code&gt; inside an HTML Form element when this component is selected. For more information on HTML Form support, see the &lt;code&gt;name&lt;/code&gt; property of &lt;code&gt;ui5-select&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the text of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Select/",
    "relUrl": "/playground/components/Select/"
  },
  "201": {
    "id": "201",
    "title": "Shell Bar",
    "content": "&lt;!DOCTYPE html&gt; Shell Bar Instructions Application 1 Application 2 Application 3 Application 4 Application 5 ShellBar in Compact Application 1 Application 2 Application 3 Application 4 Application 5 John Doe App Finder Settings Edit Home Page Help Sign out Application 1 Application 2 Application 3 Application 4 Application 5 Custom Popover Item 1 Custom Popover Item 2 Instructions 1 2 3 4 5 6 7 8 9 10 11 12 13 14 Menu Items value key App 1 App 2 App 3 App 4 Custom Action Fired",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/ShellBar/",
    "relUrl": "/playground/fiori/pages/ShellBar/"
  },
  "202": {
    "id": "202",
    "title": "Shell Bar",
    "content": "ShellBar v0.8.0 @ui5/webcomponents-fiori &lt;ui5-shellbar&gt; ShellBar Application 1 Application 2 Application 3 Application 4 Application 5 An Kimura App Finder Settings Edit Home Page Help Sign out &lt;ui5-shellbar id=&quot;shellbar&quot; primary-title=&quot;Corporate Portal&quot; secondary-title=&quot;secondary title&quot; notifications-count=&quot;99+&quot; show-notifications show-product-switch show-co-pilot &gt; &lt;ui5-avatar slot=&quot;profile&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_5.png&quot; /&gt; &lt;/ui5-avatar&gt; &lt;img slot=&quot;logo&quot; src=&quot;../../../assets/images/sap-logo-svg.svg&quot;/&gt; &lt;ui5-button icon=&quot;nav-back&quot; slot=&quot;startButton&quot;&gt;&lt;/ui5-button&gt; &lt;ui5-shellbar-item id=&quot;disc&quot; icon=&quot;disconnected&quot; text=&quot;Disconnect&quot;&gt;&lt;/ui5-shellbar-item&gt; &lt;ui5-shellbar-item id=&quot;call&quot; icon=&quot;incoming-call&quot; text=&quot;Incoming Calls&quot; count=&quot;4&quot;&gt;&lt;/ui5-shellbar-item&gt; &lt;ui5-input slot=&quot;searchField&quot;&gt;&lt;/ui5-input&gt; &lt;ui5-li slot=&quot;menuItems&quot;&gt;Application 1&lt;/ui5-li&gt; &lt;ui5-li slot=&quot;menuItems&quot;&gt;Application 2&lt;/ui5-li&gt; &lt;ui5-li slot=&quot;menuItems&quot;&gt;Application 3&lt;/ui5-li&gt; &lt;ui5-li slot=&quot;menuItems&quot;&gt;Application 4&lt;/ui5-li&gt; &lt;ui5-li slot=&quot;menuItems&quot;&gt;Application 5&lt;/ui5-li&gt; &lt;/ui5-shellbar&gt; &lt;ui5-popover id=&quot;popover&quot; placement-type=&quot;Bottom&quot;&gt; &lt;div class=&quot;popover-header&quot;&gt; &lt;ui5-title style=&quot;padding: 0.25rem 1rem 0rem 1rem&quot;&gt;An Kimura&lt;/ui5-title&gt; &lt;/div&gt; &lt;div class=&quot;popover-content&quot;&gt; &lt;ui5-list separators=&quot;None&quot; &gt; &lt;ui5-li icon=&quot;sys-find&quot;&gt;App Finder&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;settings&quot;&gt;Settings&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;edit&quot;&gt;Edit Home Page&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;sys-help&quot;&gt;Help&lt;/ui5-li&gt; &lt;ui5-li icon=&quot;log&quot;&gt;Sign out&lt;/ui5-li&gt; &lt;/ui5-list&gt; &lt;/div&gt; &lt;/ui5-popover&gt; &lt;script&gt; shellbar.addEventListener(&quot;profile-click&quot;, function(event) { popover.showAt(event.detail.targetRef); }); &lt;/script&gt; Basic ShellBar &lt;ui5-shellbar primary-title=&quot;Corporate Portal&quot; secondary-title=&quot;secondary title&quot; &gt; &lt;ui5-avatar slot=&quot;profile&quot; icon=&quot;customer&quot;&gt;&lt;/ui5-avatar&gt; &lt;img slot=&quot;logo&quot; src=&quot;../../../assets/images/sap-logo-svg.svg&quot;/&gt; &lt;ui5-button icon=&quot;nav-back&quot; slot=&quot;startButton&quot;&gt;&lt;/ui5-button&gt; &lt;/ui5-shellbar&gt; ShellBar with search and notifications &lt;ui5-shellbar primary-title=&quot;Corporate Portal&quot; secondary-title=&quot;secondary title&quot; show-notifications notifications-count=&quot;22&quot; &gt; &lt;ui5-avatar slot=&quot;profile&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_5.png&quot; /&gt; &lt;/ui5-avatar&gt; &lt;img slot=&quot;logo&quot; src=&quot;../../../assets/images/sap-logo-svg.svg&quot;/&gt; &lt;ui5-input slot=&quot;searchField&quot; placeholder=&quot;Enter service...&quot;&gt;&lt;/ui5-input&gt; &lt;/ui5-shellbar&gt; ShellBar with product switch and CoPilot &lt;ui5-shellbar primary-title=&quot;Corporate Portal&quot; secondary-title=&quot;secondary title&quot; show-co-pilot show-product-switch show-notifications notifications-count=&quot;22&quot; &gt; &lt;img slot=&quot;logo&quot; src=&quot;../../../assets/images/sap-logo-svg.svg&quot;/&gt; &lt;ui5-avatar slot=&quot;profile&quot;&gt; &lt;img src=&quot;../../../assets/images/avatars/woman_avatar_5.png&quot; /&gt; &lt;/ui5-avatar&gt; &lt;/ui5-shellbar&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-shellbar is meant to serve as an application header and includes numerous built-in features, such as: logo, profile image/icon, title, search field, notifications and so on. Stable DOM Refs You can use the following stable DOM refs for the ui5-shellbar: &lt;ul&gt; &lt;li&gt;logo&lt;/li&gt; &lt;li&gt;copilot&lt;/li&gt; &lt;li&gt;notifications&lt;/li&gt; &lt;li&gt;overflow&lt;/li&gt; &lt;li&gt;profile&lt;/li&gt; &lt;li&gt;product-switch&lt;/li&gt; &lt;/ul&gt; CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-shellbar exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;root - Used to style the outermost wrapper of the ui5-shellbar&lt;/li&gt; &lt;/ul&gt; Keyboard Handling Fast Navigation This component provides a build in fast navigation group which can be used via F6 / Shift + F6 or Ctrl + Alt(Option) + Down / Ctrl + Alt(Option) + Up. In order to use this functionality, you need to import the following module: import &quot;@ui5/webcomponents-base/dist/features/F6Navigation.js&quot; ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/ShellBar&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibilityAttributes &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;object&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; An object of strings that defines several additional accessibility attribute values for customization depending on the use case. It supports the following fields: &lt;ul&gt; &lt;li&gt;&lt;code&gt;expanded&lt;/code&gt;: Indicates whether the anchor element, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: &lt;ul&gt; &lt;li&gt;&lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;false&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;hasPopup&lt;/code&gt;: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the anchor element. Accepts the following string values: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Grid&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ListBox&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tree&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibilityRoles &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;object&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; An object of strings that defines additional accessibility roles for further customization. It supports the following fields: - &lt;code&gt;logoRole&lt;/code&gt;: the accessibility role for the &lt;code&gt;logo&lt;/code&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.6.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibilityTexts &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;object&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; An object of strings that defines several additional accessibility texts for even further customization. It supports the following fields: - &lt;code&gt;profileButtonTitle&lt;/code&gt;: defines the tooltip for the profile button - &lt;code&gt;logoTitle&lt;/code&gt;: defines the tooltip for the logo &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; copilotDomRef (readonly) &lt;br&gt; &lt;code&gt;copilot-dom-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Returns the &lt;code&gt;copilot&lt;/code&gt; DOM ref. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.16&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; logoDomRef (readonly) &lt;br&gt; &lt;code&gt;logo-dom-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Returns the &lt;code&gt;logo&lt;/code&gt; DOM ref. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.16&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; notificationsCount &lt;br&gt; &lt;code&gt;notifications-count&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;notificationsCount&lt;/code&gt;, displayed in the notification icon top-right corner. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; notificationsDomRef (readonly) &lt;br&gt; &lt;code&gt;notifications-dom-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Returns the &lt;code&gt;notifications&lt;/code&gt; icon DOM ref. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.16&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; overflowDomRef (readonly) &lt;br&gt; &lt;code&gt;overflow-dom-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Returns the &lt;code&gt;overflow&lt;/code&gt; icon DOM ref. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.16&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; primaryTitle &lt;br&gt; &lt;code&gt;primary-title&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;primaryTitle&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;primaryTitle&lt;/code&gt; would be hidden on S screen size (less than approx. 700px). &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; productSwitchDomRef (readonly) &lt;br&gt; &lt;code&gt;product-switch-dom-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Returns the &lt;code&gt;product-switch&lt;/code&gt; icon DOM ref. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.16&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; profileDomRef (readonly) &lt;br&gt; &lt;code&gt;profile-dom-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Returns the &lt;code&gt;profile&lt;/code&gt; icon DOM ref. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.16&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; secondaryTitle &lt;br&gt; &lt;code&gt;secondary-title&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;secondaryTitle&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;secondaryTitle&lt;/code&gt; would be hidden on S and M screen sizes (less than approx. 1300px). &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showCoPilot &lt;br&gt; &lt;code&gt;show-co-pilot&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines, if the product CoPilot icon would be displayed. &lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; By default the co-pilot is displayed as static SVG. If you need an animated co-pilot, you can import the &lt;code&gt;&quot;@ui5/webcomponents-fiori/dist/features/CoPilotAnimation.js&quot;&lt;/code&gt; module as add-on feature. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showNotifications &lt;br&gt; &lt;code&gt;show-notifications&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines, if the notification icon would be displayed. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showProductSwitch &lt;br&gt; &lt;code&gt;show-product-switch&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines, if the product switch icon would be displayed. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showSearchField &lt;br&gt; &lt;code&gt;show-search-field&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines, if the Search Field would be displayed when there is a valid &lt;code&gt;searchField&lt;/code&gt; slot. &lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; By default the Search Field is not displayed. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the &lt;code&gt;ui5-shellbar&lt;/code&gt; aditional items. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; You can use the &amp;nbsp;&amp;lt;ui5-shellbar-item&gt;&amp;lt;/ui5-shellbar-item&gt;.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;logo&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the logo of the &lt;code&gt;ui5-shellbar&lt;/code&gt;. For example, you can use &lt;code&gt;ui5-avatar&lt;/code&gt; or &lt;code&gt;img&lt;/code&gt; elements as logo.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;menuItems&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the items displayed in menu after a click on the primary title. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; You can use the &amp;nbsp;&amp;lt;ui5-li&gt;&amp;lt;/ui5-li&gt; and its ancestors.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;profile&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;You can pass &lt;code&gt;ui5-avatar&lt;/code&gt; to set the profile image/icon. If no profile slot is set - profile will be excluded from actions. Note: We recommend not using the &lt;code&gt;size&lt;/code&gt; attribute of &lt;code&gt;ui5-avatar&lt;/code&gt; because it should have specific size by design in the context of &lt;code&gt;ui5-shellbar&lt;/code&gt; profile.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;searchField&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the &lt;code&gt;ui5-input&lt;/code&gt;, that will be used as a search field.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;startButton&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines a &lt;code&gt;ui5-button&lt;/code&gt; in the bar that will be placed in the beginning. We encourage this slot to be used for a back or home button. It gets overstyled to match ShellBar&#39;s styling.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;co-pilot-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired, when the co pilot is activated. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v0.10&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;targetRef&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; dom ref of the activated element&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;logo-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired, when the logo is activated. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v0.10&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;targetRef&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; dom ref of the activated element&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;menu-item-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired, when a menu item is activated &lt;b&gt;Note:&lt;/b&gt; You can prevent closing of overflow popover by calling &lt;code&gt;event.preventDefault()&lt;/code&gt;. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v0.10&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; DOM ref of the activated list item&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;notifications-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired, when the notification icon is activated. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;targetRef&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; dom ref of the activated element&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;product-switch-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired, when the product switch icon is activated. &lt;b&gt;Note:&lt;/b&gt; You can prevent closing of overflow popover by calling &lt;code&gt;event.preventDefault()&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;targetRef&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; dom ref of the activated element&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;profile-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired, when the profile slot is present. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;targetRef&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; dom ref of the activated element&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;closeOverflow&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Closes the overflow area. Useful to manually close the overflow after having suppressed automatic closing with preventDefault() of ShellbarItem&#39;s press event&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;ShellBarItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; The &lt;code&gt;ui5-shellbar-item&lt;/code&gt; represents a custom item, that might be added to the &lt;code&gt;ui5-shellbar&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;h3&gt;ES6 Module Import&lt;/h3&gt; &lt;code&gt;import &quot;@ui5/webcomponents-fiori/dist/ShellBarItem&quot;;&lt;/code&gt; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; count &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the count displayed in the top-right corner. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.6&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the name of the item&#39;s icon. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the item text. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired, when the item is pressed. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;targetRef&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; DOM ref of the clicked element&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/ShellBar/",
    "relUrl": "/playground/components/ShellBar/"
  },
  "203": {
    "id": "203",
    "title": "Side Navigation",
    "content": "&lt;!DOCTYPE html&gt; Side Navigation Willam Brown UX expert selection-change event click event prevent selection-change event",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/SideNavigation/",
    "relUrl": "/playground/fiori/pages/SideNavigation/"
  },
  "204": {
    "id": "204",
    "title": "Side Navigation",
    "content": "Side Navigation v1.0.0-rc.8 @ui5/webcomponents &lt;ui5-side-navigation&gt; Side Navigation in Application &lt;ui5-shellbar primary-title=&quot;UI5 Web Components&quot; secondary-title=&quot;The Best Run SAP&quot; show-co-pilot &gt; &lt;ui5-button icon=&quot;menu&quot; slot=&quot;startButton&quot; id=&quot;startButton&quot;&gt;&lt;/ui5-button&gt; &lt;/ui5-shellbar&gt; &lt;ui5-side-navigation&gt; &lt;ui5-side-navigation-item text=&quot;Home&quot; icon=&quot;home&quot;&gt;&lt;/ui5-side-navigation-item&gt; &lt;ui5-side-navigation-item text=&quot;People&quot; expanded icon=&quot;group&quot;&gt; &lt;ui5-side-navigation-sub-item text=&quot;From My Team&quot;&gt;&lt;/ui5-side-navigation-sub-item&gt; &lt;ui5-side-navigation-sub-item text=&quot;From Other Teams&quot;&gt;&lt;/ui5-side-navigation-sub-item&gt; &lt;/ui5-side-navigation-item&gt; &lt;ui5-side-navigation-item text=&quot;Locations&quot; icon=&quot;locate-me&quot; selected&gt;&lt;/ui5-side-navigation-item&gt; &lt;ui5-side-navigation-item text=&quot;Events&quot; icon=&quot;calendar&quot;&gt; &lt;ui5-side-navigation-sub-item text=&quot;Local&quot;&gt;&lt;/ui5-side-navigation-sub-item&gt; &lt;ui5-side-navigation-sub-item text=&quot;Others&quot;&gt;&lt;/ui5-side-navigation-sub-item&gt; &lt;/ui5-side-navigation-item&gt; &lt;ui5-side-navigation-item slot=&quot;fixedItems&quot; text=&quot;Useful Links&quot; icon=&quot;chain-link&quot;&gt;&lt;/ui5-side-navigation-item&gt; &lt;ui5-side-navigation-item slot=&quot;fixedItems&quot; text=&quot;History&quot; icon=&quot;history&quot;&gt;&lt;/ui5-side-navigation-item&gt; &lt;/ui5-side-navigation&gt; &lt;script&gt; const sideNavigation = document.querySelector(&quot;ui5-side-navigation&quot;); document.querySelector(&quot;#startButton&quot;).addEventListener(&quot;click&quot;, event =&gt; sideNavigation.collapsed = !sideNavigation.collapsed); &lt;/script&gt; &lt;style&gt; ui5-shellbar::part(root) { padding-left: .5rem; } &lt;/style&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The SideNavigation is used as a standard menu in applications. It consists of three containers: header (top-aligned), main navigation section (top-aligned) and the secondary section (bottom-aligned). &lt;ul&gt; &lt;li&gt;The header is meant for displaying user related information - profile data, avatar, etc.&lt;/li&gt; &lt;li&gt;The main navigation section is related to the user’s current work context&lt;/li&gt; &lt;li&gt;The secondary section is mostly used to link additional information that may be of interest (legal information, developer communities, external help, contact information and so on). &lt;/li&gt; &lt;/ul&gt; Usage Use the available ui5-side-navigation-item and ui5-side-navigation-sub-item components to build your menu. The items can consist of text only or an icon with text. The use or non-use of icons must be consistent for all items on one level. You must not combine entries with and without icons on the same level. We strongly recommend that you do not use icons on the second level. Keyboard Handling Fast Navigation This component provides a build in fast navigation group which can be used via F6 / Shift + F6 or Ctrl + Alt(Option) + Down / Ctrl + Alt(Option) + Up. In order to use this functionality, you need to import the following module: import &quot;@ui5/webcomponents-base/dist/features/F6Navigation.js&quot; ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/SideNavigation.js&quot;; import &quot;@ui5/webcomponents-fiori/dist/SideNavigationItem.js&quot;; (for ui5-side-navigation-item) import &quot;@ui5/webcomponents-fiori/dist/SideNavigationSubItem.js&quot;; (for ui5-side-navigation-sub-item) &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; collapsed &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the &lt;code&gt;ui5-side-navigation&lt;/code&gt; is expanded or collapsed. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the main items of the &lt;code&gt;ui5-side-navigation&lt;/code&gt;. Use the &lt;code&gt;ui5-side-navigation-item&lt;/code&gt; component for the top-level items, and the &lt;code&gt;ui5-side-navigation-sub-item&lt;/code&gt; component for second-level items, nested inside the items.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;fixedItems&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the fixed items at the bottom of the &lt;code&gt;ui5-side-navigation&lt;/code&gt;. Use the &lt;code&gt;ui5-side-navigation-item&lt;/code&gt; component for the fixed items, and optionally the &lt;code&gt;ui5-side-navigation-sub-item&lt;/code&gt; component to provide second-level items inside them. &lt;b&gt;Note:&lt;/b&gt; In order to achieve the best user experience, it is recommended that you keep the fixed items &quot;flat&quot; (do not pass sub-items)&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;header&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the header of the &lt;code&gt;ui5-side-navigation&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The header is displayed when the component is expanded - the property &lt;code&gt;collapsed&lt;/code&gt; is false;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;selection-change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the selection has changed via user interaction &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the clicked item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;SideNavigationItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-side-navigation-item is used within ui5-side-navigation only. Via the ui5-side-navigation-item you control the content of the SideNavigation. ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/SideNavigationItem.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; expanded &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the item is expanded &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the icon of the item. &lt;br&gt;&lt;br&gt; The SAP-icons font provides numerous options. &lt;br&gt; See all the available icons in the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selected &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the subitem is selected &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the item. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; wholeItemToggleable &lt;br&gt; &lt;code&gt;whole-item-toggleable&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether pressing the whole item or only pressing the icon will show/hide the items&#39;s sub items(if present). If set to true, pressing the whole item will toggle the sub items, and it won&#39;t fire the &lt;code&gt;click&lt;/code&gt; event. By default, only pressing the arrow icon will toggle the sub items &amp; the click event will be fired if the item is pressed outside of the icon. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.11&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.fiori.ISideNavigationSubItem [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;If you wish to nest menus, you can pass inner menu items to the default slot.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;SideNavigationSubItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-side-navigation-sub-item is intended to be used inside a ui5-side-navigation-item only. ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/SideNavigationSubItem.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the icon of the item. &lt;br&gt;&lt;br&gt; The SAP-icons font provides numerous options. &lt;br&gt; See all the available icons in the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selected &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the subitem is selected. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the item. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/SideNavigation/",
    "relUrl": "/playground/components/SideNavigation/"
  },
  "205": {
    "id": "205",
    "title": "Simple",
    "content": "&lt;!DOCTYPE html&gt; Button",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Simple/",
    "relUrl": "/playground/main/pages/Simple/"
  },
  "206": {
    "id": "206",
    "title": "Slider",
    "content": "&lt;!DOCTYPE html&gt; UI5 Slider Basic Slider Basic Slider with tooltip Disabled Slider with tickmarks and labels Slider with tickmarks Slider with many steps and small width Inactive slider with no steps and tooltip Slider with steps, tooltips, tickmarks and labels Slider with float number step (1.25), tooltips, tickmarks and labels between 3 steps (3.75 value) Basic RTL Slider Event Testing Slider Event Testing Result Slider",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Slider/",
    "relUrl": "/playground/main/pages/Slider/"
  },
  "207": {
    "id": "207",
    "title": "Slider",
    "content": "Slider v1.0.0-rc.11 @ui5/webcomponents &lt;ui5-slider&gt; Basic Slider &lt;ui5-slider&gt;&lt;/ui5-slider&gt; Slider with Tooltip &lt;ui5-slider min=&quot;0&quot; max=&quot;20&quot; show-tooltip&gt;&lt;/ui5-slider&gt; Disabled Slider with Tickmarks and Labels &lt;ui5-slider min=&quot;20&quot; max=&quot;100&quot; label-interval=&quot;5&quot; disabled show-tickmarks&gt;&lt;/ui5-slider&gt; Slider Tooltip, Tickmarks and Labels &lt;ui5-slider min=&quot;-20&quot; max=&quot;20&quot; step=&quot;2&quot; value=&quot;12&quot; show-tooltip label-interval=&quot;2&quot; show-tickmarks&gt;&lt;/ui5-slider&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The Slider component represents a numerical range and a handle (grip). The purpose of the component is to enable visual selection of a value in a continuous numerical range by moving an adjustable handle. Structure The most important properties of the Slider are: &lt;ul&gt; &lt;li&gt;min - The minimum value of the slider range.&lt;/li&gt; &lt;li&gt;max - The maximum value of the slider range.&lt;/li&gt; &lt;li&gt;value - The current value of the slider range.&lt;/li&gt; &lt;li&gt;step - Determines the increments in which the slider will move.&lt;/li&gt; &lt;li&gt;showTooltip - Determines if a tooltip should be displayed above the handle.&lt;/li&gt; &lt;li&gt;showTickmarks - Displays a visual divider between the step values.&lt;/li&gt; &lt;li&gt;labelInterval - Labels some or all of the tickmarks with their values.&lt;/li&gt; &lt;/ul&gt; Usage The most common use case is to select values on a continuous numerical scale (e.g. temperature, volume, etc. ). Responsive Behavior The ui5-slider component adjusts to the size of its parent container by recalculating and resizing the width of the control. You can move the slider handle in several different ways: &lt;ul&gt; &lt;li&gt;Drag and drop the handle to the desired value.&lt;/li&gt; &lt;li&gt;Click/tap on the range bar to move the handle to that location.&lt;/li&gt; &lt;/ul&gt; CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-slider exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;progress-container - Used to style the progress container(the horizontal bar which visually represents the range between the minimum and maximum value) of the ui5-slider.&lt;/li&gt; &lt;li&gt;progress-bar - Used to style the progress bar, which shows the progress of the ui5-slider.&lt;/li&gt; &lt;li&gt;handle - Used to style the handle of the ui5-slider.&lt;/li&gt; &lt;/ul&gt; Keyboard Handling Left or Down Arrow - Moves the handle one step to the left, effectively decreasing the component&#39;s value by step amount; Right or Up Arrow - Moves the handle one step to the right, effectively increasing the component&#39;s value by step amount; Left or Down Arrow + Ctrl/Cmd - Moves the handle to the left with step equal to 1/10th of the entire range, effectively decreasing the component&#39;s value by 1/10th of the range; Right or Up Arrow + Ctrl/Cmd - Moves the handle to the right with step equal to 1/10th of the entire range, effectively increasing the component&#39;s value by 1/10th of the range; Plus - Same as Right or Up Arrow; Minus - Same as Left or Down Arrow; Home - Moves the handle to the beginning of the range; End - Moves the handle to the end of the range; Page Up - Same as Right or Up + Ctrl/Cmd; Page Down - Same as Left or Down + Ctrl/Cmd; Escape - Resets the value property after interaction, to the position prior the component&#39;s focusing; ES6 Module Import import &quot;@ui5/webcomponents/dist/Slider&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Float&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;0&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Current value of the slider &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.4.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the slider is in disabled state. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; labelInterval &lt;br&gt; &lt;code&gt;label-interval&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;0&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Displays a label with a value on every N-th step. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The step and tickmarks properties must be enabled. Example - if the step value is set to 2 and the label interval is also specified to 2 - then every second tickmark will be labelled, which means every 4th value number. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; max &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Float&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;100&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the maximum value of the slider. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; min &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Float&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;0&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the minimum value of the slider. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showTickmarks &lt;br&gt; &lt;code&gt;show-tickmarks&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Enables tickmarks visualization for each step. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The step must be a positive number. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showTooltip &lt;br&gt; &lt;code&gt;show-tooltip&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Enables handle tooltip displaying the current value. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; step &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;1&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the size of the slider&#39;s selection intervals (e.g. min = 0, max = 10, step = 5 would result in possible selection of the values 0, 5, 10). &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If set to 0 the slider handle movement is disabled. When negative number or value other than a number, the component fallbacks to its default value. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the value changes and the user has finished interacting with the slider. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;input&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the value changes due to user interaction that is not yet finished - during mouse/touch dragging. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Slider/",
    "relUrl": "/playground/components/Slider/"
  },
  "208": {
    "id": "208",
    "title": "Split Button",
    "content": "&lt;!DOCTYPE html&gt; ui5-split-button ui5-split-button Button Types Default Emphasized Positive Negative Attention Transparent Disabled Buttons Default Emphasized Positive Negative Attention Transparent Icons Icon Active Icon Icon + Active Icon Event Display on Text Direction Test textContent Default",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/SplitButton/",
    "relUrl": "/playground/main/pages/SplitButton/"
  },
  "209": {
    "id": "209",
    "title": "Split Button",
    "content": "SplitButton v1.1.0 @ui5/webcomponents &lt;ui5-split-button&gt; Default SplitButton Default Default &lt;ui5-split-button&gt;Default&lt;/ui5-split-button&gt; &lt;ui5-split-button disabled&gt;Default&lt;/ui5-split-button&gt; SplitButton with Design Default Emphasized Positive Negative Attention Transparent &lt;ui5-split-button design=&quot;Default&quot;&gt;Default&lt;/ui5-split-button&gt; &lt;ui5-split-button design=&quot;Emphasized&quot;&gt;Emphasized&lt;/ui5-split-button&gt; &lt;ui5-split-button design=&quot;Positive&quot;&gt;Positive&lt;/ui5-split-button&gt; &lt;ui5-split-button design=&quot;Negative&quot;&gt;Negative&lt;/ui5-split-button&gt; &lt;ui5-split-button design=&quot;Attention&quot;&gt;Attention&lt;/ui5-split-button&gt; &lt;ui5-split-button design=&quot;Transparent&quot;&gt;Transparent&lt;/ui5-split-button&gt; SplitButton with Icons Icon Icon + Active Icon &lt;ui5-split-button icon=&quot;add&quot;&gt;Icon&lt;/ui5-split-button&gt; &lt;ui5-split-button icon=&quot;add&quot; active-icon=&quot;accept&quot;&gt;Icon + Active Icon&lt;/ui5-split-button&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; ui5-split-button enables users to trigger actions. It is constructed of two separate actions - default action and arrow action that can be activated by clicking or tapping, or by pressing certain keyboard keys - Space or Enter for default action, and Arrow Down or Arrow Up for arrow action. Usage ui5-split-button consists two separate buttons: &lt;ul&gt; &lt;li&gt;for the first one (default action) you can define some text or an icon, or both. Also, it is possible to define different icon for active state of this button - activeIcon.&lt;/li&gt; &lt;li&gt;the second one (arrow action) contains only slim-arrow-down icon.&lt;/li&gt; &lt;/ul&gt; You can choose a design from a set of predefined types (the same as for ui5-button) that offer different styling to correspond to the triggered action. Both text and arrow actions have the same design. You can set the ui5-split-button as enabled or disabled. Both parts of an enabled ui5-split-button can be pressed by clicking or tapping it, or by certain keys, which changes the style to provide visual feedback to the user that it is pressed or hovered over with the mouse cursor. A disabled ui5-split-button appears inactive and any of the two buttons cannot be pressed. Keyboard Handling Space or Enter - triggers the default action Shift or Escape - if Space is pressed, releases the default action button without triggering the click event. Arrow Down, Arrow Up, Alt+Arrow Down, Alt+Arrow Up, or F4 - triggers the arrow action There are separate events that are fired on activating of ui5-split-button parts: click for the first button (default action) arrow-click for the second button (arrow action) &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/SplitButton.js&quot;; Properties/Attributes You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different. Name Type Default Value Description accessibleName accessible-name string Defines the accessible ARIA name of the component. activeIcon active-icon string &quot;&quot; Defines the icon to be displayed in active state as graphical element within the component. design ButtonDesign &quot;Default&quot; Defines the component design. The available values are: Default Emphasized Positive Negative Transparent Attention disabled boolean false Defines whether the component is disabled. A disabled component can&#39;t be pressed or focused, and it is not in the tab chain. icon string &quot;&quot; Defines the icon to be displayed as graphical element within the component. The SAP-icons font provides numerous options. Example: See all the available icons in the Icon Explorer. Slots This Element provides slot(s). This means it can display its child nodes. Unless targeting the default slot, use the slot attribute to define the destination slot for each child. Text, along with HTML Elements with no slot attribute, goes the the default slot. Slot Type Description default Node [0..n] Defines the text of the component. Note: Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design. Events This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as addEventListener. Name Description arrow-click Fired when the user clicks on the arrow action. click Fired when the user clicks on the default action. &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; Privacy Policy Legal",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/SplitButton/",
    "relUrl": "/playground/components/SplitButton/"
  },
  "210": {
    "id": "210",
    "title": "Step Input",
    "content": "&lt;!DOCTYPE html&gt; StepInput test page StepInput Event [change] :: N/A StepInput in Cozy StepInput in Compact StepInput in with min=0, max=10 and step=1 Wrong Value StepInput in with min=0, max=10, step=0.05 and valuePrecision=2 Wrong Value Disabled StepInput Readonly StepInput StepInput with valueState=None StepInput with valueState=Success StepInput with valueState=Information StepInput with valueState=Warning StepInput with valueState=Error &#39;change&#39; event result",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/StepInput/",
    "relUrl": "/playground/main/pages/StepInput/"
  },
  "211": {
    "id": "211",
    "title": "Step Input",
    "content": "StepInput v1.0.0-rc.13 @ui5/webcomponents &lt;ui5-step-input&gt; Basic Step Input &lt;ui5-step-input value=&quot;5&quot;&gt;&lt;/ui5-step-input&gt; &lt;ui5-step-input readonly value=&quot;5&quot;&gt;&lt;/ui5-step-input&gt; &lt;ui5-step-input disabled value=&quot;5&quot;&gt;&lt;/ui5-step-input&gt; Step Input with alignment &lt;ui5-step-input value=&quot;5&quot;&gt;&lt;/ui5-step-input&gt; &lt;ui5-step-input value=&quot;5&quot; style=&quot;text-align: center&quot;&gt;&lt;/ui5-step-input&gt; &lt;ui5-step-input value=&quot;5&quot; style=&quot;text-align: right&quot;&gt;&lt;/ui5-step-input&gt; Step Input with min, max, step and valuePrecision &lt;ui5-step-input value=&quot;5&quot; min=&quot;0&quot; max=&quot;10&quot; step=&quot;1&quot;&gt;&lt;/ui5-step-input&gt; &lt;ui5-step-input value=&quot;0&quot; min=&quot;-100&quot; max=&quot;100&quot; step=&quot;10&quot;&gt;&lt;/ui5-step-input&gt; &lt;ui5-step-input value=&quot;10&quot; min=&quot;0&quot; max=&quot;20&quot; step=&quot;0.5&quot; value-precision=&quot;1&quot;&gt;&lt;/ui5-step-input&gt; Step Input with Value State &lt;ui5-step-input value=&quot;Success&quot; value-state=&quot;Success&quot;&gt;&lt;/ui5-step-input&gt; &lt;ui5-step-input value=&quot;Warning&quot; value-state=&quot;Warning&quot;&gt;&lt;/ui5-step-input&gt; &lt;ui5-step-input value=&quot;Error&quot; value-state=&quot;Error&quot;&gt;&lt;/ui5-step-input&gt; &lt;ui5-step-input value=&quot;Information&quot; value-state=&quot;Information&quot;&gt;&lt;/ui5-step-input&gt; Step Input with Label Number &lt;ui5-label for=&quot;myStepInput&quot; required show-colon&gt;Number&lt;/ui5-label&gt; &lt;ui5-step-input id=&quot;myStepInput&quot; placeholder=&quot;Enter your Number&quot; required&gt;&lt;/ui5-step-input&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-step-input consists of an input field and buttons with icons to increase/decrease the value with the predefined step. The user can change the value of the component by pressing the increase/decrease buttons, by typing a number directly, by using the keyboard up/down and page up/down, or by using the mouse scroll wheel. Decimal values are supported. Usage The default step is 1 but the app developer can set a different one. App developers can set a maximum and minimum value for the StepInput. The increase/decrease button and the up/down keyboard navigation become disabled when the value reaches the max/min or a new value is entered from the input which is greater/less than the max/min. &lt;h4&gt;When to use:&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;To adjust amounts, quantities, or other values quickly.&lt;/li&gt; &lt;li&gt;To adjust values for a specific step.&lt;/li&gt; &lt;/ul&gt; When not to use: To enter a static number (for example, postal code, phone number, or ID). In this case, use the regular ui5-input instead. To display a value that rarely needs to be adjusted and does not pertain to a particular step. In this case, use the regular ui5-input instead. To enter dates and times. In this case, use date/time related components instead. ES6 Module Import import &quot;@ui5/webcomponents/dist/StepInput.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the component is displayed as disabled. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; max &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Float&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a maximum value of the component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; min &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Float&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a minimum value of the component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; name &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the name with which the component will be submitted in an HTML form. &lt;br&gt;&lt;br&gt; &lt;b&gt;Important:&lt;/b&gt; For the &lt;code&gt;name&lt;/code&gt; property to have effect, you must add the following import to your project: &lt;code&gt;import &quot;@ui5/webcomponents/dist/features/InputElementsFormSupport.js&quot;;&lt;/code&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When set, a native &lt;code&gt;input&lt;/code&gt; HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; placeholder &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a short hint, intended to aid the user with data entry when the component has no value. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; readonly &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the component is displayed as read-only. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; required &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is required. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; step &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Float&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;1&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a step of increasing/decreasing the value of the component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Float&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;0&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a value of the component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; valuePrecision &lt;br&gt; &lt;code&gt;value-precision&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;0&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the number of digits after the decimal point of the component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; valueState &lt;br&gt; &lt;code&gt;value-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value state of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Success&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Information&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;valueStateMessage&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the value state message that will be displayed as pop up under the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If not specified, a default text (in the respective language) will be displayed. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;valueStateMessage&lt;/code&gt; would be displayed, when the component is in &lt;code&gt;Information&lt;/code&gt;, &lt;code&gt;Warning&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt; value state.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the input operation has finished by pressing Enter or on focusout. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/StepInput/",
    "relUrl": "/playground/components/StepInput/"
  },
  "212": {
    "id": "212",
    "title": "Switch",
    "content": "&lt;!DOCTYPE html&gt; ui5-switch Default Switch Use GPS location No Label Default Switch Graphical Switch Custom Switch Switch styled with shadow parts sap_horizon",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Switch/",
    "relUrl": "/playground/main/pages/Switch/"
  },
  "213": {
    "id": "213",
    "title": "Switch",
    "content": "Switch v0.8.0 @ui5/webcomponents &lt;ui5-switch&gt; Basic Switch &lt;ui5-switch text-on=&quot;On&quot; text-off=&quot;Off&quot;&gt;&lt;/ui5-switch&gt; &lt;ui5-switch text-on=&quot;On&quot; text-off=&quot;Off&quot; checked&gt;&lt;/ui5-switch&gt; &lt;ui5-switch&gt;&lt;/ui5-switch&gt; &lt;ui5-switch checked&gt;&lt;/ui5-switch&gt; &lt;ui5-switch text-on=&quot;Yes&quot; text-off=&quot;No&quot; disabled&gt;&lt;/ui5-switch&gt; &lt;ui5-switch text-on=&quot;Yes&quot; text-off=&quot;No&quot; checked disabled &gt;&lt;/ui5-switch&gt; Graphical Switch &lt;ui5-switch accessible-name=&quot;graphical&quot; design=&quot;Graphical&quot;&gt;&lt;/ui5-switch&gt; &lt;ui5-switch accessible-name=&quot;graphical&quot; design=&quot;Graphical&quot; checked&gt;&lt;/ui5-switch&gt; &lt;ui5-switch accessible-name=&quot;graphical&quot; design=&quot;Graphical&quot; disabled&gt;&lt;/ui5-switch&gt; &lt;ui5-switch accessible-name=&quot;graphical&quot; design=&quot;Graphical&quot; checked disabled&gt;&lt;/ui5-switch&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The &lt;code&gt;ui5-switch&lt;/code&gt; component is used for changing between binary states. &lt;br&gt; The component can display texts, that will be switched, based on the component state, via the &lt;code&gt;textOn&lt;/code&gt; and &lt;code&gt;textOff&lt;/code&gt; properties, but texts longer than 3 letters will be cutted off. &lt;br&gt; However, users are able to customize the width of &lt;code&gt;ui5-switch&lt;/code&gt; with pure CSS (&lt;code&gt;&amp;lt;ui5-switch style=&quot;width: 200px&quot;&gt;&lt;/code&gt;), and set widths, depending on the texts they would use. &lt;br&gt; Note: the component would not automatically stretch to fit the whole text width. Keyboard Handling The state can be changed by pressing the Space and Enter keys. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-switch exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;slider - Used to style the track, where the handle is being slid&lt;/li&gt; &lt;li&gt;text-on - Used to style the textOn property text&lt;/li&gt; &lt;li&gt;text-off - Used to style the textOff property text&lt;/li&gt; &lt;li&gt;handle - Used to style the handle of the switch&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/Switch&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Sets the accessible ARIA name of the component. &lt;b&gt;Note&lt;/b&gt;: We recommend that you set an accessibleNameRef pointing to an external label or at least an &lt;code&gt;accessibleName&lt;/code&gt;. Providing an &lt;code&gt;accessibleNameRef&lt;/code&gt; or an &lt;code&gt;accessibleName&lt;/code&gt; is mandatory in the cases when &lt;code&gt;textOn&lt;/code&gt; and &lt;code&gt;textOff&lt;/code&gt; properties aren&#39;t set. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.2.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the component. &lt;b&gt;Note&lt;/b&gt;: We recommend that you set an accessibleNameRef pointing to an external label or at least an &lt;code&gt;accessibleName&lt;/code&gt;. Providing an &lt;code&gt;accessibleNameRef&lt;/code&gt; or an &lt;code&gt;accessibleName&lt;/code&gt; is mandatory in the cases when &lt;code&gt;textOn&lt;/code&gt; and &lt;code&gt;textOff&lt;/code&gt; properties aren&#39;t set. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; checked &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the component is checked. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The property can be changed with user interaction, either by cliking the component, or by pressing the &lt;code&gt;Enter&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt; key. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; design &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;SwitchDesign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Textual&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the component design. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If &lt;code&gt;Graphical&lt;/code&gt; type is set, positive and negative icons will replace the &lt;code&gt;textOn&lt;/code&gt; and &lt;code&gt;textOff&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is disabled. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A disabled component is noninteractive. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; textOff &lt;br&gt; &lt;code&gt;text-off&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text, displayed when the component is not checked. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; We recommend using short texts, up to 3 letters (larger texts would be cut off). &lt;b&gt;Note:&lt;/b&gt; This property will have no effect if the theme is set to &lt;code&gt;sap_horizon&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; textOn &lt;br&gt; &lt;code&gt;text-on&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text, displayed when the component is checked. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; We recommend using short texts, up to 3 letters (larger texts would be cut off). &lt;b&gt;Note:&lt;/b&gt; This property will have no effect if the theme is set to &lt;code&gt;sap_horizon&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; tooltip &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the tooltip of the component. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If applicable an external label reference should always be the preferred option to provide context to the &lt;code&gt;ui5-switch&lt;/code&gt; component over a tooltip. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.9.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the component checked state changes. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Switch/",
    "relUrl": "/playground/components/Switch/"
  },
  "214": {
    "id": "214",
    "title": "Tab Container",
    "content": "&lt;!DOCTYPE html&gt; Tab Container ui5-tabcontainer Compact Nested Tabs Button 1 Button 2 Button 21 Button 211 Button 2121 Button 212 Text for 2.2 Button 3.1 Button 3.1.1 Button 3.1.2 Button 4 Button 41 Button 411 Button 4111 Button 41111 Tab Content Tab Content Tab Content Tab Content Tab Content Tab Content Tab 10.1 Content Tab 10.1.1 Content Tab Content 1 1.1 2 2.1 2.1.1 2.2 Text only End Overflow Button 3 text text Text only Start And End Overflow Tab Container Tab Container Start And End Overflow Icon only Button 11 Button 12 Button 3 Button 3 Button 2 Button 2 Button 3 Button 3 Button 3 Button 3 Button 3 Button 3 Button 2 Button 3 Text only Button 11 Button 12 Button 2 Button 3 Button 4 Button 4 Button 4 Button 4 Button 4 Button 4 Button 4 Button 4 Button 4 Scrollable child Toggle style Source Method Cell 1 Cell 2 Cell 1 Cell 2 Cell 1 Cell 2 Cell 1 Cell 2 Cell 1 Cell 2 Cell 1 Cell 2 Cell 1 Cell 2 Cell 1 Cell 2 Cell 1 Cell 2 Cell 1 Cell 2 Icon and Text Content with set height: 300px Button 11 Button 12 Button 2 Button 3 Icon and Text with tabLayout=&quot;Inline&quot; Content with set height: 300px Button 11 Button 12 Button 2 Button 3 Text and additional text Button 11 Button 12 Button 2 Button 3 Text and additional text with tabLayout=&quot;Inline&quot; Button 11 Button 12 Button 2 Button 3 Tabs with input elements ui5-input browser input Result TabContainer in Compact Button 11 Button 12 Button 2 Button 3 Button 4 Button 4 Button 4 Button 4 Button 4 Button 4 Button 4 Button 4 Button 4 Button 11 Button 12 Button 3 Button 3 Button 2 Button 2 Button 3 Button 3 Button 3 Button 3 Button 3 Button 3 Button 2 Button 3 No paddings for the Content Source Method Cell 1 Cell 2 Cell 1 Cell 2 Cell 1 Cell 2 Cell 1 Cell 2 Cell 1 Cell 2 Source Method Cell 3 Cell 4 Cell 3 Cell 4 Cell 3 Cell 4 Cell 3 Cell 4 Cell 3 Cell 4 Background design Header Background Content Background Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita voluptates accusamus est quibusdam inventore ipsam? Accusamus minus aperiam sunt ipsam eos quos et maxime facilis tempora neque ratione nemo laborum expedita aliquid officiis nisi, necessitatibus quasi distinctio? Dolores totam perferendis numquam incidunt obcaecati, id quo at alias rem deserunt praesentium repellat ipsum commodi consequuntur veniam et ducimus animi qui nobis accusantium tenetur eveniet culpa non! Text only Start And End Overflow Custom Overflow Buttons Start End Button 1 Button 1 Button 1 Button 1 Select tabs programmatically Button 1 Button 1 Button 1 Button 1 Button 1 Button 1 Button 1 Button 1 Button 1 Select First Tab Select Last Tab Select a Nested Tab Empty Tab Container Add new selected tab programmatically add tabs",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/TabContainer/",
    "relUrl": "/playground/main/pages/TabContainer/"
  },
  "215": {
    "id": "215",
    "title": "Tab Container",
    "content": "TabContainer @ui5/webcomponents &lt;ui5-tabcontainer&gt; Basic TabContainer Quibusdam, veniam! Architecto debitis iusto ad et, asperiores quisquam perferendis reprehenderit ipsa voluptate minus minima, perspiciatis cum. Totam harum necessitatibus numquam voluptatum. Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga magni facere error dicta beatae optio repudiandae vero, quidem voluptatibus perferendis eum maiores rem tempore voluptates aperiam eos enim delectus unde. Dignissimos debitis architecto temporibus doloribus reiciendis libero rem nemo, nobis quidem dolor praesentium, beatae voluptatum iste eveniet, nam voluptatem obcaecati ducimus dolore. Possimus ipsa eos impedit aut nisi repellendus recusandae, temporibus ducimus, necessitatibus tenetur facere, minima vero fugit rem reiciendis natus ratione quia numquam? Explicabo laboriosam ab consequuntur, qui dignissimos inventore sapiente ullam quaerat ratione libero vero, beatae laudantium! Aperiam numquam tempore, laudantium perferendis recusandae autem. &lt;ui5-tabcontainer class=&quot;full-width&quot;&gt; &lt;ui5-tab text=&quot;Tab 1&quot;&gt; &lt;ui5-label&gt;Quibusdam, veniam! Architecto debitis iusto ad et, asperiores quisquam perferendis reprehenderit ipsa voluptate minus minima, perspiciatis cum. Totam harum necessitatibus numquam voluptatum.&lt;/ui5-label&gt; &lt;/ui5-tab&gt; &lt;ui5-tab icon=&quot;activities&quot; text=&quot;Tab 2&quot; selected&gt; &lt;ui5-label&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Fuga magni facere error dicta beatae optio repudiandae vero, quidem voluptatibus perferendis eum maiores rem tempore voluptates aperiam eos enim delectus unde.&lt;/ui5-label&gt; &lt;/ui5-tab&gt; &lt;ui5-tab icon=&quot;add&quot; text=&quot;Tab 3&quot;&gt; &lt;ui5-label&gt;Dignissimos debitis architecto temporibus doloribus reiciendis libero rem nemo, nobis quidem dolor praesentium, beatae voluptatum iste eveniet, nam voluptatem obcaecati ducimus dolore.&lt;/ui5-label&gt; &lt;/ui5-tab&gt; &lt;ui5-tab icon=&quot;calendar&quot; text=&quot;Tab 4&quot;&gt; &lt;ui5-label&gt;Possimus ipsa eos impedit aut nisi repellendus recusandae, temporibus ducimus, necessitatibus tenetur facere, minima vero fugit rem reiciendis natus ratione quia numquam?&lt;/ui5-label&gt; &lt;/ui5-tab&gt; &lt;ui5-tab-separator&gt;&lt;/ui5-tab-separator&gt; &lt;ui5-tab icon=&quot;action-settings&quot; text=&quot;Tab 5&quot;&gt; &lt;ui5-label&gt;Explicabo laboriosam ab consequuntur, qui dignissimos inventore sapiente ullam quaerat ratione libero vero, beatae laudantium! Aperiam numquam tempore, laudantium perferendis recusandae autem.&lt;/ui5-label&gt; &lt;/ui5-tab&gt; &lt;/ui5-tabcontainer&gt; TabContainer with text only tabs &lt;ui5-tabcontainer class=&quot;full-width&quot; collapsed fixed&gt; &lt;ui5-tab text=&quot;Home&quot;&gt;&lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;What&#39;s new&quot; selected&gt;&lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Who are we&quot;&gt;&lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;About&quot;&gt;&lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Contacts&quot;&gt;&lt;/ui5-tab&gt; &lt;/ui5-tabcontainer&gt; Text only End Overflow &lt;ui5-tabcontainer class=&quot;full-width&quot; collapsed fixed&gt; &lt;ui5-tab text=&quot;Tab 1&quot;&gt;&lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Tab 2&quot; &gt;&lt;/ui5-tab&gt; ... &lt;ui5-tab text=&quot;Tab 13&quot; selected &gt;&lt;/ui5-tab&gt; ... &lt;ui5-tab text=&quot;Tab 22&quot;&gt;&lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Tab 23&quot;&gt;&lt;/ui5-tab&gt; &lt;/ui5-tabcontainer&gt; Text only Start and End Overflow &lt;ui5-tabcontainer class=&quot;full-width&quot; collapsed fixed&gt; &lt;ui5-tab text=&quot;Tab 1&quot;&gt;&lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Tab 2&quot; &gt;&lt;/ui5-tab&gt; ... &lt;ui5-tab text=&quot;Tab 17&quot; selected &gt;&lt;/ui5-tab&gt; ... &lt;ui5-tab text=&quot;Tab 32&quot;&gt;&lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Tab 33&quot;&gt;&lt;/ui5-tab&gt; &lt;/ui5-tabcontainer&gt; TabContainer with text and additional-text &lt;ui5-tabcontainer collapsed fixed tabs-overflow-mode=&quot;StartAndEnd&quot;&gt; &lt;ui5-tab text=&quot;Info&quot; additional-text=&quot;3&quot;&gt; &lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Attachments&quot; additional-text=&quot;24&quot; selected&gt; &lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Notes&quot; additional-text=&quot;16&quot;&gt; &lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;People&quot; additional-text=&quot;34&quot;&gt; &lt;/ui5-tab&gt; &lt;/ui5-tabcontainer&gt; TabContainer with tabLayout=&quot;Inline&quot; &lt;ui5-tabcontainer tab-layout=&quot;Inline&quot; collapsed fixed&gt; &lt;ui5-tab text=&quot;Monitors&quot; additional-text=&quot;10&quot;&gt; &lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Cameras&quot; additional-text=&quot;2&quot; selected&gt; &lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Rooms&quot; additional-text=&quot;16&quot;&gt; &lt;/ui5-tab&gt; &lt;/ui5-tabcontainer&gt; &lt;ui5-tabcontainer tab-layout=&quot;Inline&quot; collapsed fixed&gt; &lt;ui5-tab icon=&quot;laptop&quot; text=&quot;Monitors&quot; additional-text=&quot;10&quot;&gt; &lt;/ui5-tab&gt; &lt;ui5-tab icon=&quot;video&quot; text=&quot;Cameras&quot; additional-text=&quot;2&quot; selected&gt; &lt;/ui5-tab&gt; &lt;ui5-tab icon=&quot;home&quot; text=&quot;Rooms&quot; additional-text=&quot;16&quot;&gt; &lt;/ui5-tab&gt; &lt;/ui5-tabcontainer&gt; TabContainer with nested tabs Notes go here ... Products go here ... Computers go here ... Laptops go here ... Work Stations go here ... Game Stations go here ... Desktops go here ... Smartphones go here ... Tablets go here ... Phones go here ... Orders go here ... Order attachments go here ... &lt;ui5-tabcontainer collapsed&gt; &lt;ui5-tab text=&quot;Notes&quot;&gt; Notes go here ... &lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Products&quot;&gt; Products go here ... &lt;ui5-tab slot=&quot;subTabs&quot; text=&quot;Computers&quot;&gt; Computers go here ... &lt;ui5-tab slot=&quot;subTabs&quot; text=&quot;Laptops&quot;&gt; Laptops go here ... &lt;/ui5-tab&gt; &lt;ui5-tab slot=&quot;subTabs&quot; text=&quot;Desktops&quot;&gt; &lt;ui5-tab slot=&quot;subTabs&quot; text=&quot;Work Stations&quot;&gt; Work Stations go here ... &lt;/ui5-tab&gt; &lt;ui5-tab slot=&quot;subTabs&quot; text=&quot;Game Stations&quot;&gt; Game Stations go here ... &lt;/ui5-tab&gt; Desktops go here ... &lt;/ui5-tab&gt; &lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Phones&quot; slot=&quot;subTabs&quot;&gt; &lt;ui5-tab text=&quot;Smartphones&quot; slot=&quot;subTabs&quot;&gt; Smartphones go here ... &lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Tablets&quot; slot=&quot;subTabs&quot;&gt; Tablets go here ... &lt;/ui5-tab&gt; Phones go here ... &lt;/ui5-tab&gt; &lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Orders&quot;&gt; Orders go here ... &lt;ui5-tab slot=&quot;subTabs&quot; text=&quot;Attachments&quot;&gt; Order attachments go here ... &lt;/ui5-tab&gt; &lt;/ui5-tab&gt; &lt;/ui5-tabcontainer&gt; TabContainer Design Background Header Background Content Background Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita voluptates accusamus est quibusdam inventore ipsam? Accusamus minus aperiam sunt ipsam eos quos et maxime facilis tempora neque ratione nemo laborum expedita aliquid officiis nisi, necessitatibus quasi distinctio? Dolores totam perferendis numquam incidunt obcaecati, id quo at alias rem deserunt praesentium repellat ipsum commodi consequuntur veniam et ducimus animi qui nobis accusantium tenetur eveniet culpa non! &lt;ui5-tabcontainer id=&quot;tabContainerBackgroundDesign&quot; header-background-design=&quot;Solid&quot; content-background-design=&quot;Transparent&quot;&gt; &lt;ui5-tab text=&quot;Tab 1&quot; selected&gt; &lt;ui5-label&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Expedita voluptates accusamus est quibusdam inventore ipsam?&lt;/ui5-label&gt; &lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Tab 2&quot;&gt; &lt;ui5-label&gt;Accusamus minus aperiam sunt ipsam eos quos et maxime facilis tempora neque ratione nemo laborum expedita aliquid officiis nisi, necessitatibus quasi distinctio?&lt;/ui5-label&gt; &lt;/ui5-tab&gt; &lt;ui5-tab text=&quot;Tab 3&quot;&gt; &lt;ui5-label&gt;Dolores totam perferendis numquam incidunt obcaecati, id quo at alias rem deserunt praesentium repellat ipsum commodi consequuntur veniam et ducimus animi qui nobis accusantium tenetur eveniet culpa non!&lt;/ui5-label&gt; &lt;/ui5-tab&gt; &lt;/ui5-tabcontainer&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-tabcontainer represents a collection of tabs with associated content. Navigation through the tabs changes the content display of the currently active content area. A tab can be labeled with text only, or icons with text. Structure The ui5-tabcontainer can hold two types of entities: &lt;ul&gt; &lt;li&gt;ui5-tab - contains all the information on an item (text and icon)&lt;/li&gt; &lt;li&gt;ui5-tab-separator - used to separate tabs with a line&lt;/li&gt; &lt;/ul&gt; Hierarchies Multiple sub tabs could be placed underneath one main tab. Nesting allows deeper hierarchies with indentations to indicate the level of each nested tab. When a tab has both sub tabs and own content its click area is split to allow the user to display the content or alternatively to expand / collapse the list of sub tabs. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-tabcontainer exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;content - Used to style the content of the component&lt;/li&gt; &lt;/ul&gt; Keyboard Handling Fast Navigation This component provides a build in fast navigation group which can be used via F6 / Shift + F6 or Ctrl + Alt(Option) + Down / Ctrl + Alt(Option) + Up. In order to use this functionality, you need to import the following module: import &quot;@ui5/webcomponents-base/dist/features/F6Navigation.js&quot; ES6 Module Import import &quot;@ui5/webcomponents/dist/TabContainer&quot;; import &quot;@ui5/webcomponents/dist/Tab&quot;; (for ui5-tab) import &quot;@ui5/webcomponents/dist/TabSeparator&quot;; (for ui5-tab-separator) &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; collapsed &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the tab content is collapsed. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; contentBackgroundDesign &lt;br&gt; &lt;code&gt;content-background-design&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;TabContainerBackgroundDesign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Solid&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Sets the background color of the Tab Container&#39;s content as &lt;code&gt;Solid&lt;/code&gt;, &lt;code&gt;Transparent&lt;/code&gt;, or &lt;code&gt;Translucent&lt;/code&gt;. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; fixed &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the tabs are in a fixed state that is not expandable/collapsible by user interaction. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; headerBackgroundDesign &lt;br&gt; &lt;code&gt;header-background-design&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;TabContainerBackgroundDesign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Solid&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Sets the background color of the Tab Container&#39;s header as &lt;code&gt;Solid&lt;/code&gt;, &lt;code&gt;Transparent&lt;/code&gt;, or &lt;code&gt;Translucent&lt;/code&gt;. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showOverflow &lt;br&gt; &lt;code&gt;show-overflow&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the overflow select list is displayed. &lt;br&gt;&lt;br&gt; The overflow select list represents a list, where all tabs are displayed so that it&#39;s easier for the user to select a specific tab. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; tabLayout &lt;br&gt; &lt;code&gt;tab-layout&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;TabLayout&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Standard&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the alignment of the content and the &lt;code&gt;additionalText&lt;/code&gt; of a tab. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The content and the &lt;code&gt;additionalText&lt;/code&gt; would be displayed vertically by default, but when set to &lt;code&gt;Inline&lt;/code&gt;, they would be displayed horizontally. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Standard&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Inline&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; tabsOverflowMode &lt;br&gt; &lt;code&gt;tabs-overflow-mode&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;TabsOverflowMode&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;End&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the overflow mode of the header (the tab strip). If you have a large number of tabs, only the tabs that can fit on screen will be visible. All other tabs that can &#39;t fit on the screen are available in an overflow tab &quot;More&quot;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Only one overflow at the end would be displayed by default, but when set to &lt;code&gt;StartAndEnd&lt;/code&gt;, there will be two overflows on both ends, and tab order will not change on tab selection. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;End&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;StartAndEnd&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the tabs. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Use &lt;code&gt;ui5-tab&lt;/code&gt; and &lt;code&gt;ui5-tab-separator&lt;/code&gt; for the intended design.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;overflowButton&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the button which will open the overflow menu. If nothing is provided to this slot, the default button will be used.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;startOverflowButton&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the button which will open the start overflow menu if available. If nothing is provided to this slot, the default button will be used.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;tab-select&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when a tab is selected. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;tab&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The selected &lt;code&gt;tab&lt;/code&gt;.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;tabIndex&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Integer &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The selected &lt;code&gt;tab&lt;/code&gt; index in the flattened array of all tabs and their subTabs, provided by the &lt;code&gt;allItems&lt;/code&gt; getter.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;Tab&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; The &lt;code&gt;ui5-tab&lt;/code&gt; represents a selectable item inside a &lt;code&gt;ui5-tabcontainer&lt;/code&gt;. It defines both the item in the tab strip (top part of the &lt;code&gt;ui5-tabcontainer&lt;/code&gt;) and the content that is presented to the user once the tab is selected. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; additionalText &lt;br&gt; &lt;code&gt;additional-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Represents the &quot;additionalText&quot; text, which is displayed in the tab. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; design &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.types.SemanticColor&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Default&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the component&#39;s design color. &lt;br&gt;&lt;br&gt; The design is applied to: &lt;ul&gt; &lt;li&gt;the component icon&lt;/li&gt; &lt;li&gt;the &lt;code&gt;text&lt;/code&gt; when the component overflows&lt;/li&gt; &lt;li&gt;the tab selection line&lt;/li&gt; &lt;/ul&gt; &lt;br&gt;&lt;br&gt; Available designs are: &lt;code&gt;&quot;Default&quot;&lt;/code&gt;, &lt;code&gt;&quot;Neutral&quot;&lt;/code&gt;, &lt;code&gt;&quot;Positive&quot;&lt;/code&gt;, &lt;code&gt;&quot;Critical&quot;&lt;/code&gt; and &lt;code&gt;&quot;Negative&quot;&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The design depends on the current theme. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Disabled tabs can&#39;t be selected. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the icon source URI to be displayed as graphical element within the component. The SAP-icons font provides numerous built-in icons. See all the available icons in the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selected &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Specifies if the component is selected. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; The text to be displayed for the item. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Holds the content associated with this tab.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;subTabs&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.ITab [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines hierarchies with nested sub tabs. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Use &lt;code&gt;ui5-tab&lt;/code&gt; and &lt;code&gt;ui5-tab-separator&lt;/code&gt; for the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;TabSeparator&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; The &lt;code&gt;ui5-tab-separator&lt;/code&gt; represents a vertical line to separate tabs inside a &lt;code&gt;ui5-tabcontainer&lt;/code&gt;. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/TabContainer/",
    "relUrl": "/playground/components/TabContainer/"
  },
  "216": {
    "id": "216",
    "title": "Table-perf-pure",
    "content": "&lt;!DOCTYPE html&gt; Web components Table First Second Third Fifth Sixth",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Table-perf-pure/",
    "relUrl": "/playground/main/pages/Table-perf-pure/"
  },
  "217": {
    "id": "217",
    "title": "Table-perf",
    "content": "&lt;!DOCTYPE html&gt; Web components Table First Second Third Fifth Sixth",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Table-perf/",
    "relUrl": "/playground/main/pages/Table-perf/"
  },
  "218": {
    "id": "218",
    "title": "Table",
    "content": "&lt;!DOCTYPE html&gt; Web components Table Lower table size to 650px Lower table size to 500px Products table - resize your browser to make some columns pop-in Toggle Sticky Column Header Product Supplier Dimensions Weight Price Number of poppedColumns: Product Supplier Dimensions Weight Price Product Supplier City Dublin click Sofia click London Test row click City Supplier Country Dublin J.M. Brothers USA Sofia J.M. Brothers USA London J.M. Brothers USA",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Table/",
    "relUrl": "/playground/main/pages/Table/"
  },
  "219": {
    "id": "219",
    "title": "Table",
    "content": "Table @ui5/webcomponents &lt;ui5-table&gt; Basic Table Products table - resize your browser to make some columns pop-in Toggle Sticky Column Header Product Supplier Dimensions Weight Price &lt;!-- Header --&gt; &lt;div class=&quot;header&quot;&gt; &lt;span&gt;Products table - resize your browser to make some columns pop-in&lt;/span&gt; &lt;button id=&quot;toggleSticky&quot; style=&quot;height: 32px&quot;&gt;Toggle Sticky Column Header&lt;/button&gt; &lt;/div&gt; &lt;ui5-table class=&quot;demo-table&quot; id=&quot;table&quot;&gt; &lt;!-- Columns --&gt; &lt;ui5-table-column slot=&quot;columns&quot;&gt; &lt;span style=&quot;line-height: 1.4rem&quot;&gt;Product&lt;/span&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column slot=&quot;columns&quot; min-width=&quot;800&quot;&gt; &lt;span style=&quot;line-height: 1.4rem&quot;&gt;Supplier&lt;/span&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column slot=&quot;columns&quot; min-width=&quot;600&quot; popin-text=&quot;Dimensions&quot; demand-popin class=&quot;table-header-text-alignment&quot;&gt; &lt;span style=&quot;line-height: 1.4rem&quot;&gt;Dimensions&lt;/span&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column slot=&quot;columns&quot; min-width=&quot;600&quot; popin-text=&quot;Weight&quot; demand-popin class=&quot;table-header-text-alignment&quot;&gt; &lt;span style=&quot;line-height: 1.4rem&quot;&gt;Weight&lt;/span&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column slot=&quot;columns&quot; class=&quot;table-header-text-alignment&quot;&gt; &lt;span style=&quot;line-height: 1.4rem&quot;&gt;Price&lt;/span&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-row&gt; &lt;ui5-table-cell&gt;Notebook Basic 15HT-1000&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;Very Best Screens&lt;/ui5-table-cell&gt; &lt;ui5-table-cell style=&quot;text-align: right&quot;&gt;30 x 18 x 3cm&lt;/ui5-table-cell&gt; &lt;ui5-table-cell style=&quot;text-align: right&quot;&gt;4.2KG&lt;/ui5-table-cell&gt; &lt;ui5-table-cell style=&quot;text-align: right&quot;&gt;956EUR&lt;/ui5-table-cell&gt; &lt;/ui5-table-row&gt; &lt;ui5-table-row&gt; &lt;ui5-table-cell&gt;Notebook Basic 17HT-1001&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;Very Best Screens&lt;/ui5-table-cell&gt; &lt;ui5-table-cell style=&quot;text-align: right&quot;&gt;29 x 17 x 3.1cm&lt;/ui5-table-cell&gt; &lt;ui5-table-cell style=&quot;text-align: right&quot;&gt;4.5KG&lt;/ui5-table-cell&gt; &lt;ui5-table-cell style=&quot;text-align: right&quot;&gt;1249EUR&lt;/ui5-table-cell&gt; &lt;/ui5-table-row&gt; &lt;ui5-table-row&gt; &lt;ui5-table-cell&gt;Notebook Basic 18HT-1002&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;Very Best Screens&lt;/ui5-table-cell&gt; &lt;ui5-table-cell style=&quot;text-align: right&quot;&gt;28 x 19 x 2.5cm&lt;/ui5-table-cell&gt; &lt;ui5-table-cell style=&quot;text-align: right&quot;&gt;4.2KG&lt;/ui5-table-cell&gt; &lt;ui5-table-cell style=&quot;text-align: right&quot;&gt;1570EUR&lt;/ui5-table-cell&gt; &lt;/ui5-table-row&gt; ... &lt;/ui5-table&gt; Table in SingleSelect mode Product Supplier Dimensions Weight Price &lt;ui5-table mode=&quot;SingleSelect&quot;&gt;&lt;/ui5-table&gt; Table in MultiSelect mode Product Supplier Dimensions Weight Price &lt;ui5-table mode=&quot;MultiSelect&quot;&gt;&lt;/ui5-table&gt; Table Display Inline Products table - resize your browser to make the columns display inline Toggle Sticky Column Header Product Supplier Dimensions Weight Price &lt;div class=&quot;header&quot;&gt; &lt;span&gt;Products table - resize your browser to make the columns display inline&lt;/span&gt; &lt;button id=&quot;toggleSticky&quot; style=&quot;height: 32px&quot;&gt;Toggle Sticky Column Header&lt;/button&gt; &lt;/div&gt; &lt;ui5-table class=&quot;demo-table&quot; id=&quot;tblDisplayInline&quot;&gt; &lt;!-- Columns --&gt; &lt;ui5-table-column slot=&quot;columns&quot; popin-display=&quot;Inline&quot;&gt; &lt;span&gt;Product&lt;/span&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column slot=&quot;columns&quot; min-width=&quot;600&quot; popin-text=&quot;Supplier&quot; demand-popin popin-display=&quot;Inline&quot;&gt; &lt;span&gt;Supplier&lt;/span&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column slot=&quot;columns&quot; min-width=&quot;800&quot; popin-text=&quot;Dimensions&quot; demand-popin class=&quot;table-header-text-alignment&quot; popin-display=&quot;Inline&quot;&gt; &lt;span&gt;Dimensions&lt;/span&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column slot=&quot;columns&quot; min-width=&quot;800&quot; popin-text=&quot;Weight&quot; demand-popin class=&quot;table-header-text-alignment&quot; popin-display=&quot;Inline&quot;&gt; &lt;span&gt;Weight&lt;/span&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column slot=&quot;columns&quot; class=&quot;table-header-text-alignment&quot; popin-display=&quot;Inline&quot;&gt; &lt;span&gt;Price&lt;/span&gt; &lt;/ui5-table-column&gt; &lt;/ui5-table&gt; &lt;section&gt; &lt;h3&gt;Table with No Data&lt;/h3&gt; &lt;div class=&quot;snippet flex-column&quot;&gt; &lt;ui5-table class=&quot;demo-table&quot; no-data-text=&quot;No Data&quot;&gt; &lt;!-- Columns --&gt; &lt;ui5-table-column slot=&quot;columns&quot;&gt; &lt;span style=&quot;line-height: 1.4rem&quot;&gt;Product&lt;/span&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column slot=&quot;columns&quot; min-width=&quot;800&quot; popin-text=&quot;Supplier&quot;&gt; &lt;span style=&quot;line-height: 1.4rem&quot;&gt;Supplier&lt;/span&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column slot=&quot;columns&quot; min-width=&quot;600&quot; popin-text=&quot;Dimensions&quot; demand-popin&gt; &lt;span style=&quot;line-height: 1.4rem&quot;&gt;Dimensions&lt;/span&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column slot=&quot;columns&quot; min-width=&quot;600&quot; popin-text=&quot;Weight&quot; demand-popin&gt; &lt;span style=&quot;line-height: 1.4rem&quot;&gt;Weight&lt;/span&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column slot=&quot;columns&quot;&gt; &lt;span style=&quot;line-height: 1.4rem&quot;&gt;Price&lt;/span&gt; &lt;/ui5-table-column&gt; &lt;/ui5-table&gt; &lt;/div&gt; &lt;pre class=&quot;highlight&quot;&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;ui5-table&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;demo-table&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;no-data-text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;No Data&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;ui5-table-column&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;slot=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;columns&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;line-height: 1.4rem&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Product&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ui5-table-column&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;ui5-table-column&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;slot=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;columns&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;min-width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;800&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;popin-text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Supplier&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;line-height: 1.4rem&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Supplier&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ui5-table-column&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;ui5-table-column&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;slot=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;columns&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;min-width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;600&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;popin-text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Dimensions&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;demand-popin&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;line-height: 1.4rem&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Dimensions&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ui5-table-column&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;ui5-table-column&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;slot=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;columns&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;min-width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;600&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;popin-text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Weight&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;demand-popin&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;line-height: 1.4rem&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Weight&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ui5-table-column&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;ui5-table-column&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;slot=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;columns&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;line-height: 1.4rem&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Price&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ui5-table-column&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ui5-table&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;/pre&gt; &lt;/section&gt; Growing Table with &quot;More&quot; button Product Supplier Dimensions Weight Price &lt;ui5-table id=&quot;tbl&quot; growing=&quot;Button&quot; growing-button-subtext=&quot;[4 / 12]&quot;&gt;&lt;/ui5-table&gt; &lt;script&gt; tbl.addEventListener(&quot;load-more&quot;, function() { rowsToLoad.forEach(() =&gt; { tbl.appendChild(document.createElement(&#39;ui5-table-row&#39;)); }); }); &lt;/script&gt; Growing Table on Scroll Product Supplier Dimensions Weight Price &lt;ui5-table id=&quot;myTblGrowsOnScroll&quot; growing=&quot;Scroll&quot;&gt;&lt;/ui5-table&gt; &lt;script&gt; myTblGrowsOnScroll.addEventListener(&quot;load-more&quot;, function() { busyIndicator.active = true; rowsToLoad.forEach(() =&gt; { tbl.appendChild(document.createElement(&#39;ui5-table-row&#39;)); }); setTimeout(() =&gt; { busyIndicator.active = false; }, 500); }); &lt;/script&gt; Table with grouping (SingleSelect - click on item to set navigated) The ui5-table-group-row allows visual grouping of the table rows. City Supplier Country Country: Bulgaria Sofia Company 1 Bulgaria Plovdiv Company 2 Bulgaria Country: USA Denver Company 3 USA Boston Company 4 USA &lt;ui5-table class=&quot;demo-table-single&quot; mode=&quot;SingleSelect&quot;&gt; &lt;ui5-table-column id=&quot;column-1&quot; slot=&quot;columns&quot;&gt; &lt;ui5-label&gt;City&lt;/ui5-label&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column id=&quot;column-2&quot; slot=&quot;columns&quot; min-width=&quot;500&quot; popin-text=&quot;Supplier&quot; demand-popin&gt; &lt;ui5-label&gt;Supplier&lt;/ui5-label&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column id=&quot;column-3&quot; slot=&quot;columns&quot; min-width=&quot;500&quot;&gt; &lt;ui5-label&gt;Country&lt;/ui5-label&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-group-row&gt;Country: Bulgaria&lt;/ui5-table-group-row&gt; &lt;ui5-table-row&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Sofia&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Company 1&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Bulgaria&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;/ui5-table-row&gt; &lt;ui5-table-row&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Plovdiv&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Company 2&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Bulgaria&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;/ui5-table-row&gt; &lt;ui5-table-group-row&gt;&lt;span&gt;Country: USA&lt;/span&gt;&lt;/ui5-table-group-row&gt; &lt;ui5-table-row&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Denver&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Company 3&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;USA&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;/ui5-table-row&gt; &lt;ui5-table-row&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Boston&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Company 4&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;USA&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;/ui5-table-row&gt; &lt;/ui5-table&gt; &lt;script&gt; document.getElementById(&quot;singleSelectTbl&quot;).addEventListener(&quot;ui5-selection-change&quot;, function(event) { if (event.detail.previouslySelectedRows.length) { event.detail.previouslySelectedRows[0].removeAttribute(&quot;navigated&quot;); } event.detail.selectedRows[0].setAttribute(&quot;navigated&quot;, &#39;&#39;); }); &lt;/script&gt; Tables with grouping (MultiSelect) City Supplier Country Country: Bulgaria Sofia Company 1 Bulgaria Plovdiv Company 2 Bulgaria Country: USA Denver Company 3 USA Boston Company 4 USA &lt;ui5-table class=&quot;demo-table-multi&quot; mode=&quot;MultiSelect&quot;&gt; &lt;ui5-table-column id=&quot;column-1&quot; slot=&quot;columns&quot;&gt; &lt;ui5-label&gt;City&lt;/ui5-label&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column id=&quot;column-2&quot; slot=&quot;columns&quot; min-width=&quot;500&quot; popin-text=&quot;Supplier&quot; demand-popin&gt; &lt;ui5-label&gt;Supplier&lt;/ui5-label&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-column id=&quot;column-3&quot; slot=&quot;columns&quot; min-width=&quot;500&quot;&gt; &lt;ui5-label&gt;Country&lt;/ui5-label&gt; &lt;/ui5-table-column&gt; &lt;ui5-table-group-row&gt;Country: Bulgaria&lt;/ui5-table-group-row&gt; &lt;ui5-table-row&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Sofia&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Company 1&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Bulgaria&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;/ui5-table-row&gt; &lt;ui5-table-row&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Plovdiv&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Company 2&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Bulgaria&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;/ui5-table-row&gt; &lt;ui5-table-group-row&gt;&lt;span&gt;Country: USA&lt;/span&gt;&lt;/ui5-table-group-row&gt; &lt;ui5-table-row&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Denver&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Company 3&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;USA&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;/ui5-table-row&gt; &lt;ui5-table-row&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Boston&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;Company 4&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;ui5-table-cell&gt;&lt;span&gt;USA&lt;/span&gt;&lt;/ui5-table-cell&gt; &lt;/ui5-table-row&gt; &lt;/ui5-table&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-import type { table } from &quot;./TableRow.js&quot;;/code&gt; component provides a set of sophisticated and convenient functions for responsive table design. It provides a comprehensive set of features for displaying and dealing with vast amounts of data. To render the Table properly, the order of the columns should match with the order of the item cells in the rows. Desktop and tablet devices are supported. On tablets, special consideration should be given to the number of visible columns and rows due to the limited performance of some devices. Selection To benefit from the selection mechanism of ui5-table component, you can use the available selection modes: SingleSelect and MultiSelect. In additition to the used mode, you can also specify the ui5-table-row type choosing between Active or Inactive. In SingleSelect mode, you can select both an Active and Inactive row via mouse or by pressing the Space or Enter keys. In MultiSelect mode, you can select both an Active and Inactive row by pressing the Space key when a row is on focus or via mouse click over the selection checkbox of the row. In order to select all the available rows at once, you can use the selection checkbox presented in the table’s header. Note: Currently, when a column is shown as a pop-in, the visual indication for selection is not presented over it. Keyboard Handling Fast Navigation This component provides a build in fast navigation group which can be used via F6 / Shift + F6 or Ctrl + Alt(Option) + Down / Ctrl + Alt(Option) + Up. In order to use this functionality, you need to import the following module: import &quot;@ui5/webcomponents-base/dist/features/F6Navigation.js&quot; Furthermore, you can interact with ui5-table via the following keys. [F7] - If focus is on an interactive control inside an item, moves focus to the corresponding item. [CTRL]+[A] - Selects all items, if MultiSelect mode is enabled. [HOME]/[END] - Focuses the first/last item. [PAGEUP]/[PAGEDOWN] - Moves focus up/down by page size (20 items by default). [ALT]+[DOWN]/[UP] - Switches focus between header, last focused item, and More button (if applies) in either direction. [SHIFT]+[DOWN]/[UP] - Selects the next/previous item in a MultiSelect table, if the current item is selected (Range selection). Otherwise, deselects them (Range deselection). [SHIFT]+[HOME]/[END] - Range selection to the first/last item of the List. [CTRL]+[HOME]/[END] - Same behavior as HOME &amp; END. ES6 Module Import import &quot;@ui5/webcomponents/dist/Table.js&quot;; import &quot;@ui5/webcomponents/dist/TableColumn.js&quot;; (for ui5-table-column) import &quot;@ui5/webcomponents/dist/TableRow.js&quot;; (for ui5-table-row) import &quot;@ui5/webcomponents/dist/TableCell.js&quot;; (for ui5-table-cell) &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.3.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.3.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; busy &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the table is in busy state. &lt;b&gt; In this state the component&#39;s opacity is reduced and busy indicator is displayed at the bottom of the table. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.12&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; busyDelay &lt;br&gt; &lt;code&gt;busy-delay&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;1000&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the delay in milliseconds, after which the busy indicator will show up for this component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; growing &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;TableGrowingMode&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the table will have growing capability either by pressing a &lt;code&gt;More&lt;/code&gt; button, or via user scroll. In both cases &lt;code&gt;load-more&lt;/code&gt; event is fired. &lt;br&gt;&lt;br&gt; Available options: &lt;br&gt;&lt;br&gt; &lt;code&gt;Button&lt;/code&gt; - Shows a &lt;code&gt;More&lt;/code&gt; button at the bottom of the table, pressing of which triggers the &lt;code&gt;load-more&lt;/code&gt; event. &lt;br&gt; &lt;code&gt;Scroll&lt;/code&gt; - The &lt;code&gt;load-more&lt;/code&gt; event is triggered when the user scrolls to the bottom of the table; &lt;br&gt; &lt;code&gt;None&lt;/code&gt; (default) - The growing is off. &lt;br&gt;&lt;br&gt; &lt;b&gt;Restrictions:&lt;/b&gt; &lt;code&gt;growing=&quot;Scroll&quot;&lt;/code&gt; is not supported for Internet Explorer, and the component will fallback to &lt;code&gt;growing=&quot;Button&quot;&lt;/code&gt;. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.12&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; growingButtonSubtext &lt;br&gt; &lt;code&gt;growing-button-subtext&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the subtext that will be displayed under the &lt;code&gt;growingButtonText&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; This property takes effect if &lt;code&gt;growing&lt;/code&gt; is set to &lt;code&gt;Button&lt;/code&gt;. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; growingButtonText &lt;br&gt; &lt;code&gt;growing-button-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text that will be displayed inside the growing button at the bottom of the table, meant for loading more rows upon press. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If not specified a built-in text will be displayed. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; This property takes effect if &lt;code&gt;growing&lt;/code&gt; is set to &lt;code&gt;Button&lt;/code&gt;. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideNoData &lt;br&gt; &lt;code&gt;hide-no-data&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the value of &lt;code&gt;noDataText&lt;/code&gt; will be diplayed when there is no rows present in the table. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; mode &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;TableMode&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the mode of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;MultiSelect&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SingleSelect&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;ul&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; noDataText &lt;br&gt; &lt;code&gt;no-data-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text that will be displayed when there is no data and &lt;code&gt;hideNoData&lt;/code&gt; is not present. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; stickyColumnHeader &lt;br&gt; &lt;code&gt;sticky-column-header&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the column headers remain fixed at the top of the page during vertical scrolling as long as the Web Component is in the viewport. &lt;br&gt;&lt;br&gt; &lt;b&gt;Restrictions:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;Browsers that do not support this feature: &lt;ul&gt; &lt;li&gt;Internet Explorer&lt;/li&gt; &lt;li&gt;Microsoft Edge lower than version 41 (EdgeHTML 16)&lt;/li&gt; &lt;li&gt;Mozilla Firefox lower than version 59&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;Scrolling behavior: &lt;ul&gt; &lt;li&gt;If the Web Component is placed in layout containers that have the &lt;code&gt;overflow: hidden&lt;/code&gt; or &lt;code&gt;overflow: auto&lt;/code&gt; style definition, this can prevent the sticky elements of the Web Component from becoming fixed at the top of the viewport.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;columns&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the configuration for the columns of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Use &lt;code&gt;ui5-table-column&lt;/code&gt; for the intended design.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the component rows. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Use &lt;code&gt;ui5-table-row&lt;/code&gt; for the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;load-more&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the user presses the &lt;code&gt;More&lt;/code&gt; button or scrolls to the table&#39;s end. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The event will be fired if &lt;code&gt;growing&lt;/code&gt; is set to &lt;code&gt;Button&lt;/code&gt; or &lt;code&gt;Scroll&lt;/code&gt;. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.11&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;popin-change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when &lt;code&gt;ui5-table-column&lt;/code&gt; is shown as a pop-in instead of hiding it. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.6&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;poppedColumns&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Array &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; popped-in columns.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;row-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when a row in &lt;code&gt;Active&lt;/code&gt; mode is clicked or &lt;code&gt;Enter&lt;/code&gt; key is pressed. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;row&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the activated row.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;selection-change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when selection is changed by user interaction in &lt;code&gt;SingleSelect&lt;/code&gt; and &lt;code&gt;MultiSelect&lt;/code&gt; modes. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;selectedRows&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Array &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; An array of the selected rows.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;previouslySelectedRows&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Array &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; An array of the previously selected rows.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;TableColumn&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-table-column component allows to define column specific properties that are applied when rendering the ui5-table component. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-table-column exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;column - Used to style the native th element&lt;/li&gt; &lt;/ul&gt; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; demandPopin &lt;br&gt; &lt;code&gt;demand-popin&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; According to your &lt;code&gt;minWidth&lt;/code&gt; settings, the component can be hidden in different screen sizes. &lt;br&gt;&lt;br&gt; Setting this property to &lt;code&gt;true&lt;/code&gt;, shows this column as pop-in instead of hiding it. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; minWidth &lt;br&gt; &lt;code&gt;min-width&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.base.types.Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Infinity&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the minimum table width required to display this column. By default it is always displayed. &lt;br&gt;&lt;br&gt; The responsive behavior of the &lt;code&gt;ui5-table&lt;/code&gt; is determined by this property. As an example, by setting &lt;code&gt;minWidth&lt;/code&gt; property to &lt;code&gt;400&lt;/code&gt; sets the minimum width to 400 pixels, and shows this column on tablet (and desktop) but hides it on mobile. &lt;br&gt; For further responsive design options, see &lt;code&gt;demandPopin&lt;/code&gt; property. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; popinDisplay &lt;br&gt; &lt;code&gt;popin-display&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;TableColumnPopinDisplay&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Block&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines how the popin row is displayed. &lt;br&gt;&lt;br&gt; &lt;b&gt;The available values are:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Block&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Inline&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; popinText &lt;br&gt; &lt;code&gt;popin-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; The text for the column when it pops in. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the content of the column header.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;TableRow&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-table-row component represents a row in the ui5-table. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-table-row exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;row - Used to style the native tr element&lt;/li&gt; &lt;li&gt;popin-row - Used to style the tr element when a row pops in&lt;/li&gt; &lt;/ul&gt; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; navigated &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Indicates if the table row is navigated. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.9.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selected &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the row&#39;s selected state. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; type &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.types.TableRowType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Inactive&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the visual indication and behavior of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Active&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Inactive&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When set to &lt;code&gt;Active&lt;/code&gt;, the item will provide visual response upon press, while with type &lt;code&gt;Inactive&lt;/code&gt; - will not. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.ITableCell [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the cells of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Use &lt;code&gt;ui5-table-cell&lt;/code&gt; for the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;TableGroupRow&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-table-group-row component represents a group row in the ui5-table. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-table-group-row exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;group-row - Used to style the native tr element.&lt;/li&gt; &lt;/ul&gt; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the text of the component. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;TableCell&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-table-cell component defines the structure of the data in a single ui5-table cell. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-table-cell exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;cell - Used to style the native td element&lt;/li&gt; &lt;/ul&gt; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Specifies the content of the component.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Table/",
    "relUrl": "/playground/components/Table/"
  },
  "220": {
    "id": "220",
    "title": "Table2",
    "content": "&lt;!DOCTYPE html&gt; Web components Table",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Table2/",
    "relUrl": "/playground/main/pages/Table2/"
  },
  "221": {
    "id": "221",
    "title": "Table All Popin",
    "content": "&lt;!DOCTYPE html&gt; Web components Table Product Supplier Dimensions Weight Price Notebook Basic 15 Very Best Screens 30 x 18 x 3 cm 4.2 KG 956 EUR Notebook Basic 17 Very Best Screens 40 x 18 x 3 cm 4.6 KG 1956 EUR Notebook Basic 19 Very Best Screens 50 x 18 x 3 cm 4.9 KG 2956 EUR Product Supplier Dimensions Weight Product Supplier Default SingleSelect table (click on an item to set as navigated) Product Supplier Dimensions Weight Price Notebook Basic 15 Very Best Screens 30 x 18 x 3 cm 4.2 KG 956 EUR Notebook Basic 17 Very Best Screens 40 x 18 x 3 cm 4.6 KG 1956 EUR Notebook Basic 19 Very Best Screens 50 x 18 x 3 cm 4.9 KG 2956 EUR",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/TableAllPopin/",
    "relUrl": "/playground/main/pages/TableAllPopin/"
  },
  "222": {
    "id": "222",
    "title": "Table Custom Styling",
    "content": "&lt;!DOCTYPE html&gt; Web components Table Product Supplier Dimensions Weight Price Notebook Basic 15 Very Best Screens 30 x 18 x 3 cm 4.2 KG 956 EUR Notebook Basic 17 Very Best Screens 40 x 18 x 3 cm 4.6 KG 1956 EUR Notebook Basic 19 Very Best Screens 50 x 18 x 3 cm 4.9 KG 2956 EUR",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/TableCustomStyling/",
    "relUrl": "/playground/main/pages/TableCustomStyling/"
  },
  "223": {
    "id": "223",
    "title": "Table Grouping",
    "content": "&lt;!DOCTYPE html&gt; Web components Table Table with grouping: City Supplier Country Country: Bulgaria Sofia Sirenje EOOD Bulgaria Plovdiv Kashkavali AD Bulgaria Country: USA Dublin J.M. Brothers USA Boston J.M. Brothers USA MultiSelect Table with grouping: City Supplier Country Country: Bulgaria Sofia Sirenje EOOD Bulgaria Plovdiv Kashkavali AD Bulgaria Country: USA Dublin J.M. Brothers USA Boston J.M. Brothers USA",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/TableGrouping/",
    "relUrl": "/playground/main/pages/TableGrouping/"
  },
  "224": {
    "id": "224",
    "title": "Table Growing With Button",
    "content": "&lt;!DOCTYPE html&gt; Table Product Supplier Dimensions Weight Price Custom texts Product Supplier Dimensions Weight Price",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/TableGrowingWithButton/",
    "relUrl": "/playground/main/pages/TableGrowingWithButton/"
  },
  "225": {
    "id": "225",
    "title": "Table Growing With Scroll",
    "content": "&lt;!DOCTYPE html&gt; Table &amp;ltui5-table growing=&quot;Scroll&quot;&gt;&amp;lt/ui5-table&gt; table.addEventListener(&quot;load-more&quot;, () =&gt; { table.busy = true; // set busy state setTimeout(function() { // load items - make take some time loadMoreRows(); table.busy = false; // remove busy state }, 1500); }); SrollToBottom Product Supplier Dimensions Weight Price",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/TableGrowingWithScroll/",
    "relUrl": "/playground/main/pages/TableGrowingWithScroll/"
  },
  "226": {
    "id": "226",
    "title": "Table Selection",
    "content": "&lt;!DOCTYPE html&gt; Web components Table Lower tables size to 500px Resize your browser to make some columns pop-in Table in SingleSelect mode Product Supplier Dimensions Weight Price Row Type Notebook Basic 15 Very Best Screens 30 x 18 x 3 cm 4.2 KG 956 EUR Active Notebook Basic 17 Very Best Screens 29 x 17 x 3.1 cm 4.5 KG 1249 EUR Active Notebook Basic 18 Very Best Screens 28 x 19 x 2.5 cm 4.2 KG 1570 EUR Inactive Notebook Basic 19 Smartcards 32 x 21 x 4 cm 4.2 KG 1650 EUR Inactive Table in MultiSelect mode Product Supplier Dimensions Weight Price Row Type Notebook Basic 15 Very Best Screens 30 x 18 x 3 cm 4.2 KG 956 EUR Active Notebook Basic 17 Very Best Screens 29 x 17 x 3.1 cm 4.5 KG 1249 EUR Active Notebook Basic 18 Very Best Screens 28 x 19 x 2.5 cm 4.2 KG 1570 EUR Inactive Notebook Basic 19 Smartcards 32 x 21 x 4 cm 4.2 KG 1650 EUR Inactive Table in Default mode Product Supplier Dimensions Weight Price Row Type Notebook Basic 15 Very Best Screens 30 x 18 x 3 cm 4.2 KG 956 EUR Active Notebook Basic 17 Very Best Screens 29 x 17 x 3.1 cm 4.5 KG 1249 EUR Active Notebook Basic 18 Very Best Screens 28 x 19 x 2.5 cm 4.2 KG 1570 EUR Inactive Notebook Basic 19 Smartcards 32 x 21 x 4 cm 4.2 KG 1650 EUR Inactive",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/TableSelection/",
    "relUrl": "/playground/main/pages/TableSelection/"
  },
  "227": {
    "id": "227",
    "title": "Test",
    "content": "&lt;!DOCTYPE html&gt; Table",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Test/",
    "relUrl": "/playground/main/pages/Test/"
  },
  "228": {
    "id": "228",
    "title": "Text Area",
    "content": "&lt;!DOCTYPE html&gt; TextArea Single Row TextArea with Exceeded Characters Value State Message Information message. This is a Link. Extra long text used as an information message. Extra long text used as an information message - 2. Extra long text used as an information message - 3. Simple TextArea This msg will not be displayed as no value-state is set. TextArea with value Disabled TextArea Readonly TextArea Required TextArea Text Area: Growing Text Area: Growing with 8 initial rows Text Area: Growing up to 4 Text Area: Growing with initial rows 4 and growing up to 12 Text Area: growing with max length 20 characters Text Area: max length 20 characters Text Area: showExceededText with maxlength Text Area: showExceededText with maxlength &#39;0&#39; Text Area: change event Text Area: input event Growing: growing-max-lines=&quot;1&quot; Growing: growing-max-lines=&quot;4&quot; Growing: growing-max-lines=&quot;1&quot; (compact) Growing: growing-max-lines=&quot;4&quot; (compact) info text Readonly textarea with value state This should be in aria-label property of the text area This should not be in aria-label property of the text area",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/TextArea/",
    "relUrl": "/playground/main/pages/TextArea/"
  },
  "229": {
    "id": "229",
    "title": "Text Area",
    "content": "TextArea @ui5/webcomponents &lt;ui5-textarea&gt; Basic TextArea &lt;ui5-textarea placeholder=&quot;Type as much text as you wish&quot;&gt;&lt;/ui5-textarea&gt; TextArea with Maximum Length &lt;ui5-textarea placeholder=&quot;Type some text&quot; maxlength=&quot;10&quot; show-exceeded-text&gt;&lt;/ui5-textarea&gt; TextArea with Label Description &lt;ui5-label for=&quot;textAreaWithLabelID&quot;&gt;Description&lt;/ui5-label&gt; &lt;ui5-textarea id=&quot;textAreaWithLabelID&quot; class=&quot;textarea-width&quot; placeholder=&quot;Enter description&quot;&gt;&lt;/ui5-textarea&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-textarea component is used to enter multiple lines of text. When empty, it can hold a placeholder similar to a ui5-input. You can define the rows of the ui5-textarea and also determine specific behavior when handling long texts. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-textarea exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;textarea - Used to style the native textarea&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/TextArea&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the textarea. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Indicates whether the user can interact with the component or not. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A disabled component is completely noninteractive. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; growing &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Enables the component to automatically grow and shrink dynamically with its content. &lt;br&gt;&lt;br&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; growingMaxLines &lt;br&gt; &lt;code&gt;growing-max-lines&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;0&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the maximum number of lines that the component can grow. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; maxlength &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;null&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the maximum number of characters that the &lt;code&gt;value&lt;/code&gt; can have. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; name &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the name with which the component will be submitted in an HTML form. &lt;br&gt;&lt;br&gt; &lt;b&gt;Important:&lt;/b&gt; For the &lt;code&gt;name&lt;/code&gt; property to have effect, you must add the following import to your project: &lt;code&gt;import &quot;@ui5/webcomponents/dist/features/InputElementsFormSupport.js&quot;;&lt;/code&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When set, a native &lt;code&gt;input&lt;/code&gt; HTML element will be created inside the component so that it can be submitted as part of an HTML form. Do not use this property unless you need to submit a form. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; placeholder &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a short hint intended to aid the user with data entry when the component has no value. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; readonly &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is read-only. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A read-only component is not editable, but still provides visual feedback upon user interaction. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; required &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is required. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.3&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; rows &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;0&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the number of visible text lines for the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Notes:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;If the &lt;code&gt;growing&lt;/code&gt; property is enabled, this property defines the minimum rows to be displayed in the textarea.&lt;/li&gt; &lt;li&gt;The CSS &lt;code&gt;height&lt;/code&gt; property wins over the &lt;code&gt;rows&lt;/code&gt; property, if both are set.&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; showExceededText &lt;br&gt; &lt;code&gt;show-exceeded-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the characters exceeding the maximum allowed character count are visible in the component. &lt;br&gt;&lt;br&gt; If set to &lt;code&gt;false&lt;/code&gt;, the user is not allowed to enter more characters than what is set in the &lt;code&gt;maxlength&lt;/code&gt; property. If set to &lt;code&gt;true&lt;/code&gt; the characters exceeding the &lt;code&gt;maxlength&lt;/code&gt; value are selected on paste and the counter below the component displays their number. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value of the component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; valueState &lt;br&gt; &lt;code&gt;value-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value state of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Success&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Information&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If &lt;code&gt;maxlength&lt;/code&gt; property is set, the component turns into &quot;Warning&quot; state once the characters exceeds the limit. In this case, only the &quot;Error&quot; state is considered and can be applied. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.7&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;valueStateMessage&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the value state message that will be displayed as pop up under the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If not specified, a default text (in the respective language) will be displayed. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;valueStateMessage&lt;/code&gt; would be displayed if the component has &lt;code&gt;valueState&lt;/code&gt; of type &lt;code&gt;Information&lt;/code&gt;, &lt;code&gt;Warning&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt;.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the text has changed and the focus leaves the component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;input&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the value of the component changes at each keystroke or when something is pasted. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.5&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/TextArea/",
    "relUrl": "/playground/components/TextArea/"
  },
  "230": {
    "id": "230",
    "title": "Time Picker",
    "content": "&lt;!DOCTYPE html&gt; Test &quot;change&quot; event Test &quot;input&quot; event Test empty value btn for testing Test set time value Set time Test valueStateMessage slot Please provide valid value btn for testing TimePicker in Compact",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/TimePicker/",
    "relUrl": "/playground/main/pages/TimePicker/"
  },
  "231": {
    "id": "231",
    "title": "Time Picker",
    "content": "TimePicker v1.0.0-rc.6 @ui5/webcomponents &lt;ui5-time-picker&gt; Basic TimePicker &lt;ui5-time-picker id=&quot;timepicker1&quot;&gt;&lt;/ui5-time-picker&gt; TimePicker in twelve hours format &lt;ui5-time-picker id=&quot;timepicker1&quot; format-pattern=&quot;hh:mm:ss a&quot;&gt;&lt;/ui5-time-picker&gt; TimePicker with only minutes and seconds &lt;ui5-time-picker id=&quot;timepicker2&quot; format-pattern=&quot;mm:ss&quot;&gt;&lt;/ui5-time-picker&gt; TimePicker with value-state and valueStateMessage Please provide valid value &lt;ui5-time-picker id=&quot;timepicker3&quot; format-pattern=&quot;mm:ss&quot; value-state=&quot;Error&quot;&gt; &lt;div slot=&quot;valueStateMessage&quot;&gt;Please provide valid value&lt;/div&gt; &lt;/ui5-time-picker&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The &lt;code&gt;ui5-time-picker&lt;/code&gt; component provides an input field with assigned sliders which are opened on user action. The &lt;code&gt;ui5-time-picker&lt;/code&gt; allows users to select a localized time using touch, mouse, or keyboard input. It consists of two parts: the time input field and the sliders. Usage The user can enter a time by: &lt;ul&gt; &lt;li&gt;Using the sliders that are displayed in a popup&lt;/li&gt; &lt;li&gt;Typing it in directly in the input field&lt;/li&gt; &lt;/ul&gt; When the user makes an entry and chooses the enter key, the sliders shows the corresponding time. When the user directly triggers the sliders display, the actual time is displayed. For the ui5-time-picker Formatting If a time is entered by typing it into the input field, it must fit to the used time format. Supported format options are pattern-based on Unicode LDML Date Format notation. For more information, see UTS #35: Unicode Locale Data Markup Language. For example, if the format-pattern is “HH:mm:ss”, a valid value string is “11:42:35” and the same is displayed in the input. Keyboard handling [F4], [ALT]+[UP], [ALT]+[DOWN] Open/Close picker dialog and move focus to it. When closed: &lt;ul&gt; &lt;li&gt;[PAGEUP] - Increments hours by 1. If 12 am is reached, increment hours to 1 pm and vice versa.&lt;/li&gt; &lt;li&gt;[PAGEDOWN] - Decrements the corresponding field by 1. If 1 pm is reached, decrement hours to 12 am and vice versa.&lt;/li&gt; &lt;li&gt;[SHIFT]+[PAGEUP] Increments minutes by 1.&lt;/li&gt; &lt;li&gt;[SHIFT]+ [PAGEDOWN] Decrements minutes by 1.&lt;/li&gt; &lt;li&gt;[SHIFT]+[CTRL]+[PAGEUP] Increments seconds by 1.&lt;/li&gt; &lt;li&gt;[SHIFT]+[CTRL]+ [PAGEDOWN] Decrements seconds by 1.&lt;/li&gt; &lt;/ul&gt; When opened: &lt;ul&gt; &lt;li&gt;[UP] If focus is on one of the selection lists: Select the value which is above the current value. If the first value is selected, select the last value in the list. Exception: AM/ PM List: stay on the first item.&lt;/li&gt; &lt;li&gt;[DOWN] If focus is on one of the selection lists: Select the value which is below the current value. If the last value is selected, select the first value in the list. Exception: AM/ PM List: stay on the last item.&lt;/li&gt; &lt;li&gt;[LEFT] If focus is on one of the selection lists: Move focus to the selection list which is left of the current selection list. If focus is at the first selection list, move focus to the last selection list.&lt;/li&gt; &lt;li&gt;[RIGHT] If focus is on one of the selection lists: Move focus to the selection list which is right of the current selection list. When focus is at the last selection list, move focus to the first selection list.&lt;/li&gt; &lt;li&gt;[PAGEUP] If focus is on one of the selection lists: Move focus to the first entry of this list.&lt;/li&gt; &lt;li&gt;[PAGEDOWN] If focus is on one of the selection lists: Move focus to the last entry of this list.&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/TimePicker.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; dateValue (readonly) &lt;br&gt; &lt;code&gt;date-value&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Date&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Currently selected time represented as JavaScript Date instance &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; formatPattern &lt;br&gt; &lt;code&gt;format-pattern&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines the format, displayed in the input field. Example: HH:mm:ss -&gt; 11:42:35 hh:mm:ss a -&gt; 2:23:15 PM mm:ss -&gt; 12:04 (only minutes and seconds) &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; placeholder &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a short hint, intended to aid the user with data entry when the component has no value. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When no placeholder is set, the format pattern is displayed as a placeholder. Passing an empty string as the value of this property will make the component appear empty - without placeholder or format pattern. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the &lt;code&gt;ui5-time-picker&lt;/code&gt; is displayed as disabled. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; readonly &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the &lt;code&gt;ui5-time-picker&lt;/code&gt; is displayed as readonly. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; value &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines a formatted time value. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; valueState &lt;br&gt; &lt;code&gt;value-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the value state of the &lt;code&gt;ui5-time-picker&lt;/code&gt;. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Warning&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Success&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Information&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;valueStateMessage&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the value state message that will be displayed as pop up under the &lt;code&gt;ui5-time-picker&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If not specified, a default text (in the respective language) will be displayed. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;valueStateMessage&lt;/code&gt; would be displayed, when the &lt;code&gt;ui5-time-picker&lt;/code&gt; is in &lt;code&gt;Information&lt;/code&gt;, &lt;code&gt;Warning&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt; value state.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the input operation has finished by clicking the &quot;OK&quot; button or when the text in the input field has changed and the focus leaves the input field. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;input&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the value of the &lt;code&gt;ui5-time-picker&lt;/code&gt; is changed at each key stroke. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;closePicker&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Closes the picker&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;formatValue&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Formats a Java Script date object into a string representing a locale date and time according to the &lt;code&gt;formatPattern&lt;/code&gt; property of the TimePicker instance&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;date&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; object &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; A Java Script date object to be formatted as string&lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;isOpen&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Checks if the picker is open&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;isValid&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Checks if a value is valid against the current &lt;code&gt;formatPattern&lt;/code&gt; value. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; an empty string is considered as valid value.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;value&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; string &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The value to be tested against the current date format&lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;openPicker&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Opens the picker.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/TimePicker/",
    "relUrl": "/playground/components/TimePicker/"
  },
  "232": {
    "id": "232",
    "title": "Time Selection",
    "content": "&lt;!DOCTYPE html&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/TimeSelection/",
    "relUrl": "/playground/main/pages/TimeSelection/"
  },
  "233": {
    "id": "233",
    "title": "Timeline",
    "content": "&lt;!DOCTYPE html&gt; Timeline ui5-timeline Timeline within Card Vertical MR SOF02 2.43 Online meeting Timeline within Card Horizontal MR SOF02 2.43 Online meeting Result Basic Timeline - Vertical MR SOF02 2.43 Online meeting Online meeting Online meeting Online meeting Online meeting Online meeting Online meeting Online meeting Basic Timeline - Horizontal MR SOF02 2.43 Online meeting Online meeting Online meeting Online meeting Online meeting Online meeting",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/Timeline/",
    "relUrl": "/playground/fiori/pages/Timeline/"
  },
  "234": {
    "id": "234",
    "title": "Timeline",
    "content": "Timeline v0.8.0 @ui5/webcomponents-fiori &lt;ui5-timeline&gt; Basic Timeline MR SOF02 2.43 Online meeting &lt;ui5-timeline&gt; &lt;ui5-timeline-item id=&quot;test-item&quot; title-text=&quot;called&quot; subtitle-text=&quot;20.02.2017 11:30&quot; icon=&quot;phone&quot; name=&quot;John Smith&quot; name-clickable&gt;&lt;/ui5-timeline-item&gt; &lt;ui5-timeline-item title-text=&quot;Weekly Sync - CP Design&quot; subtitle-text=&quot;27.07.2017 (11:00 - 12:30)&quot; icon=&quot;calendar&quot;&gt; &lt;div&gt;MR SOF02 2.43&lt;/div&gt; &lt;/ui5-timeline-item&gt; &lt;ui5-timeline-item title-text=&quot;Video Converence Call - UI5&quot; subtitle-text=&quot;31.01.2018 (12:00 - 13:00)&quot; icon=&quot;calendar&quot;&gt; &lt;div&gt;Online meeting&lt;/div&gt; &lt;/ui5-timeline-item&gt; &lt;/ui5-timeline&gt; Horizontal Timeline MR SOF02 2.43 Online meeting &lt;ui5-timeline layout=&quot;Horizontal&quot;&gt; &lt;ui5-timeline-item id=&quot;test-item&quot; title-text=&quot;called&quot; subtitle-text=&quot;20.02.2017 11:30&quot; icon=&quot;phone&quot; name=&quot;John Smith&quot; name-clickable&gt;&lt;/ui5-timeline-item&gt; &lt;ui5-timeline-item title-text=&quot;Weekly Sync - CP Design&quot; subtitle-text=&quot;27.07.2017 (11:00 - 12:30)&quot; icon=&quot;calendar&quot;&gt; &lt;div&gt;MR SOF02 2.43&lt;/div&gt; &lt;/ui5-timeline-item&gt; &lt;ui5-timeline-item title-text=&quot;Video Converence Call - UI5&quot; subtitle-text=&quot;31.01.2018 (12:00 - 13:00)&quot; icon=&quot;calendar&quot;&gt; &lt;div&gt;Online meeting&lt;/div&gt; &lt;/ui5-timeline-item&gt; &lt;/ui5-timeline&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-timeline component shows entries (such as objects, events, or posts) in chronological order. A common use case is to provide information about changes to an object, or events related to an object. These entries can be generated by the system (for example, value XY changed from A to B), or added manually. There are two distinct variants of the timeline: basic and social. The basic timeline is read-only, while the social timeline offers a high level of interaction and collaboration, and is integrated within SAP Jam. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.2.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; layout &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;TimelineLayout&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Vertical&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the items orientation. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Vertical&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Horizontal&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Determines the content of the &lt;code&gt;ui5-timeline&lt;/code&gt;.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;TimelineItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; An entry posted on the timeline. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the icon to be displayed as graphical element within the &lt;code&gt;ui5-timeline-item&lt;/code&gt;. SAP-icons font provides numerous options. &lt;br&gt;&lt;br&gt; See all the available icons in the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; name &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the name of the item, displayed before the &lt;code&gt;title-text&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; nameClickable &lt;br&gt; &lt;code&gt;name-clickable&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the &lt;code&gt;name&lt;/code&gt; is clickable. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; subtitleText &lt;br&gt; &lt;code&gt;subtitle-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the subtitle text of the component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; titleText &lt;br&gt; &lt;code&gt;title-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the title text of the component. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Determines the description of the &lt;code&gt;ui5-timeline-item&lt;/code&gt;.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;name-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the item name is pressed either with a click/tap or by using the Enter or Space key. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The event will not be fired if the &lt;code&gt;name-clickable&lt;/code&gt; attribute is not set. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Timeline/",
    "relUrl": "/playground/components/Timeline/"
  },
  "235": {
    "id": "235",
    "title": "Title",
    "content": "&lt;!DOCTYPE html&gt; Title test page Title level 1 Title level Auto (2) Title level 2 Title level 3 Title level 4 Title level 5 Title level 6 Very long long long text of title title with level two Wrapping Truncated title Lorem ipsum dolor, sit amet consectetur adipisicing elit. Numquam, ab. Wrapping title Lorem ipsum dolor, sit amet consectetur adipisicing elit. Numquam, ab.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Title/",
    "relUrl": "/playground/main/pages/Title/"
  },
  "236": {
    "id": "236",
    "title": "Title",
    "content": "Title @ui5/webcomponents &lt;ui5-title&gt; Title in All Available Levels Title level 1 Title level 2 Title level 3 Title level 4 Title level 5 Title level 6 &lt;ui5-title level=&quot;H1&quot;&gt;Title level 1&lt;/ui5-title&gt; &lt;ui5-title level=&quot;H2&quot;&gt;Title level 2&lt;/ui5-title&gt; &lt;ui5-title level=&quot;H3&quot;&gt;Title level 3&lt;/ui5-title&gt; &lt;ui5-title level=&quot;H4&quot;&gt;Title level 4&lt;/ui5-title&gt; &lt;ui5-title level=&quot;H5&quot;&gt;Title level 5&lt;/ui5-title&gt; &lt;ui5-title level=&quot;H6&quot;&gt;Title level 6&lt;/ui5-title&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-title component is used to display titles inside a page. It is a simple, large-sized text with explicit header/title semantics. ES6 Module Import import &quot;@ui5/webcomponents/dist/Title&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; level &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;TitleLevel&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;H2&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the component level. Available options are: &lt;code&gt;&quot;H6&quot;&lt;/code&gt; to &lt;code&gt;&quot;H1&quot;&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; wrappingType &lt;br&gt; &lt;code&gt;wrapping-type&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;WrappingType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines how the text of a component will be displayed when there is not enough space. Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt; - The text will be truncated with an ellipsis.&lt;/li&gt; &lt;li&gt;&lt;code&gt;Normal&lt;/code&gt; - The text will wrap. The words will not be broken based on hyphenation.&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the text of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Title/",
    "relUrl": "/playground/components/Title/"
  },
  "237": {
    "id": "237",
    "title": "Toast",
    "content": "&lt;!DOCTYPE html&gt; ui5-toast Toast ( ui5-toast ) Show TopStart Toast TopStart Show TopCenter Toast TopCenter Show TopEnd Toast TopEnd Show MiddleStart Toast MiddleStart Show MiddleCenter Toast MiddleCenter Show MiddleEnd Toast MiddleEnd Show BottomStart Toast BottomStart Show BottomCenter Toast BottomCenter Show BottomEnd Toast BottomEnd Hello World Close Dialog Open Toast Toast Test Dialog and Toast Open Dialog",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Toast/",
    "relUrl": "/playground/main/pages/Toast/"
  },
  "238": {
    "id": "238",
    "title": "Toast",
    "content": "Toast v1.0.0-rc.6 @ui5/webcomponents &lt;ui5-toast&gt; Basic Toast Basic Toast Basic Toast &lt;!--Basic Toast--&gt; &lt;ui5-button id=&quot;wcBtnShowToastBasic&quot; class=&quot;samples-margin&quot;&gt;Basic Toast&lt;/ui5-button&gt; &lt;ui5-toast id=&quot;wcToastBasic&quot;&gt;Basic Toast&lt;/ui5-toast&gt; &lt;script&gt; // Attaching click listener to the Button which shows the Basic Toast wcBtnShowToastBasic.addEventListener(&#39;click&#39;, function () { wcToastBasic.show(); }); &lt;/script&gt; Toast Duration Short Toast Short Toast Long Toast Long Toast &lt;!--Short Toast--&gt; &lt;ui5-button id=&quot;wcBtnShowToastShort&quot; class=&quot;samples-margin&quot;&gt;Short Toast&lt;/ui5-button&gt; &lt;ui5-toast id=&quot;wcToastShort&quot; duration=1500 placement=&quot;BottomStart&quot;&gt;Short Toast&lt;/ui5-toast&gt; &lt;!--Long Toast--&gt; &lt;ui5-button id=&quot;wcBtnShowToastLong&quot; class=&quot;samples-margin&quot;&gt;Long Toast&lt;/ui5-button&gt; &lt;ui5-toast id=&quot;wcToastLong&quot; duration=4500 placement=&quot;BottomEnd&quot;&gt;Long Toast&lt;/ui5-toast&gt; &lt;script&gt; // Attaching click listener to the Button which shows the Short Toast wcBtnShowToastShort.addEventListener(&#39;click&#39;, function () { wcToastShort.show(); }); // Attaching click listener to the Button which shows the Long Toast wcBtnShowToastLong.addEventListener(&#39;click&#39;, function () { wcToastLong.show(); }); &lt;/script&gt; Toast Placements TopStart TopStart TopCenter TopCenter TopEnd TopEnd MiddleStart MiddleStart MiddleCenter MiddleCenter MiddleEnd MiddleEnd BottomStart BottomStart BottomCenter BottomCenter BottomEnd BottomEnd &lt;!--TopStart--&gt; &lt;ui5-button id=&quot;wcBtnShowToastTS&quot;&gt;TopStart&lt;/ui5-button&gt; &lt;ui5-toast id=&quot;wcToastTS&quot; placement=&quot;TopStart&quot;&gt;TopStart&lt;/ui5-toast&gt; &lt;!--TopCenter--&gt; &lt;ui5-button id=&quot;wcBtnShowToastTC&quot;&gt;TopCenter&lt;/ui5-button&gt; &lt;ui5-toast id=&quot;wcToastTC&quot; placement=&quot;TopCenter&quot;&gt;TopCenter&lt;/ui5-toast&gt; &lt;!--TopEnd--&gt; &lt;ui5-button id=&quot;wcBtnShowToastTE&quot;&gt;TopEnd&lt;/ui5-button&gt; &lt;ui5-toast id=&quot;wcToastTE&quot; placement=&quot;TopEnd&quot;&gt;TopEnd&lt;/ui5-toast&gt; &lt;!--MiddleStart--&gt; &lt;ui5-button id=&quot;wcBtnShowToastMS&quot;&gt;MiddleStart&lt;/ui5-button&gt; &lt;ui5-toast id=&quot;wcToastMS&quot; placement=&quot;MiddleStart&quot;&gt;MiddleStart&lt;/ui5-toast&gt; &lt;!--MiddleCenter--&gt; &lt;ui5-button id=&quot;wcBtnShowToastMC&quot;&gt;MiddleCenter&lt;/ui5-button&gt; &lt;ui5-toast id=&quot;wcToastMC&quot; placement=&quot;MiddleCenter&quot;&gt;MiddleCenter&lt;/ui5-toast&gt; &lt;!--MiddleEnd--&gt; &lt;ui5-button id=&quot;wcBtnShowToastME&quot;&gt;MiddleEnd&lt;/ui5-button&gt; &lt;ui5-toast id=&quot;wcToastME&quot; placement=&quot;MiddleEnd&quot;&gt;MiddleEnd&lt;/ui5-toast&gt; &lt;!--BottomStart--&gt; &lt;ui5-button id=&quot;wcBtnShowToastBS&quot;&gt;BottomStart&lt;/ui5-button&gt; &lt;ui5-toast id=&quot;wcToastBS&quot; placement=&quot;BottomStart&quot;&gt;BottomStart&lt;/ui5-toast&gt; &lt;!--BottomCenter--&gt; &lt;ui5-button id=&quot;wcBtnShowToastBC&quot;&gt;BottomCenter&lt;/ui5-button&gt; &lt;ui5-toast id=&quot;wcToastBC&quot;&gt;BottomCenter&lt;/ui5-toast&gt; &lt;!--BottomEnd--&gt; &lt;ui5-button id=&quot;wcBtnShowToastBE&quot;&gt;BottomEnd&lt;/ui5-button&gt; &lt;ui5-toast id=&quot;wcToastBE&quot; placement=&quot;BottomEnd&quot;&gt;BottomEnd&lt;/ui5-toast&gt; &lt;script&gt; // Attaching click listeners to the buttons which show the toasts Array.from(document.querySelectorAll(&quot;ui5-button&quot;)).forEach(button =&gt; { button.addEventListener(&#39;click&#39;, function () { document.querySelector(&quot;#&quot; + button.id.replace(&quot;BtnShow&quot;, &quot;&quot;)).show(); }); }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-toast is a small, non-disruptive popup for success or information messages that disappears automatically after a few seconds. Usage When to use: You want to display a short success or information message. You do not want to interrupt users while they are performing an action. You want to confirm a successful action. When not to use: You want to display error or warning message. You want to interrupt users while they are performing an action. You want to make sure that users read the message before they leave the page. You want users to be able to copy some part of the message text. ES6 Module Import import &quot;@ui5/webcomponents/dist/Toast&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; duration &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;3000&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the duration in milliseconds for which component remains on the screen before it&#39;s automatically closed. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The minimum supported value is &lt;code&gt;500&lt;/code&gt; ms and even if a lower value is set, the duration would remain &lt;code&gt;500&lt;/code&gt; ms. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; placement &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ToastPlacement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;BottomCenter&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the placement of the component. &lt;br&gt;&lt;br&gt; Available options are: &lt;ul&gt; &lt;li&gt;&lt;code&gt;TopStart&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TopCenter&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;TopEnd&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;MiddleStart&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;MiddleCenter&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;MiddleEnd&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;BottomStart&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;BottomCenter&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;BottomEnd&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the text of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;show&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Shows the component.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Toast/",
    "relUrl": "/playground/components/Toast/"
  },
  "239": {
    "id": "239",
    "title": "Toggle Button",
    "content": "&lt;!DOCTYPE html&gt; ToggleButton ui5-toggle-button ToggleButton states ToggleButton Pressed ToggleButton Disabled ToggleButton Disabled ToggleButton Accept ToggleButton Accept ToggleButton Reject ToggleButton Reject ToggleButton Transparent ToggleButton Transparent ToggleButton Result",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/ToggleButton/",
    "relUrl": "/playground/main/pages/ToggleButton/"
  },
  "240": {
    "id": "240",
    "title": "Toggle Button",
    "content": "ToggleButton @ui5/webcomponents &lt;ui5-toggle-button&gt; ToggleButton States ToggleButton Pressed ToggleButton Disabled ToggleButton Disabled and Pressed ToggleButton Accept ToggleButton Pressed Accept ToggleButton Reject ToggleButton Pressed Reject ToggleButton Transparent ToggleButton Pressed Transparent ToggleButton &lt;ui5-toggle-button&gt;ToggleButton&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button pressed&gt;Pressed ToggleButton&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button disabled&gt;Disabled ToggleButton&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button disabled pressed&gt;Disabled ToggleButton&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Positive&quot;&gt;Accept ToggleButton&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Positive&quot; pressed&gt;Accept ToggleButton&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Negative&quot;&gt;Reject ToggleButton&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Negative&quot; pressed&gt;Reject ToggleButton&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Transparent&quot;&gt;Transparent ToggleButton&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Transparent&quot; pressed&gt;Transparent ToggleButton&lt;/ui5-toggle-button&gt; ToggleButton with Icon Menu Add Back Accept Deny &lt;ui5-toggle-button icon=&quot;menu&quot;&gt;Menu&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Emphasized&quot; icon=&quot;add&quot;&gt;Add&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Default&quot; icon=&quot;nav-back&quot;&gt;Back&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Positive&quot; icon=&quot;accept&quot;&gt;Accept&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Negative&quot; icon=&quot;sys-cancel&quot;&gt;Deny&lt;/ui5-toggle-button&gt; ToggleButton with Icon Only &lt;ui5-toggle-button icon=&quot;accept&quot;&gt;&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button icon=&quot;action-settings&quot; pressed&gt;&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button icon=&quot;add&quot;&gt;&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button icon=&quot;alert&quot; pressed&gt;&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button icon=&quot;away&quot; design=&quot;Positive&quot;&gt;&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button icon=&quot;bookmark&quot; design=&quot;Positive&quot; pressed&gt;&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button icon=&quot;cancel&quot; design=&quot;Negative&quot;&gt;&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button icon=&quot;call&quot; design=&quot;Negative&quot; pressed&gt;&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button icon=&quot;camera&quot; design=&quot;Transparent&quot;&gt;&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button icon=&quot;cart&quot; design=&quot;Transparent&quot; pressed&gt;&lt;/ui5-toggle-button&gt; ToggleButton Yes/No Yes/No Toggle Button Toggle Button pressed On/Off On/Off Menu Menu Transparent Transparent &lt;ui5-toggle-button&gt;Yes/No&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button pressed&gt;Yes/No&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button&gt;Toggle Button&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button pressed&gt;Toggle Button pressed&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Positive&quot;&gt;On/Off&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Positive&quot; pressed&gt;On/Off&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Negative&quot;&gt;Menu&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Negative&quot; pressed&gt;Menu&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Transparent&quot;&gt;Transparent&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button design=&quot;Transparent&quot; pressed&gt;Transparent&lt;/ui5-toggle-button&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-toggle-button component is an enhanced ui5-button that can be toggled between pressed and normal states. Users can use the ui5-toggle-button as a switch to turn a setting on or off. It can also be used to represent an independent choice similar to a check box. Clicking or tapping on a ui5-toggle-button changes its state to pressed. The button returns to its initial state when the user clicks or taps on it again. By applying additional custom CSS-styling classes, apps can give a different style to any ui5-toggle-button. ES6 Module Import import &quot;@ui5/webcomponents/dist/ToggleButton&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; pressed &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Determines whether the component is displayed as pressed. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibilityAttributes &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;object&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; An object of strings that defines several additional accessibility attribute values for customization depending on the use case. It supports the following fields: &lt;ul&gt; &lt;li&gt;&lt;code&gt;expanded&lt;/code&gt;: Indicates whether the button, or another grouping element it controls, is currently expanded or collapsed. Accepts the following string values: &lt;ul&gt; &lt;li&gt;&lt;code&gt;true&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;false&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;hasPopup&lt;/code&gt;: Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by the button. Accepts the following string values: &lt;ul&gt; &lt;li&gt;&lt;code&gt;Dialog&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Grid&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;ListBox&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Tree&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;code&gt;controls&lt;/code&gt;: Identifies the element (or elements) whose contents or presence are controlled by the button element. Accepts a string value.&lt;/li&gt; &lt;/ul&gt; &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.2.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;undefined&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Receives id(or many ids) of the elements that label the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; design &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ButtonDesign&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Default&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the component design. &lt;br&gt;&lt;br&gt; &lt;b&gt;The available values are:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;Default&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Emphasized&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Positive&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Negative&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Transparent&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Attention&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the component is disabled. A disabled component can&#39;t be pressed or focused, and it is not in the tab chain. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the icon, displayed as graphical element within the component. The SAP-icons font provides numerous options. &lt;br&gt;&lt;br&gt; Example: See all the available icons within the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; iconEnd &lt;br&gt; &lt;code&gt;icon-end&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the icon should be displayed after the component text. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; submits &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; When set to &lt;code&gt;true&lt;/code&gt;, the component will automatically submit the nearest HTML form element on &lt;code&gt;press&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; For the &lt;code&gt;submits&lt;/code&gt; property to have effect, you must add the following import to your project: &lt;code&gt;import &quot;@ui5/webcomponents/dist/features/InputElementsFormSupport.js&quot;;&lt;/code&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; tooltip &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the tooltip of the component. &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A tooltip attribute should be provided for icon-only buttons, in order to represent their exact meaning/function. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.2.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the text of the component. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Although this slot accepts HTML Elements, it is strongly recommended that you only use text in order to preserve the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the component is activated either with a mouse/tap or by using the Enter or Space key. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The event will not be fired if the &lt;code&gt;disabled&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/ToggleButton/",
    "relUrl": "/playground/components/ToggleButton/"
  },
  "241": {
    "id": "241",
    "title": "Tree",
    "content": "&lt;!DOCTYPE html&gt; ui5-tree Cozy Compact My tree None SingleSelect SingleSelectBegin SingleSelectEnd MultiSelect Delete Expand Level 1 Expand Level 2 Expand All Collapse All Tree 1 Tree 1 Mouseover counter Mouseout counter Dynamic tree Tree with accessibleNameRef Prevent item-click Events Prevented events counter Tree with indeterminate items Tree with navigated items Tree with custom items Level 1 Level 2 Option 2.1 Option 2.3 Level 3",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/Tree/",
    "relUrl": "/playground/main/pages/Tree/"
  },
  "242": {
    "id": "242",
    "title": "Tree",
    "content": "Tree v1.0.0-rc.8 @ui5/webcomponents &lt;ui5-tree&gt; Basic Tree &lt;ui5-tree id=&quot;myTree&quot; class=&quot;full-width&quot;&gt; &lt;ui5-tree-item expanded text=&quot;Tree 1&quot; icon=&quot;paste&quot; selected&gt; &lt;ui5-tree-item expanded text=&quot;Tree 1.1&quot; selected&gt; &lt;ui5-tree-item text=&quot;Tree 1.1.1&quot;&gt;&lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Tree 1.1.2&quot;&gt;&lt;/ui5-tree-item&gt; &lt;/ui5-tree-item&gt; &lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Tree 2&quot; icon=&quot;copy&quot;&gt; &lt;ui5-tree-item text=&quot;Tree 2.1&quot;&gt; &lt;ui5-tree-item text=&quot;Tree 2.1.1&quot;&gt;&lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Tree 2.1.2&quot;&gt; &lt;ui5-tree-item text=&quot;Tree 2.1.2.1&quot;&gt;&lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Tree 2.1.2.2&quot;&gt;&lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Tree 2.1.2.3&quot;&gt;&lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Tree 2.1.2.5&quot;&gt;&lt;/ui5-tree-item&gt; &lt;/ui5-tree-item&gt; &lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Tree 2.2&quot;&gt;&lt;/ui5-tree-item&gt; &lt;/ui5-tree-item&gt; &lt;ui5-tree-item expanded text=&quot;Tree 3 (no icon)&quot;&gt; &lt;/ui5-tree-item&gt; &lt;/ui5-tree&gt; Tree with multiple selection &lt;ui5-tree id=&quot;myTree&quot; class=&quot;full-width&quot;&gt; &lt;ui5-tree-item expanded text=&quot;Tree 1&quot; icon=&quot;paste&quot; selected&gt; &lt;ui5-tree-item expanded text=&quot;Tree 1.1&quot; selected&gt; &lt;ui5-tree-item text=&quot;Tree 1.1.1&quot;&gt;&lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Tree 1.1.2&quot;&gt;&lt;/ui5-tree-item&gt; &lt;/ui5-tree-item&gt; &lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Tree 2&quot; icon=&quot;copy&quot;&gt; &lt;ui5-tree-item text=&quot;Tree 2.1&quot;&gt; &lt;ui5-tree-item text=&quot;Tree 2.1.1&quot;&gt;&lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Tree 2.1.2&quot;&gt; &lt;ui5-tree-item text=&quot;Tree 2.1.2.1&quot;&gt;&lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Tree 2.1.2.2&quot;&gt;&lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Tree 2.1.2.3&quot;&gt;&lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Tree 2.1.2.5&quot;&gt;&lt;/ui5-tree-item&gt; &lt;/ui5-tree-item&gt; &lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Tree 2.2&quot;&gt;&lt;/ui5-tree-item&gt; &lt;/ui5-tree-item&gt; &lt;ui5-tree-item expanded text=&quot;Tree 3 (no icon)&quot;&gt; &lt;/ui5-tree-item&gt; &lt;/ui5-tree&gt; Tree with dynamic content &lt;ui5-busy-indicator id=&quot;busy&quot; class=&quot;full-width&quot;&gt; &lt;ui5-tree id=&quot;treeDynamic&quot; mode=&quot;None&quot; class=&quot;full-width&quot;&gt; &lt;ui5-tree-item text=&quot;Has pre-loaded children&quot;&gt; &lt;ui5-tree-item text=&quot;Child 1&quot;&gt;&lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Child 2&quot;&gt;&lt;/ui5-tree-item&gt; &lt;/ui5-tree-item&gt; &lt;ui5-tree-item text=&quot;Has no children at all&quot;&gt;&lt;/ui5-tree-item&gt; &lt;ui5-tree-item id=&quot;dynamicNode&quot; text=&quot;Has children, but not yet loaded&quot; has-children&gt;&lt;/ui5-tree-item&gt; &lt;/ui5-tree&gt; &lt;/ui5-busy-indicator&gt; &lt;script&gt; var busyIndicator = document.getElementById(&quot;busy&quot;); var dynamicTree = document.getElementById(&quot;treeDynamic&quot;); dynamicTree.addEventListener(&quot;item-toggle&quot;, function(event) { var item = event.detail.item; // get the node that is toggled // Only for the dynamic node, and only when it&#39;s empty if (item.id === &quot;dynamicNode&quot; &amp;&amp; item.children.length === 0) { busyIndicator.active = true; // block the tree from the user event.preventDefault(); // do not let the toggle button switch yet setTimeout(function() { var newItem = document.createElement(&quot;ui5-tree-item&quot;); // Fetching from db.... newItem.text = &quot;Node fetched from DB after 2 sec&quot;; item.appendChild(newItem); // add the newly fetched node to the tree item.toggle(); // now manually switch the toggle button busyIndicator.active = false; // unblock the tree }, 2000); } }); &lt;/script&gt; Tree with custom items Tree with custom items Level 1 Level 2 Option 2.1 Option 2.3 Level 3 &lt;ui5-tree mode=&quot;MultiSelect&quot;&gt; &lt;div slot=&quot;header&quot; class=&quot;hdr&quot;&gt; &lt;ui5-title&gt;Tree with custom items&lt;/ui5-title&gt; &lt;/div&gt; &lt;ui5-tree-item-custom expanded=&quot;true&quot; show-toggle-button hide-selection-element type=&quot;Active&quot; level=&quot;1&quot; &gt; &lt;ui5-button slot=&quot;content&quot;&gt;Level 1&lt;/ui5-button&gt; &lt;ui5-tree-item-custom type=&quot;Active&quot; show-toggle-button level=&quot;2&quot; expanded=&quot;true&quot; &gt; &lt;ui5-select slot=&quot;content&quot;&gt; &lt;ui5-option&gt;Level 2&lt;/ui5-option&gt; &lt;ui5-option&gt;Option 2.1&lt;/ui5-option&gt; &lt;ui5-option&gt;Option 2.3&lt;/ui5-option&gt; &lt;/ui5-select&gt; &lt;ui5-tree-item-custom hide-selection-element type=&quot;Active&quot; level=&quot;3&quot; &gt; &lt;ui5-button slot=&quot;content&quot;&gt;Level 3&lt;/ui5-button&gt; &lt;/ui5-tree-item-custom&gt; &lt;/ui5-tree-item-custom&gt; &lt;/ui5-tree-item-custom&gt; &lt;/ui5-tree&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The &lt;code&gt;ui5-tree&lt;/code&gt; component provides a tree structure for displaying data in a hierarchy. Usage When to use: To display hierarchically structured items. To select one or more items out of a set of hierarchically structured items. When not to use: To display items not hierarchically strcutured. In this case, use the List component. To select one item from a very small number of non-hierarchical items. Select or ComboBox might be more appropriate. The hierarchy turns out to have only two levels. In this case, use List with group items. Keyboard Handling The ui5-tree provides advanced keyboard handling. The user can use the following keyboard shortcuts in order to navigate trough the tree: &lt;ul&gt; &lt;li&gt;[UP/DOWN] - Navigates up and down the tree items that are currently visible.&lt;/li&gt; &lt;li&gt;[RIGHT] - Drills down the tree by expanding the tree nodes.&lt;/li&gt; &lt;li&gt;[LEFT] - Goes up the tree and collapses the tree nodes.&lt;/li&gt; &lt;/ul&gt; The user can use the following keyboard shortcuts to perform selection, when the mode property is in use: &lt;ul&gt; &lt;li&gt;[SPACE] - Selects the currently focused item upon keyup.&lt;/li&gt; &lt;li&gt;[ENTER] - Selects the currently focused item upon keydown.&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/Tree.js&quot;; import &quot;@ui5/webcomponents/dist/TreeItem.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.8.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleNameRef &lt;br&gt; &lt;code&gt;accessible-name-ref&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the IDs of the elements that label the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.8.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; footerText &lt;br&gt; &lt;code&gt;footer-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the component footer text. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; headerText &lt;br&gt; &lt;code&gt;header-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the component header text. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If the &lt;code&gt;header&lt;/code&gt; slot is set, this property is ignored. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; mode &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ListMode&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the mode of the component. Since the tree uses a &lt;code&gt;ui5-list&lt;/code&gt; to display its structure, the tree modes are exactly the same as the list modes, and are all applicable. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SingleSelect&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SingleSelectBegin&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SingleSelectEnd&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;MultiSelect&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Delete&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; noDataText &lt;br&gt; &lt;code&gt;no-data-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text that is displayed when the component contains no items. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the items of the component. Tree items may have other tree items as children. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Use &lt;code&gt;ui5-tree-item&lt;/code&gt; for the intended design.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;header&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the component header. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When the &lt;code&gt;header&lt;/code&gt; slot is set, the &lt;code&gt;headerText&lt;/code&gt; property is ignored.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;item-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when a tree item is activated. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The clicked item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;item-delete&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the Delete button of any tree item is pressed. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A Delete button is displayed on each item, when the component &lt;code&gt;mode&lt;/code&gt; property is set to &lt;code&gt;Delete&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the deleted item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;item-mouseout&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the mouse cursor leaves the tree item borders. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.16&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the hovered item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;item-mouseover&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the mouse cursor enters the tree item borders. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.16&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the hovered item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;item-toggle&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when a tree item is expanded or collapsed. &lt;i&gt;Note:&lt;/i&gt; You can call &lt;code&gt;preventDefault()&lt;/code&gt; on the event object to suppress the event, if needed. This may be handy for example if you want to dynamically load tree items upon the user expanding a node. Even if you prevented the event&#39;s default behavior, you can always manually call &lt;code&gt;toggle()&lt;/code&gt; on a tree item. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; the toggled item.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;selection-change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when selection is changed by user interaction in &lt;code&gt;SingleSelect&lt;/code&gt;, &lt;code&gt;SingleSelectBegin&lt;/code&gt;, &lt;code&gt;SingleSelectEnd&lt;/code&gt; and &lt;code&gt;MultiSelect&lt;/code&gt; modes. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;selectedItems&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Array &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; An array of the selected items.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;previouslySelectedItems&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Array &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; An array of the previously selected items.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;targetItem&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The item triggering the event.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;walk&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Perform Depth-First-Search walk on the tree and run a callback on each node&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;callback&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; function &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; function to execute on each node of the tree with 3 arguments: the node, the level and the index&lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;TreeItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The &lt;code&gt;ui5-tree-item&lt;/code&gt; represents a node in a tree structure, shown as a &lt;code&gt;ui5-list&lt;/code&gt;. &lt;br&gt; This is the item to use inside a &lt;code&gt;ui5-tree&lt;/code&gt;. You can represent an arbitrary tree structure by recursively nesting tree items. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-tree-item exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;title - Used to style the title of the tree list item&lt;/li&gt; &lt;li&gt;additionalText - Used to style the additionalText of the tree list item&lt;/li&gt; &lt;li&gt;icon - Used to style the icon of the tree list item&lt;/li&gt; &lt;/ul&gt; ES6 Module Import import &quot;@ui5/webcomponents/dist/TreeItem.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; additionalText &lt;br&gt; &lt;code&gt;additional-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;additionalText&lt;/code&gt;, displayed in the end of the tree item. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; additionalTextState &lt;br&gt; &lt;code&gt;additional-text-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.base.types.ValueState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the state of the &lt;code&gt;additionalText&lt;/code&gt;. &lt;br&gt; Available options are: &lt;code&gt;&quot;None&quot;&lt;/code&gt; (by default), &lt;code&gt;&quot;Success&quot;&lt;/code&gt;, &lt;code&gt;&quot;Warning&quot;&lt;/code&gt;, &lt;code&gt;&quot;Information&quot;&lt;/code&gt; and &lt;code&gt;&quot;Error&quot;&lt;/code&gt;. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the tree item. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.8.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; expanded &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the tree list item will show a collapse or expand icon inside its toggle button. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hasChildren &lt;br&gt; &lt;code&gt;has-children&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the tree node has children, even if currently no other tree nodes are slotted inside. &lt;br&gt; &lt;i&gt;Note:&lt;/i&gt; This property is useful for showing big tree structures where not all nodes are initially loaded due to performance reasons. Set this to &lt;code&gt;true&lt;/code&gt; for nodes you intend to load lazily, when the user clicks the expand button. It is not necessary to set this property otherwise. If a tree item has children, the expand button will be displayed anyway. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; If set, an icon will be displayed before the text of the tree list item. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; indeterminate &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines whether the selection of a tree node is displayed as partially selected. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The indeterminate state can be set only programmatically and can’t be achieved by user interaction, meaning that the resulting visual state depends on the values of the &lt;code&gt;indeterminate&lt;/code&gt; and &lt;code&gt;selected&lt;/code&gt; properties: &lt;ul&gt; &lt;li&gt; If a tree node has both &lt;code&gt;selected&lt;/code&gt; and &lt;code&gt;indeterminate&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;, it is displayed as partially selected. &lt;li&gt; If a tree node has &lt;code&gt;selected&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;indeterminate&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;, it is displayed as selected. &lt;li&gt; If a tree node has &lt;code&gt;selected&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;, it is displayed as not selected regardless of the value of the &lt;code&gt;indeterminate&lt;/code&gt; property. &lt;/ul&gt; &lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; This property takes effect only when the &lt;code&gt;ui5-tree&lt;/code&gt; is in &lt;code&gt;MultiSelect&lt;/code&gt; mode. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.1.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; navigated &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; The navigated state of the list item. If set to &lt;code&gt;true&lt;/code&gt;, a navigation indicator is displayed at the end of the list item. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.10.0&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; type &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.types.ListItemType&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Active&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the visual indication and behavior of the list items. Available options are &lt;code&gt;Active&lt;/code&gt; (by default), &lt;code&gt;Inactive&lt;/code&gt;, &lt;code&gt;Detail&lt;/code&gt; and &lt;code&gt;Navigation&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; When set to &lt;code&gt;Active&lt;/code&gt; or &lt;code&gt;Navigation&lt;/code&gt;, the item will provide visual response upon press and hover, while with type &lt;code&gt;Inactive&lt;/code&gt; and &lt;code&gt;Detail&lt;/code&gt; - will not. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selected &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the selected state of the &lt;code&gt;ListItem&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.ITreeItem [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the items of the component. &lt;br /&gt; &lt;br /&gt; &lt;b&gt;Note:&lt;/b&gt; Use &lt;code&gt;ui5-tree-item&lt;/code&gt; or &lt;code&gt;ui5-tree-item-custom&lt;/code&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;deleteButton&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.main.IButton&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the delete button, displayed in &quot;Delete&quot; mode. &lt;b&gt;Note:&lt;/b&gt; While the slot allows custom buttons, to match design guidelines, please use the &lt;code&gt;ui5-button&lt;/code&gt; component. &lt;b&gt;Note:&lt;/b&gt; When the slot is not present, a built-in delete button will be displayed.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;detail-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the user clicks on the detail button when type is &lt;code&gt;Detail&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;toggle&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Call this method to manually switch the &lt;code&gt;expanded&lt;/code&gt; state of a tree item.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Tree/",
    "relUrl": "/playground/components/Tree/"
  },
  "243": {
    "id": "243",
    "title": "Upload Collection",
    "content": "&lt;!DOCTYPE html&gt; UploadCollection UC Mode: None SingleSelect SingleSelectBegin SingleSelectEnd MultiSelect Delete UCI Type: Active Inactive Detail Selected items: Renamed file index: This element is draggable Uploaded (4) Add new files and press to start uploading pending files: Start File name is clickable. You cannot delete this file. Some description. Attachments (0) Upload Upload States uploadState=&quot;Complete&quot; uploadState=&quot;Uploading&quot; uploadState=&quot;Uploading&quot; with hidden terminate button uploadState=&quot;Error&quot; uploadState=&quot;Ready&quot; (default) Hidden buttons Default, delete button always visible Default, delete button hidden uploadState=&quot;Error&quot; with retry button visible by default uploadState=&quot;Error&quot; with hidden retry button uploadState=&quot;Uploading&quot; with terminate button visible by default uploadState=&quot;Uploading&quot; with hidden terminate button",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/UploadCollection/",
    "relUrl": "/playground/fiori/pages/UploadCollection/"
  },
  "244": {
    "id": "244",
    "title": "Upload Collection",
    "content": "UploadCollection v1.0.0-rc.7 @ui5/webcomponents-fiori &lt;ui5-upload-collection&gt; UploadCollection Uploaded (2) Add new files and press to start uploading pending files: Start Uploaded By: David Keane · Uploaded On: 2014-07-26 · File Size: 35 KB Uploaded By: John Smith · Uploaded On: 2014-09-02 · File Size: 226.6 KB · &lt;ui5-upload-collection id=&quot;uploadCollection&quot; mode=&quot;Delete&quot; accessible-name=&quot;Uploaded (2)&quot;&gt; &lt;div slot=&quot;header&quot; class=&quot;header&quot;&gt; &lt;ui5-title&gt;Uploaded (2)&lt;/ui5-title&gt; &lt;ui5-label&gt;Add new files and press to start uploading pending files:&lt;/ui5-label&gt; &lt;ui5-button id=&quot;startUploading&quot;&gt;Start&lt;/ui5-button&gt; &lt;div class=&quot;spacer&quot;&gt;&lt;/div&gt; &lt;ui5-file-uploader id=&quot;fileUploader&quot; hide-input multiple&gt; &lt;ui5-button icon=&quot;add&quot; design=&quot;Transparent&quot;&gt;&lt;/ui5-button&gt; &lt;/ui5-file-uploader&gt; &lt;/div&gt; &lt;ui5-upload-collection-item file-name=&quot;LaptopHT-1000.jpg&quot; file-name-clickable upload-state=&quot;Complete&quot; &gt; &lt;img src=&quot;../../../assets/images/HT-1000.jpg&quot; slot=&quot;thumbnail&quot;&gt; Uploaded By: David Keane · Uploaded On: 2014-07-26 · File Size: 35 KB &lt;/ui5-upload-collection-item&gt; &lt;ui5-upload-collection-item file-name=&quot;Notes.txt&quot; upload-state=&quot;Complete&quot; &gt; &lt;ui5-icon name=&quot;document-text&quot; slot=&quot;thumbnail&quot;&gt;&lt;/ui5-icon&gt; Uploaded By: John Smith · Uploaded On: 2014-09-02 · File Size: 226.6 KB · &lt;/ui5-upload-collection-item&gt; &lt;/ui5-upload-collection&gt; &lt;script&gt; const createThumbnail = fileName =&gt; { const icon = document.createElement(&quot;ui5-icon&quot;); icon.name = &quot;document&quot;; icon.slot = &quot;thumbnail&quot;; return icon; }; const createUCI = file =&gt; { const uci = document.createElement(&quot;ui5-upload-collection-item&quot;); description = document.createTextNode(&quot;Last modified: &quot; + file.lastModifiedDate + &quot;, size: &quot; + file.size); uci.appendChild(createThumbnail(file.name)); uci.appendChild(description); uci.file = file; uci.fileName = file.name; return uci; } fileUploader.addEventListener(&quot;change&quot;, event =&gt; { const files = event.detail.files; for (let i = 0; i &lt; files.length; i++) { uploadCollection.appendChild(createUCI(files[i])); } }); startUploading.addEventListener(&quot;click&quot;, event =&gt; { uploadCollection.items.forEach(item =&gt; { // if there is a file ready to be uploaded send request if (item.uploadState === &quot;Ready&quot; &amp;&amp; item.file) { const oXHR = new XMLHttpRequest(); oXHR.open(&quot;POST&quot;, &quot;/upload&quot;, true); oXHR.onreadystatechange = function () { if (this.status !== 200) { item.uploadState = &quot;Error&quot;; } }; oXHR.send(item.file); item.uploadState=&quot;Uploading&quot;; } }); }); uploadCollection.addEventListener(&quot;ui5-item-delete&quot;, event =&gt; { uploadCollection.removeChild(event.detail.item) }); &lt;/script&gt; UploadCollection With File Renaming Enabled Attachments(2) Uploaded By: David Keane · Uploaded On: 2014-07-26 · File Size: 35 KB Uploaded By: John Smith · Uploaded On: 2014-09-02 · File Size: 226.6 KB · &lt;ui5-upload-collection id=&quot;uploadCollectionWithRenaming&quot;&gt; &lt;div slot=&quot;header&quot; class=&quot;header&quot;&gt; &lt;ui5-title&gt;Attachments(2)&lt;/ui5-title&gt; &lt;/div&gt; &lt;ui5-upload-collection-item file-name=&quot;LaptopHT-1000.jpg&quot; file-name-clickable type=&quot;Detail&quot; upload-state=&quot;Complete&quot; &gt; &lt;img src=&quot;../../../assets/images/HT-1000.jpg&quot; slot=&quot;thumbnail&quot;&gt; Uploaded By: David Keane · Uploaded On: 2014-07-26 · File Size: 35 KB &lt;/ui5-upload-collection-item&gt; &lt;ui5-upload-collection-item file-name=&quot;Notes.txt&quot; type=&quot;Detail&quot; upload-state=&quot;Complete&quot; &gt; &lt;ui5-icon name=&quot;document-text&quot; slot=&quot;thumbnail&quot;&gt;&lt;/ui5-icon&gt; Uploaded By: John Smith · Uploaded On: 2014-09-02 · File Size: 226.6 KB · &lt;/ui5-upload-collection-item&gt; &lt;/ui5-upload-collection&gt; &lt;script&gt; uploadCollectionWithRenaming.addEventListener(&quot;rename&quot;, event =&gt; { alert(&quot;Rename event:&quot; + event.target.fileName); }); &lt;/script&gt; UploadCollection With Different Uploading States of Items Upload States uploadState=&quot;Complete&quot; uploadState=&quot;Uploading&quot; uploadState=&quot;Error&quot; uploadState=&quot;Ready&quot; (default) &lt;ui5-upload-collection id=&quot;uploadCollectionStates&quot;&gt; &lt;div class=&quot;header&quot; slot=&quot;header&quot;&gt; &lt;ui5-title&gt;Upload States&lt;/ui5-title&gt; &lt;/div&gt; &lt;ui5-upload-collection-item file-name=&quot;LaptopHT-1000.jpg&quot; upload-state=&quot;Complete&quot; &gt; &lt;img src=&quot;../../../assets/images/HT-1000.jpg&quot; slot=&quot;thumbnail&quot;&gt; uploadState=&quot;Complete&quot; &lt;/ui5-upload-collection-item&gt; &lt;ui5-upload-collection-item file-name=&quot;Laptop.jpg&quot; upload-state=&quot;Uploading&quot; progress=&quot;37&quot; &gt; &lt;img src=&quot;../../../assets/images/HT-1000.jpg&quot;slot=&quot;thumbnail&quot;&gt; uploadState=&quot;Uploading&quot; &lt;/ui5-upload-collection-item&gt; &lt;ui5-upload-collection-item file-name=&quot;latest.reports.pdf&quot; upload-state=&quot;Error&quot; progress=&quot;59&quot; &gt; &lt;ui5-icon name=&quot;document-text&quot; slot=&quot;thumbnail&quot;&gt;&lt;/ui5-icon&gt; uploadState=&quot;Error&quot; &lt;/ui5-upload-collection-item&gt; &lt;ui5-upload-collection-item file-name=&quot;Notes.txt&quot; &gt; &lt;ui5-icon name=&quot;document-text&quot; slot=&quot;thumbnail&quot;&gt;&lt;/ui5-icon&gt; uploadState=&quot;Ready&quot; (default) &lt;/ui5-upload-collection-item&gt; &lt;/ui5-upload-collection&gt; &lt;script&gt; uploadCollectionStates.addEventListener(&quot;retry&quot;, event =&gt; { alert(&quot;Retry uploading: &quot; + event.target.fileName); }); uploadCollectionStates.addEventListener(&quot;terminate&quot;, event =&gt; { alert(&quot;Terminate uploading of: &quot; + event.target.fileName); }); &lt;/script&gt; UploadCollection With Drag and Drop and No Initial Data Attachments &lt;ui5-upload-collection id=&quot;uploadCollectionDnD&quot; style=&quot;height: 30rem;&quot;&gt; &lt;div class=&quot;header&quot; slot=&quot;header&quot;&gt; &lt;ui5-title&gt;Attachments&lt;/ui5-title&gt; &lt;/div&gt; &lt;/ui5-upload-collection&gt; &lt;script&gt; uploadCollectionDnD.addEventListener(&quot;drop&quot;, event =&gt; { event.preventDefault(); const files = event.dataTransfer.files; // Take the files from the drop event and create &lt;ui5-upload-collection-item&gt; from them for (let i = 0; i &lt; files.length; i++) { uci = createUCI(files[i]); uploadCollectionDnD.appendChild(uci) } }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; This component allows you to represent files before uploading them to a server, with the help of &lt;code&gt;ui5-upload-collection-item&lt;/code&gt;. It also allows you to show already uploaded files. ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/UploadCollection.js&quot;; import &quot;@ui5/webcomponents-fiori/dist/UploadCollectionItem.js&quot;; (for ui5-upload-collection-item) &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; accessibleName &lt;br&gt; &lt;code&gt;accessible-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the accessible ARIA name of the component. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.16&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideDragOverlay &lt;br&gt; &lt;code&gt;hide-drag-overlay&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; By default there will be drag and drop overlay shown over the &lt;code&gt;ui5-upload-collection&lt;/code&gt; when files are dragged. If you don&#39;t intend to use drag and drop, set this property. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; It is up to the application developer to add handler for &lt;code&gt;drop&lt;/code&gt; event and handle it. &lt;code&gt;ui5-upload-collection&lt;/code&gt; only displays an overlay. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; mode &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;ListMode&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;None&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the mode of the &lt;code&gt;ui5-upload-collection&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; &lt;ul&gt; &lt;li&gt;&lt;code&gt;None&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;SingleSelect&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;MultiSelect&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;code&gt;Delete&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; noDataDescription &lt;br&gt; &lt;code&gt;no-data-description&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Allows you to set your own text for the &#39;No data&#39; description. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; noDataText &lt;br&gt; &lt;code&gt;no-data-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Allows you to set your own text for the &#39;No data&#39; text. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the items of the &lt;code&gt;ui5-upload-collection&lt;/code&gt;. &lt;br&gt;&lt;b&gt;Note:&lt;/b&gt; Use &lt;code&gt;ui5-upload-collection-item&lt;/code&gt; for the intended design.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;header&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the &lt;code&gt;ui5-upload-collection&lt;/code&gt; header. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; If &lt;code&gt;header&lt;/code&gt; slot is provided, the labelling of the &lt;code&gt;UploadCollection&lt;/code&gt; is a responsibility of the application developer. &lt;code&gt;accessibleName&lt;/code&gt; should be used.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;drop&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when an element is dropped inside the drag and drop overlay. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The &lt;code&gt;drop&lt;/code&gt; event is fired only when elements are dropped within the drag and drop overlay and ignored for the other parts of the &lt;code&gt;ui5-upload-collection&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;dataTransfer&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; DataTransfer &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The &lt;code&gt;drop&lt;/code&gt; event operation data.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;item-delete&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the Delete button of any item is pressed. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; A Delete button is displayed on each item, when the &lt;code&gt;ui5-upload-collection&lt;/code&gt; &lt;code&gt;mode&lt;/code&gt; property is set to &lt;code&gt;Delete&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;item&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The &lt;code&gt;ui5-upload-collection-item&lt;/code&gt; which was renamed.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;selection-change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when selection is changed by user interaction in &lt;code&gt;SingleSelect&lt;/code&gt; and &lt;code&gt;MultiSelect&lt;/code&gt; modes. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;selectedItems&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Array &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; An array of the selected items.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;UploadCollectionItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; A component to be used within the &lt;code&gt;ui5-upload-collection&lt;/code&gt;. ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/UploadCollectionItem.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disableDeleteButton &lt;br&gt; &lt;code&gt;disable-delete-button&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Disables the delete button. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; file &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;File&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;null&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Holds an instance of &lt;code&gt;File&lt;/code&gt; associated with this item. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; fileName &lt;br&gt; &lt;code&gt;file-name&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; The name of the file. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; fileNameClickable &lt;br&gt; &lt;code&gt;file-name-clickable&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; If set to &lt;code&gt;true&lt;/code&gt; the file name will be clickable and it will fire &lt;code&gt;file-name-click&lt;/code&gt; event upon click. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideRetryButton &lt;br&gt; &lt;code&gt;hide-retry-button&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Hides the retry button when &lt;code&gt;uploadState&lt;/code&gt; property is &lt;code&gt;Error&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; hideTerminateButton &lt;br&gt; &lt;code&gt;hide-terminate-button&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Hides the terminate button when &lt;code&gt;uploadState&lt;/code&gt; property is &lt;code&gt;Uploading&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; progress &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.base.types.Integer&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;0&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; The upload progress in percentage. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Expected values are in the interval [0, 100]. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; uploadState &lt;br&gt; &lt;code&gt;upload-state&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.fiori.types.UploadState&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;Ready&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; If set to &lt;code&gt;Uploading&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt;, a progress indicator showing the &lt;code&gt;progress&lt;/code&gt; is displayed. Also if set to &lt;code&gt;Error&lt;/code&gt;, a refresh button is shown. When this icon is pressed &lt;code&gt;retry&lt;/code&gt; event is fired. If set to &lt;code&gt;Uploading&lt;/code&gt;, a terminate button is shown. When this icon is pressed &lt;code&gt;terminate&lt;/code&gt; event is fired. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Hold the description of the &lt;code&gt;ui5-upload-collection-item&lt;/code&gt;. Will be shown below the file name.&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;thumbnail&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;A thumbnail, which will be shown in the beginning of the &lt;code&gt;ui5-upload-collection-item&lt;/code&gt;. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Use &lt;code&gt;ui5-icon&lt;/code&gt; or &lt;code&gt;img&lt;/code&gt; for the intended design.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;file-name-click&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the file name is clicked. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; This event is only available when &lt;code&gt;fileNameClickable&lt;/code&gt; property is &lt;code&gt;true&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;rename&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the &lt;code&gt;fileName&lt;/code&gt; property gets changed. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; An edit button is displayed on each item, when the &lt;code&gt;ui5-upload-collection-item&lt;/code&gt; &lt;code&gt;type&lt;/code&gt; property is set to &lt;code&gt;Detail&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;retry&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the retry button is pressed. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Retry button is displayed when &lt;code&gt;uploadState&lt;/code&gt; property is set to &lt;code&gt;Error&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;terminate&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the terminate button is pressed. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Terminate button is displayed when &lt;code&gt;uploadState&lt;/code&gt; property is set to &lt;code&gt;Uploading&lt;/code&gt;. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/UploadCollection/",
    "relUrl": "/playground/components/UploadCollection/"
  },
  "245": {
    "id": "245",
    "title": "View Settings Dialog",
    "content": "&lt;!DOCTYPE html&gt; ViewSettingsDialog test page ViewSettingsDialog Show ViewSettingsDialog Show Sort Only ViewSettingsDialog Show Filter Only ViewSettingsDialog Set Settings to the first VSD",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/ViewSettingsDialog/",
    "relUrl": "/playground/fiori/pages/ViewSettingsDialog/"
  },
  "246": {
    "id": "246",
    "title": "View Settings Dialog",
    "content": "ViewSettingsDialog v1.0.0-rc.16 @ui5/webcomponents-fiori &lt;ui5-view-settings-dialog&gt; Usage Open ViewSettingsDialog &lt;ui5-view-settings-dialog&gt; &lt;ui5-sort-item slot=&quot;sortItems&quot; text=&quot;Name&quot; selected&gt;&lt;/ui5-sort-item&gt; &lt;ui5-sort-item slot=&quot;sortItems&quot; text=&quot;Position&quot;&gt;&lt;/ui5-sort-item&gt; &lt;ui5-sort-item slot=&quot;sortItems&quot; text=&quot;Company&quot;&gt;&lt;/ui5-sort-item&gt; &lt;ui5-sort-item slot=&quot;sortItems&quot; text=&quot;Department&quot;&gt;&lt;/ui5-sort-item&gt; &lt;ui5-filter-item slot=&quot;filterItems&quot; text=&quot;Position&quot;&gt; &lt;ui5-filter-item-option slot=&quot;values&quot; text=&quot;CTO&quot;&gt;&lt;/ui5-filter-item-option&gt; &lt;ui5-filter-item-option slot=&quot;values&quot; text=&quot;CPO&quot;&gt;&lt;/ui5-filter-item-option&gt; &lt;ui5-filter-item-option slot=&quot;values&quot; text=&quot;VP&quot;&gt;&lt;/ui5-filter-item-option&gt; &lt;/ui5-filter-item&gt; &lt;ui5-filter-item slot=&quot;filterItems&quot; text=&quot;Department&quot;&gt; &lt;ui5-filter-item-option slot=&quot;values&quot; text=&quot;Sales&quot;&gt;&lt;/ui5-filter-item-option&gt; &lt;ui5-filter-item-option slot=&quot;values&quot; text=&quot;Management&quot;&gt;&lt;/ui5-filter-item-option&gt; &lt;ui5-filter-item-option slot=&quot;values&quot; text=&quot;PR&quot;&gt;&lt;/ui5-filter-item-option&gt; &lt;/ui5-filter-item&gt; &lt;ui5-filter-item slot=&quot;filterItems&quot; text=&quot;Location&quot;&gt; &lt;ui5-filter-item-option slot=&quot;values&quot; text=&quot;Walldorf&quot;&gt;&lt;/ui5-filter-item-option&gt; &lt;ui5-filter-item-option slot=&quot;values&quot; text=&quot;New York&quot;&gt;&lt;/ui5-filter-item-option&gt; &lt;ui5-filter-item-option slot=&quot;values&quot; text=&quot;London&quot;&gt;&lt;/ui5-filter-item-option&gt; &lt;/ui5-filter-item&gt; &lt;ui5-filter-item slot=&quot;filterItems&quot; text=&quot;Reports to&quot;&gt; &lt;ui5-filter-item-option slot=&quot;values&quot; text=&quot;CTO&quot;&gt;&lt;/ui5-filter-item-option&gt; &lt;ui5-filter-item-option slot=&quot;values&quot; text=&quot;CPO&quot;&gt;&lt;/ui5-filter-item-option&gt; &lt;ui5-filter-item-option slot=&quot;values&quot; text=&quot;VP&quot;&gt;&lt;/ui5-filter-item-option&gt; &lt;/ui5-filter-item&gt; &lt;/ui5-view-settings-dialog&gt; &lt;script&gt; let vsdResults = document.getElementById(&quot;vsdResults&quot;); btnOpenDialog1.addEventListener(&quot;click&quot;, ()=&gt; { vsdResults.innerHTML = &quot;&quot;; vsd1.show(); }); vsd1.addEventListener(&quot;confirm&quot;, function(evt) { vsdResults.innerHTML = JSON.stringify(evt.detail); }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The &lt;code&gt;ui5-view-settings-dialog&lt;/code&gt; component helps the user to sort data within a list or a table. It consists of several lists like &lt;code&gt;Sort order&lt;/code&gt; which is built-in and &lt;code&gt;Sort By&lt;/code&gt; and &lt;code&gt;Filter By&lt;/code&gt; lists, for which you must be provide items(&lt;code&gt;ui5-sort-item&lt;/code&gt; &amp; &lt;code&gt;ui5-filter-item&lt;/code&gt; respectively) These options can be used to create sorters for a table. The ui5-view-settings-dialog interrupts the current application processing as it is the only focused UI element and the main screen is dimmed/blocked. The ui5-view-settings-dialog is modal, which means that user action is required before returning to the parent window is possible. Structure A ui5-view-settings-dialog consists of a header, content, and a footer for action buttons. The ui5-view-settings-dialog is usually displayed at the center of the screen. Responsive Behavior ui5-view-settings-dialog stretches on full screen on phones. ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/ViewSettingsDialog&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; sortDescending &lt;br&gt; &lt;code&gt;sort-descending&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the initial sort order. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;filterItems&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the &lt;code&gt;filterItems&lt;/code&gt; list. &lt;b&gt;Note:&lt;/b&gt; If you want to use this slot, you need to import used item: &lt;code&gt;import &quot;@ui5/webcomponents-fiori/dist/FilterItem&quot;;&lt;/code&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;sortItems&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the list of items against which the user could sort data. &lt;b&gt;Note:&lt;/b&gt; If you want to use this slot, you need to import used item: &lt;code&gt;import &quot;@ui5/webcomponents-fiori/dist/SortItem&quot;;&lt;/code&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;before-open&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired before the component is opened. &lt;b&gt;This event does not bubble.&lt;/b&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;cancel&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when cancel button is activated. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;sortOrder&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; String &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The current sort order selected.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;sortBy&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; String &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The currently selected &lt;code&gt;ui5-sort-item&lt;/code&gt; text attribute.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;sortByItem&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The currently selected &lt;code&gt;ui5-sort-item&lt;/code&gt;.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;sortDescending&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The selected sort order (true = descending, false = ascending).&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;filterItems&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Array &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The selected filters items.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;confirm&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when confirmation button is activated. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;sortOrder&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; String &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The current sort order selected.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;sortBy&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; String &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The currently selected &lt;code&gt;ui5-sort-item&lt;/code&gt; text attribute.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;sortByItem&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The currently selected &lt;code&gt;ui5-sort-item&lt;/code&gt;.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;sortDescending&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The selected sort order (true = descending, false = ascending).&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;filterItems&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Array &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The selected filters items.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Methods&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component exposes public methods. You can invoke them directly on the Web Component instance.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;setConfirmedSettings&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Sets a JavaScript object, as settings to the &lt;code&gt;ui5-view-settings-dialog&lt;/code&gt;. This method can be used after the dialog is initially open, as the dialog need to set its initial settings. The &lt;code&gt;ui5-view-settings-dialog&lt;/code&gt; throws an event called &quot;before-open&quot;, this can be used as trigger point. The object should have the following format: &lt;code&gt; {sortOrder: &quot;Ascending&quot;, sortBy: &quot;Name&quot;, filters: [{&quot;Filter 1&quot;: [&quot;Some filter 1&quot;, &quot;Some filter 2&quot;]}, {&quot;Filter 2&quot;: [&quot;Some filter 4&quot;]}]} &lt;/code&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold api-table-param-name&quot;&gt;settings&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; Object &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; predefined settings.&lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;show&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Shows the dialog.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;SortItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; Usage For the ui5-sort-item &lt;h3&gt;ES6 Module Import&lt;/h3&gt; import @ui5/webcomponents-fiori/dist/SortItem.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selected &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the component is selected. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the component. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;FilterItem&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; Usage For the ui5-filter-item &lt;h3&gt;ES6 Module Import&lt;/h3&gt; import @ui5/webcomponents-fiori/dist/FilterItem.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; additionalText &lt;br&gt; &lt;code&gt;additional-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the additional text of the component. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the component. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;values&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;sap.ui.webc.fiori.IFilterItemOption [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the &lt;code&gt;values&lt;/code&gt; list.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;FilterItemOption&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; Usage For the ui5-filter-item-option &lt;h3&gt;ES6 Module Import&lt;/h3&gt; import @ui5/webcomponents-fiori/dist/FilterItemOption.js&quot;; &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selected &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the component is selected. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; text &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the text of the component. &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/ViewSettingsDialog/",
    "relUrl": "/playground/components/ViewSettingsDialog/"
  },
  "247": {
    "id": "247",
    "title": "Wheel Slider_ Test_ Page",
    "content": "&lt;!DOCTYPE html&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/WheelSlider_Test_Page/",
    "relUrl": "/playground/main/pages/WheelSlider_Test_Page/"
  },
  "248": {
    "id": "248",
    "title": "Wizard",
    "content": "&lt;!DOCTYPE html&gt; Wizard Wizard 1. Product Type The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Sed fermentum, mi et tristique ullamcorper, sapien sapien faucibus sem, quis pretium nibh lorem malesuada diam. Nulla quis arcu aliquet, feugiat massa semper, volutpat diam. Nam vitae ante posuere, molestie neque sit amet, dapibus velit. Maecenas eleifend tempor lorem. Mauris vitae elementum mi, sed eleifend ligula. Nulla tempor vulputate dolor, nec dignissim quam convallis ut. Praesent vitae commodo felis, ut iaculis felis. Fusce quis eleifend sapien, eget facilisis nibh. Suspendisse est velit, scelerisque ut commodo eget, dignissim quis metus. Cras faucibus consequat gravida. Curabitur vitae quam felis. Phasellus ac leo eleifend, commodo tortor et, varius quam. Aliquam erat volutpat. Open Wizard Dialog Step 2 2. Product Information Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien Name Weight Manifacturer Apple Samsung Huawei 5 years guarantee included Step 3 3. Options Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Manifacture date Availability In stock In depot Damaged Out of stock Size Small Medium Large Step 4 4. Pricing Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Price Quantity Vat included Finalize Wizard non-standard 1. Product Type The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Sed fermentum, mi et tristique ullamcorper, sapien sapien faucibus sem, quis pretium nibh lorem malesuada diam. Nulla quis arcu aliquet, feugiat massa semper, volutpat diam. Nam vitae ante posuere, molestie neque sit amet, dapibus velit. Maecenas eleifend tempor lorem. Mauris vitae elementum mi, sed eleifend ligula. Nulla tempor vulputate dolor, nec dignissim quam convallis ut. Praesent vitae commodo felis, ut iaculis felis. Fusce quis eleifend sapien, eget facilisis nibh. Suspendisse est velit, scelerisque ut commodo eget, dignissim quis metus. Cras faucibus consequat gravida. Curabitur vitae quam felis. Phasellus ac leo eleifend, commodo tortor et, varius quam. Aliquam erat volutpat. Open Wizard Dialog 2. Product Information Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien Name Weight Manifacturer Apple Samsung Huawei 5 years guarantee included 3. Options Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Manifacture date Availability In stock In depot Damaged Out of stock Size Small Medium Large Step 4 4. Pricing Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Price Quantity Vat included 5. Final Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Price Quantity Vat included Wizard non-standard 2 1. Product Type The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Sed fermentum, mi et tristique ullamcorper, sapien sapien faucibus sem, quis pretium nibh lorem malesuada diam. Nulla quis arcu aliquet, feugiat massa semper, volutpat diam. Nam vitae ante posuere, molestie neque sit amet, dapibus velit. Maecenas eleifend tempor lorem. Mauris vitae elementum mi, sed eleifend ligula. Nulla tempor vulputate dolor, nec dignissim quam convallis ut. Praesent vitae commodo felis, ut iaculis felis. Fusce quis eleifend sapien, eget facilisis nibh. Suspendisse est velit, scelerisque ut commodo eget, dignissim quis metus. Cras faucibus consequat gravida. Curabitur vitae quam felis. Phasellus ac leo eleifend, commodo tortor et, varius quam. Aliquam erat volutpat. Open Wizard Dialog 2. Product Information Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien Name Weight Manifacturer Apple Samsung Huawei 5 years guarantee included Step 3 3. Options Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien Manifacture date Availability In stock In depot Damaged Out of stock Size Small Medium Large Step 4 4. Pricing Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Price Quantity Vat included Wizard non-standard 3 1. Product Type The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Sed fermentum, mi et tristique ullamcorper, sapien sapien faucibus sem, quis pretium nibh lorem malesuada diam. Nulla quis arcu aliquet, feugiat massa semper, volutpat diam. Nam vitae ante posuere, molestie neque sit amet, dapibus velit. Maecenas eleifend tempor lorem. Mauris vitae elementum mi, sed eleifend ligula. Nulla tempor vulputate dolor, nec dignissim quam convallis ut. Praesent vitae commodo felis, ut iaculis felis. Fusce quis eleifend sapien, eget facilisis nibh. Suspendisse est velit, scelerisque ut commodo eget, dignissim quis metus. Cras faucibus consequat gravida. Curabitur vitae quam felis. Phasellus ac leo eleifend, commodo tortor et, varius quam. Aliquam erat volutpat. 2. Product Information Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien Name Weight Manifacturer Apple Samsung Huawei 5 years guarantee included Step 3 3. Options Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien Manifacture date Availability In stock In depot Damaged Out of stock Size Small Medium Large Step 4 4. Pricing Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien Price Quantity Vat included 1. Product Type The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Sed fermentum, mi et tristique ullamcorper, sapien sapien faucibus sem, quis pretium nibh lorem malesuada diam. Nulla quis arcu aliquet, feugiat massa semper, volutpat diam. Nam vitae ante posuere, molestie neque sit amet, dapibus velit. Maecenas eleifend tempor lorem. Mauris vitae elementum mi, sed eleifend ligula. Nulla tempor vulputate dolor, nec dignissim quam convallis ut. Praesent vitae commodo felis, ut iaculis felis. Fusce quis eleifend sapien, eget facilisis nibh. Suspendisse est velit, scelerisque ut commodo eget, dignissim quis metus. Cras faucibus consequat gravida. Curabitur vitae quam felis. Phasellus ac leo eleifend, commodo tortor et, varius quam. Aliquam erat volutpat. Step 2 2. Product Information Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien Name Weight Manifacturer Apple Samsung Huawei 5 years guarantee included Step 3 3. Options Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Manifacture date Availability In stock In depot Damaged Out of stock Size Small Medium Largr Step 4 4. Pricing Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Price Quantity Vat included Finalize",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/Wizard/",
    "relUrl": "/playground/fiori/pages/Wizard/"
  },
  "249": {
    "id": "249",
    "title": "Wizard",
    "content": "Wizard v1.0.0-rc.10 @ui5/webcomponents-fiori &lt;ui5-wizard&gt; Wizard 1. Product Type The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Sed fermentum, mi et tristique ullamcorper, sapien sapien faucibus sem, quis pretium nibh lorem malesuada diam. Nulla quis arcu aliquet, feugiat massa semper, volutpat diam. Nam vitae ante posuere, molestie neque sit amet, dapibus velit. Maecenas eleifend tempor lorem. Mauris vitae elementum mi, sed eleifend ligula. Nulla tempor vulputate dolor, nec dignissim quam convallis ut. Praesent vitae commodo felis, ut iaculis felis. Fusce quis eleifend sapien, eget facilisis nibh. Suspendisse est velit, scelerisque ut commodo eget, dignissim quis metus. Cras faucibus consequat gravida. Curabitur vitae quam felis. Phasellus ac leo eleifend, commodo tortor et, varius quam. Aliquam erat volutpat. Step 2 2. Product Information Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien Name Weight Manifacturer Apple Samsung Huawei 5 years guarantee included Step 3 3. Options Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Manifacture date Availability In stock In depot Damaged Out of stock Size Small Medium Large Step 4 4. Pricing Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Price Quantity Vat included Finalize &lt;ui5-wizard id=&quot;wiz&quot;&gt; &lt;ui5-wizard-step icon=&quot;product&quot; title-text=&quot;Product type&quot; selected&gt; &lt;ui5-title&gt;1. Product Type&lt;/ui5-title&gt; &lt;!-- Move to step 2 --&gt; &lt;ui5-button id=&quot;toStep2&quot;&gt;Step 2&lt;/ui5-button&gt; &lt;/ui5-wizard-step&gt; &lt;ui5-wizard-step icon=&quot;hint&quot; title-text=&quot;Product Information&quot; disabled&gt; &lt;ui5-title&gt;2. Product Information&lt;/ui5-title&gt; &lt;div&gt; &lt;ui5-label&gt;5 years guarantee included&lt;/ui5-label&gt; &lt;ui5-switch id=&quot;sw&quot;&gt;&lt;/ui5-switch&gt; &lt;/div&gt; &lt;!-- Move to step 3 --&gt; &lt;ui5-button id=&quot;toStep3&quot; hidden&gt;Step 3&lt;/ui5-button&gt; &lt;/ui5-wizard-step&gt; &lt;ui5-wizard-step icon=&quot;action-settings&quot; title-text=&quot;Options&quot; disabled&gt; &lt;ui5-title&gt;3. Options&lt;/ui5-title&gt;&lt;br&gt; &lt;ui5-segmented-button id=&quot;sb&quot;&gt; &lt;ui5-toggle-button icon=&quot;employee&quot; pressed&gt;Small&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button&gt;Medium&lt;/ui5-toggle-button&gt; &lt;ui5-toggle-button&gt;Large&lt;/ui5-toggle-button&gt; &lt;/ui5-segmented-button&gt; &lt;!-- Move to step 4 --&gt; &lt;ui5-button id=&quot;toStep4&quot; hidden&gt;Step 4&lt;/ui5-button&gt; &lt;/ui5-wizard-step&gt; &lt;ui5-wizard-step icon=&quot;lead&quot; title-text=&quot;Pricing&quot; disabled&gt; &lt;ui5-title&gt;4. Pricing&lt;/ui5-title&gt;&lt;br&gt; &lt;ui5-button id=&quot;finalize&quot;&gt;Finalize&lt;/ui5-button&gt; &lt;/ui5-wizard-step&gt; &lt;/ui5-wizard&gt; &lt;script&gt; // The code shows how the users can manipulte the ui5-wizard-step API (selected and disabled) // to go through the wizard steps. const moveToStep = idx =&gt; { const step = getStep(idx); // where &quot;step&quot; is an instance of ui5-wizard-step step.selected = true; step.disabled = false; } const getStep = idx =&gt; { return Array.from(wizard.children)[idx]; } const deselectAllSteps = () =&gt; { Array.from(wizard.children).forEach(function(step) { step.selected = false; }); } // Move to Step 2 toStep2.addEventListener(&quot;click&quot;, function () { deselectAllSteps(); moveToStep(1); }); // Move to Step 3 toStep3.addEventListener(&quot;click&quot;, function () { deselectAllSteps(); moveToStep(2); }); // Show the &quot;step to 3&quot; button after &quot;validation&quot; sw.addEventListener(&quot;change&quot;, function () { toStep3.removeAttribute(&quot;hidden&quot;); }); &lt;/script&gt; &lt;div class=&quot;page-container&quot;&gt; &lt;div class=&quot;api-container&quot;&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; The ui5-wizard helps users to complete a complex task by dividing it into sections and guiding them through it. It has two main areas - a navigation area at the top showing the step sequence and a content area below it. Structure Navigation area The top most area of the ui5-wizard is occupied by the navigation area. It shows the sequence of steps, where the recommended number of steps is between 3 and 8 steps. &lt;ul&gt; &lt;li&gt; Steps can have different visual representations - numbers or icons. &lt;li&gt; Steps might have labels for better readability - titleText and subTitleText.&lt;/li&gt; &lt;li&gt; Steps are defined by using the ui5-wizard-step as slotted element within the ui5-wizard.&lt;/li&gt; &lt;/ul&gt; Note: If no selected step is defined, the first step will be auto selected. Note: If multiple selected steps are defined, the last step will be selected. CSS Shadow Parts CSS Shadow Parts allow developers to style elements inside the Shadow DOM. The ui5-wizard exposes the following CSS Shadow Parts: &lt;ul&gt; &lt;li&gt;navigator - Used to style the progress navigator of the ui5-wizard.&lt;/li&gt; &lt;li&gt;step-content - Used to style a ui5-wizard-step container.&lt;/li&gt; &lt;/ul&gt; Keyboard Handling The user can navigate using the following keyboard shortcuts: Wizard Progress Navigation [LEFT], [DOWN] - Focus moves backward to the WizardProgressNavAnchors. [UP], [RIGHT] - Focus moves forward to the WizardProgressNavAnchor. [SPACE] or [ENTER], [RETURN] - Selects an active step [HOME] or [PAGE UP] - Focus goes to the first step [END] or [PAGE DOWN] - Focus goes to the last step Fast Navigation This component provides a build in fast navigation group which can be used via F6 / Shift + F6 or Ctrl + Alt(Option) + Down / Ctrl + Alt(Option) + Up. In order to use this functionality, you need to import the following module: import &quot;@ui5/webcomponents-base/dist/features/F6Navigation.js&quot; Content The content occupies the main part of the page. It can hold any type of HTML elements. It’s defined by using the ui5-wizard-step as slotted element within the ui5-wizard. Scrolling The component handles user scrolling by selecting the closest step, based on the current scroll position and scrolls to particular place, when the user clicks on the step within the navigation area. Important: In order the component’s scrolling behaviour to work, it has to be limited from the outside parent element in terms of height. The component or its parent has to be given percentage or absolute height. Otherwise, the component will be scrolled out with the entire page. For example: &lt;ui5-dialog style=&quot;height: 80%&quot;&gt; &#9;&lt;ui5-wizard&gt;&lt;/ui5-wizard&gt; &lt;/ui5-dialog&gt; Moving to next step The ui5-wizard-step provides the necessary API and it’s up to the user of the component to use it to move to the next step. You have to set its selected property (and remove the disabled one if set) to true. The ui5-wizard will automatically scroll to the content of the newly selected step. The Fiori 3 guidelines recommends having a “nextStep” button in the content area. You can place a button, or any other type of element to trigger step change, inside the ui5-wizard-step, and show/hide it when certain fields are filled or user defined criteria is met. Usage When to use: When the user has to accomplish a long or unfamiliar task. When not to use: When the task has less than 3 steps. Responsive Behavior On small widths the step’s titleText, subtitleText and separators in the navigation area shrink and from particular point the steps are grouped together and overlap. Tapping on them will show a popover to select the step to navigate to. On mobile device, the grouped steps are presented within a dialog. ES6 Module Import import &quot;@ui5/webcomponents-fiori/dist/Wizard.js&quot;; (includes ) &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;HTMLElement [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the steps. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Use the available &lt;code&gt;ui5-wizard-step&lt;/code&gt; component.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot;&gt;Events&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;This Web Component fires semantic events upon user interaction. You can bind to these events with the standard DOM APIs, such as &lt;code&gt;addEventListener&lt;/code&gt;. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;step-change&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Fired when the step is changed by user interaction - either with scrolling, or by clicking on the steps within the component header. &lt;/div&gt; &lt;/div&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;step&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The new step.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;previousStep&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; HTMLElement &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The previous step.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;tr class=&quot;api-table-event-param&quot;&gt; &lt;div class=&quot;api-table-content-event-params-wrapper&quot;&gt; &lt;div class=&quot;cell api-table-param-name api-table-content-cell api-table-content-cell-bold&quot;&gt;changeWithClick&lt;/div&gt; &lt;div class=&quot;cell api-table-event-param-cell api-table-content-cell api-table-content-cell-description&quot;&gt;&lt;strong class=&quot;bold&quot; &gt;type:&lt;/strong&gt; boolean &lt;br/&gt; &lt;strong class=&quot;api-table-event-description bold&quot;&gt;description:&lt;/strong&gt; The step change occurs due to user&#39;s click or &#39;Enter&#39;/&#39;Space&#39; key press on step within the navigation.&lt;/div&gt; &lt;/div&gt; &lt;/tr&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;api-container appended-doc&quot;&gt; &lt;h1&gt;WizardStep&lt;/h1&gt; &lt;section class=&quot;component-description&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot;&gt;Overview&lt;/h3&gt; A component that represents a logical step as part of the ui5-wizard. It is meant to aggregate arbitrary HTML elements that form the content of a single step. Structure Each wizard step has arbitrary content. Each wizard step might have texts - defined by the titleText and subtitleText properties. Each wizard step might have an icon - defined by the icon property. Each wizard step might display a number in place of the icon, when it&#39;s missing. Usage The ui5-wizard-step component should be used only as slot of the ui5-wizard component and should not be used standalone. &lt;section class=&quot;component-api space-top&quot;&gt; &lt;h3 class=&quot;comment-api-title&quot; &gt;Properties/Attributes&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt;You can use both properties and attributes with the same effect. The name of each attribute is listed below the name of the property, if different.&lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Name&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Default Value&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; branching &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; When &lt;code&gt;branching&lt;/code&gt; is enabled a dashed line would be displayed after the step, meant to indicate that the next step is not yet known and depends on user choice in the current step. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; It is recommended to use &lt;code&gt;branching&lt;/code&gt; on the last known step and later add new steps when it becomes clear how the wizard flow should continue. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; disabled &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines if the step is &lt;code&gt;disabled&lt;/code&gt;. When disabled the step is displayed, but the user can&#39;t select the step by clicking or navigate to it with scrolling. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Step can&#39;t be &lt;code&gt;selected&lt;/code&gt; and &lt;code&gt;disabled&lt;/code&gt; at the same time. In this case the &lt;code&gt;selected&lt;/code&gt; property would take precedence. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; icon &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;icon&lt;/code&gt; of the step. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The icon is displayed in the &lt;code&gt;ui5-wizard&lt;/code&gt; navigation header. &lt;br&gt;&lt;br&gt; The SAP-icons font provides numerous options. See all the available icons in the &lt;ui5-link target=&quot;_blank&quot; href=&quot;https://sdk.openui5.org/test-resources/sap/m/demokit/iconExplorer/webapp/index.html&quot; class=&quot;api-table-content-cell-link&quot;&gt;Icon Explorer&lt;/ui5-link&gt;. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; selected &lt;br&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;boolean&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;false&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the step&#39;s &lt;code&gt;selected&lt;/code&gt; state - the step that is currently active. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Step can&#39;t be &lt;code&gt;selected&lt;/code&gt; and &lt;code&gt;disabled&lt;/code&gt; at the same time. In this case the &lt;code&gt;selected&lt;/code&gt; property would take precedence. &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; subtitleText &lt;br&gt; &lt;code&gt;subtitle-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;subtitleText&lt;/code&gt; of the step. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; the text is displayed in the &lt;code&gt;ui5-wizard&lt;/code&gt; navigation header. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-odd&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt; titleText &lt;br&gt; &lt;code&gt;title-text&lt;/code&gt; &lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;string&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;&amp;quot;&amp;quot;&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt; Defines the &lt;code&gt;titleText&lt;/code&gt; of the step. &lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; The text is displayed in the &lt;code&gt;ui5-wizard&lt;/code&gt; navigation header. &lt;div class=&quot;api-table-content-cell-bold api-table-content-cell-since&quot;&gt;since v1.0.0-rc.15&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;h3 class=&quot;comment-api-title space-top&quot; &gt;Slots&lt;/h3&gt; &lt;p class=&quot;small-space-top&quot; &gt; This Element provides slot(s). This means it can display its child nodes.&lt;br&gt; Unless targeting the default slot, use the &lt;code&gt;slot&lt;/code&gt; attribute to define the destination slot for each child.&lt;br&gt; Text, along with HTML Elements with no &lt;code&gt;slot&lt;/code&gt; attribute, goes the the &lt;code&gt;default&lt;/code&gt; slot. &lt;/p&gt; &lt;div class=&quot;small-space-top api-table&quot;&gt; &lt;div class=&quot;head api-table-header-roll&quot;&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Slot&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Type&lt;/div&gt; &lt;div class=&quot;cell api-table-header-cell&quot;&gt;Description&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row api-table-roll-even&quot;&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-bold&quot;&gt;default&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell&quot;&gt;Node [0..n]&lt;/div&gt; &lt;div class=&quot;cell api-table-content-cell api-table-content-cell-description&quot;&gt;Defines the step content.&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; &lt;/section&gt; &lt;/div&gt; &lt;footer class=&quot;footer-wrapper&quot;&gt; &lt;div class=&quot;footer-links&quot;&gt; &lt;a class=&quot;separator&quot; href=&quot;https://www.sap.com/about/legal/privacy.html&quot; target=&quot;_blank&quot;&gt;Privacy Policy&lt;/a&gt; &lt;a href=&quot;https://www.sap.com/about/legal/impressum.html&quot; target=&quot;_blank&quot;&gt;Legal&lt;/a&gt; &lt;/div&gt; &lt;img src=&quot;../../../assets/images/sap-logo-svg.svg&quot; alt=&quot;Sap Logo&quot; /&gt; &lt;/footer&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components/Wizard/",
    "relUrl": "/playground/components/Wizard/"
  },
  "250": {
    "id": "250",
    "title": "Wizard Scrolling",
    "content": "&lt;!DOCTYPE html&gt; Wizard Scrolling Step 1 Step 2 Step 2",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/WizardScrolling/",
    "relUrl": "/playground/fiori/pages/WizardScrolling/"
  },
  "251": {
    "id": "251",
    "title": "Wizard_test",
    "content": "&lt;!DOCTYPE html&gt; Wizard Test Page 1. Product Type The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Sed fermentum, mi et tristique ullamcorper, sapien sapien faucibus sem, quis pretium nibh lorem malesuada diam. Nulla quis arcu aliquet, feugiat massa semper, volutpat diam. Nam vitae ante posuere, molestie neque sit amet, dapibus velit. Maecenas eleifend tempor lorem. Mauris vitae elementum mi, sed eleifend ligula. Nulla tempor vulputate dolor, nec dignissim quam convallis ut. Praesent vitae commodo felis, ut iaculis felis. Fusce quis eleifend sapien, eget facilisis nibh. Suspendisse est velit, scelerisque ut commodo eget, dignissim quis metus. Cras faucibus consequat gravida. Curabitur vitae quam felis. Phasellus ac leo eleifend, commodo tortor et, varius quam. Aliquam erat volutpat. Open Wizard Dialog Configure step-switch-threshold 0.5 default (0.7) 1 Step 2 2. Product Information Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien Name Weight Manifacturer Apple Samsung Huawei 5 years guarantee included Step 3 3. Options Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Manifacture date Availability In stock In depot Damaged Out of stock Size Small Medium Largr Step 2 Step 4 4. Pricing Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Price Quantity Vat included Finalize 1. Product Type The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Sed fermentum, mi et tristique ullamcorper, sapien sapien faucibus sem, quis pretium nibh lorem malesuada diam. Nulla quis arcu aliquet, feugiat massa semper, volutpat diam. Nam vitae ante posuere, molestie neque sit amet, dapibus velit. Maecenas eleifend tempor lorem. Mauris vitae elementum mi, sed eleifend ligula. Nulla tempor vulputate dolor, nec dignissim quam convallis ut. Praesent vitae commodo felis, ut iaculis felis. Fusce quis eleifend sapien, eget facilisis nibh. Suspendisse est velit, scelerisque ut commodo eget, dignissim quis metus. Cras faucibus consequat gravida. Curabitur vitae quam felis. Phasellus ac leo eleifend, commodo tortor et, varius quam. Aliquam erat volutpat. Step 2 2. Product Information Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien Name Weight Manifacturer Apple Samsung Huawei 5 years guarantee included Step 3 3. Options Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Manifacture date Availability In stock In depot Damaged Out of stock Size Small Medium Largr Step 4 4. Pricing Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. Price Quantity Vat included Finalize",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/Wizard_test/",
    "relUrl": "/playground/fiori/pages/Wizard_test/"
  },
  "252": {
    "id": "252",
    "title": "Wizard_test_mobile",
    "content": "&lt;!DOCTYPE html&gt; Wizard Test Page - small widths 1. Product Type The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. 2. Product Information Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien 3. Options Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. 4. Pricing Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. 1. Product Type The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. 2. Product Information Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien 3. Options Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with. 4. Pricing Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec ppellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien corper eu, posuere malesuada nisl. Integer pellentesque leo sit amet dui vehicula, quis ullamcorper est pulvinar. Nam in libero sem. Suspendisse arcu metus, molestie a turpis a, molestie aliquet dui. Donec pulvinar, sapien The Wizard control is supposed to break down large tasks, into smaller steps, easier for the user to work with.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/fiori/pages/Wizard_test_mobile/",
    "relUrl": "/playground/fiori/pages/Wizard_test_mobile/"
  },
  "253": {
    "id": "253",
    "title": "Changelog",
    "content": "Changelog In this section of the playground you will find the full changelog of all packages related to UI5 Web Components.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog",
    "relUrl": "/playground/changelog"
  },
  "254": {
    "id": "254",
    "title": "Components",
    "content": "Components In this section, you can find out API docs &amp; samples for all of our components.",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/components",
    "relUrl": "/playground/components"
  },
  "255": {
    "id": "255",
    "title": "form",
    "content": "&lt;!DOCTYPE html&gt; Form support Input with suggestions Cozy Compact Condensed Input disabled Input readonly Input type &#39;Number&#39; Input type &#39;Password&#39; Input type &#39;Email&#39; Input type &#39;Tel&#39; Input type &#39;URL&#39; test1 test2 test3 Cozy Compact Condensed Option 1 Option 2 Option 3 Does not submit forms Submits forms Submits forms",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/form/",
    "relUrl": "/playground/main/pages/form/"
  },
  "256": {
    "id": "256",
    "title": "i18n-default Lang",
    "content": "&lt;!DOCTYPE html&gt; i18n default language test page",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/i18n-defaultLang/",
    "relUrl": "/playground/main/pages/i18n-defaultLang/"
  },
  "257": {
    "id": "257",
    "title": "i18n-demo",
    "content": "&lt;!DOCTYPE html&gt; i18n Demo i18n and CLDR demo Available languages: ar, bg, ca, cs, da, de, el, en, es, et, fi, fr, hi, hr, hu, it, iw, ja, kk, ko, lt, lv, ms, nl, no, pl, pt, ro, ru, sh, sk, sl, sv, th, tr, uk, vi, zh_CN, zh_TW Cheat sheet: in 2 wochen, in 42 tagen mañana, ayer, 今天, 明天,",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/main/pages/i18n-demo/",
    "relUrl": "/playground/main/pages/i18n-demo/"
  },
  "258": {
    "id": "258",
    "title": "UI5 Web Components",
    "content": "&lt;!DOCTYPE html&gt; UI5 Web Components Documentation Components Blog UI5&nbsp;Web Components Enterprise-flavored sugar on top of native APIs! Latest Version: 1.10.0 Get Started Easy to consume Based on web standards - just HTML! Future-proof. Easy to add to your project. Lightweight Tiny – come with a minimal footprint. Modular – take only the parts you need. Fast - built with performance in mind. Enterprise Ready Implement the SAP Fiori design language. Feature-rich. Secure, accessible, themeable, i18n-ready. Test the UI5 Webcomponents &lt;ui5-date-picker&gt;&lt;/ui5-date-picker&gt; CodeSandBox Try Out the Demo Apps Explore the Code Run the Demo App Explore the Code Run the Demo App Explore the Code Run the Demo App Explore the Code Run the Demo App Framework Compatibility Browser Compatibility Testimonials &quot;I absolutely loved working with the UI5 web components since they are very easy to plug into any application. It made our MDK Web runtime development much easier and more productive.&quot; &quot;The UI5 Web Components are well documented and easy to re-use, making for quick and consistent development. The team provided exceptional service.&quot; &quot;UI5 Web Components keep our focus on delivering product features instead of re-implementing UI primitives while staying consistent with Fiori design. Great job!&quot; &quot;UI5 Web Components are a great set of UI elements that allow you to use the framework to easily build SAP Fiori compliant apps and deliver the best UX for your customers.&quot; Community Docs Playground Documentation FAQ Legal &amp; Privacy Legal Disclosure Privacy Contact Us Report Issue Technical Questions Product Questions &lt;/body&gt;",
    "url": "https://sap.github.io/ui5-webcomponents/main/",
    "relUrl": "/"
  },
  "259": {
    "id": "259",
    "title": "Pages",
    "content": "",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/pages/",
    "relUrl": "/playground/pages/"
  },
  "260": {
    "id": "260",
    "title": "1.0.0-rc.15",
    "content": "1.0.0-rc.15 (2021-07-23) New Components ui5-barcode-scanner-dialog: introduce new component (#3523) (196a590) ui5-breadcrumbs: introduce new component (#3489) (6dbc2a0) ui5-illustrated-message: introduce new component (#3376) (2dff1f4) Features a11y: introduce “accessibleName” property for multiple components (#3449) (f4f5864) a11y: introduce “accessibleNameRef” property for multiple components (#3442) (42d3ed5), closes #3107 ui5-avatar: implement default slot for image (#3237) (9646c3e) ui5-avatar-group: implement accessibility specification (#3154) (baec15b), closes #2745 ui5-badge: apply latest Fiori 3 design (#3389) (a58a1a4) ui5-busy-indicator: add “delay” property (#3419) (cc8acc7) ui5-button: introduce “Attention” type (#3481) (2c9393c), closes #3446 ui5-carousel: add “hidePageIndicator” property (#3268) (e13a4c9), closes #3158 ui5-checkbox: add “indeterminate” state (#3309) (42a1326), closes #3217 ui5-checkbox: add “Success” value state (#3278) (580e289), closes #3198 #3198 ui5-combobox: enable setting value programatically (#3253) (d85561a) ui5-combobox: add suggestions grouping (#3469) (5e3f391), closes #3371 ui5-dialog: add keyboard support for “draggable” and “resizable” (#3483) (8580fd8) ui5-dialog: enable labeling of custom header (#3155) (9943ee7), closes #2838 ui5-icon: support ARIA “role” attribute (#3407) (4bb84e1) ui5-input: introduce new “SuggestionGroupItem” (#3248) (39ccf7b) ui5-li: support HTML “title” attribute (#3385) (2f67084) ui5-li-custom, ui5-li, ui5-li-groupheader: add “accessibleName” property (#3269) (2f88da0) ui5-list: support pressing DELETE key (#3226) (db04d08), closes #3089 ui5-list: add “accessibleRole”” property (99a25be) ui5-page: implement responsive paddings (#3412) (b720393) ui5-panel: expose “content” CSS shadow part (#3211) (267fc02) ui5-product-switch: implement accessibility specification (#2865) (8c0225c), closes #2707 ui5-segmented-button-item: introduce new component (#3258) (9bd9ce4), closes #3191 #3191 ui5-select: support angular reactive forms (#3323) (e369aef) ui5-select: move focus to option upon typing (#3538) (4657395) ui5-switch: add “design” property (#3257) (998be76), closes #3107 ui5-table: add “Single” and “Multi” selection (#2848) (cc31280) ui5-table-group-row: introduce new component (#3470) (d5ab16a), closes #3319 ui5-timeline: introduce “layout” property (#3520) (b28e104) ui5-wizard: support auto focus when step is changed (#3310) (70f5563) framework: introduce InvisibleMessage util (#3192) (0a33c40) framework: expose dist paths as root paths via package.json export field (#3274) (bd34a5e) framework: support sap-* config URL params (#3138) (5d9cdb9), closes #3114 Bug Fixes a11y: keep invisible texts out of the view port (#3085) (de47520), closes #2723 #2723 inputs: use base CSS param for border-radius (#3430) (4a4c5bc) ui5-avatar-group: fire “click” event only once (#3196) (95986e2) ui5-avatar-group: deprecate “avatarSize” property (#3229) (fd60e90) ui5-avatar-group: fix visual design deviations (#3252) (49639e5), closes #3197 ui5-bar: add “aria-label” based on the used “design” (#3161) (7ffb575), closes #3020 ui5-busyindicator: fix aria-labelledby value (#3266) (ef2d332), closes #3256 ui5-busyindicator: fix typo in styles (#3178) (023945a) ui5-busyindicator: improve focus handling (#3189) (1ab4e77), closes #3171 ui5-button: add “Belize” theme parameters to bundle (#3485) (97a8713), closes #3482 ui5-button: improve use of Theme Designer CSS Variables (#3445) (baec4d4) ui5-button: fix line-height (#3416) (e679b51), closes #3401 #3401 ui5-calendar: correct enable/disable of prev and next buttons (#3249) (8c66d5a), closes #3201 ui5-calendar:: fix opening pf month/year pickers with SPACE (#3561) (6d99461), closes #3555 ui5-card: fix internal content’s HTML tag (#3464) (9832843), closes #3439 #3439 ui5-card: fix styles for slotted images (#3301) (1683134) ui5-card: update “border-width” and “box-shadow” styles (#3509) (76dcdbf) ui5-carousel: hide navigation arrows on mouse out (#3174) (655ec49) ui5-checkbox: add “aria-hidden” attribute to icon (#3511) (18de8a1), closes #3433 ui5-checkbox: prevent jumping of elements aligned with baseline when checking/unchecking (#3408) (b458b80) ui5-combobox: announce selected item (#3358) (941a414) ui5-combobox: fix focusing the inner input (#3243) (790c02e) ui5-date-*: fix components accessibility (#3163) (fe06f84), closes #3002 ui5-date-picker: prevent value verification upon typing(#2922) (f5e92e0), closes #2827 ui5-date-picker: fix alignment of day names (#3095) (b6c1a0a) ui5-daterange-picker: stop returning back to the start of the range when user closes the range in another month (#3255) (290b60b), closes #3129 ui5-datetime-picker: fix selection of date value (without time) only (#3294) (0a112ea) ui5-dialog: fix text selection on Chrome (#3532) (1abd40d) ui5-file-uploader: fix button’s hover styles (#3148) (a0ce732) ui5-flexible-column-layout: fix column borders in high contrast themes (#3328) (bd18bb9), closes #3320 ui5-flexible-column-layout: fix columns display (#3444) (62977d0), closes #3425 ui5-input: announce suggestions count when expected (#3127) (76ec379), closes #3051 ui5-label: fix required label appearance in Safari (#3182) (921ac5a) ui5-li: fix “info” text width (#3184) (3b930af) ui5-li: remove “delete” button from tab chain(#3290) (5176954), closes #2964 ui5-li-tree: fix arrow flickering (#3293) (eca59f5), closes #3238 ui5-li-tree: fix selection background (#3072) (bb5d65f), closes #2978 ui5-li-tree: fix incorrect display of the text (#3086) (684ccbf) ui5-li-tree: hfix hover and active visual state (#3298) (4ac6d23) ui5-li-tree: fix “info” text visual appearance (#3280) (1523e25), closes #3130 ui5-link: fire “click” event on SAPCE and ENTER (#3374) (ffa2c4c), closes #3007 #3007 ui5-list: fixed keyboard navigation when List is used inside another List (#3314) (15e235e) ui5-list: fix focus handling on TAB key pressed (#3220) (32a4148) ui5-list: prevent “load-more” on initial rendering (#3105) (ef52f2b) ui5-list: prevent scrolling with SPACE (#3272) (0c7e58b), closes #3089 ui5-popover: fix content’s max-height (#3386) (8cba688) ui5-popup: fix default header height (#3506) (ab11001) ui5-popup: fix scroll handle in input components’ dropdowns (#3414) (c5e00c4) ui5-rating-indicator: fix “aria-readonly” attr when not editable (#3219) (b90933c) ui5-responsive-popover: fix header styles (#3176) (83a88af), closes #3173 ui5-responsive-popover: fix position of downward pointing arrow (#3508) (e0744d6), closes #3500 ui5-select: display the selected option’s icon (#3348) (dac8183), closes #3344 ui5-select: support HOME and END keyboard keys (#3372) (b12a30b) ui5-shellbar: fix search field width (#3296) (51fb1a3) ui5-shellbar: fix unnecessary cutting space on left side (#3513) (c7e6f07), closes #3501 ui5-shellbar: fix notification bubble visibility (#3123) (33fde82), closes #3121 ui5-shellbar: fix menu button’s arrow position (#3285) (18ea76d), closes #3199 ui5-side-navigation: fire “click” on items inside the popup menu (#3468) (658328a) ui5-slider, ui5-range-slider: fix templates to render one top level element only (#3115) (c03f211) ui5-step-input: fire “input” once when value is deleted (#3474) (a5f27f2), closes #3457 ui5-step-input: fix “min-width” is now correct (#3398) (a8af480), closes #3377 #3377 ui5-tabcontainer: scroll tabs into view with keyboard navigation (#3354) (d61a9b2) fix(ui5-table-cell): ui5-table-cell: allow selection of text nodes (#3568) (e4770b3) ui5-table-row: prevent SPACE only when event target is the TableRow (#3393) (d48b4c6) ui5-textarea: restore value on ESCAPE key (#3261) (7b60885) ui5-time-picker: fix accessibility (#3162) (927abf6), closes #3010 ui5-tree: fix alignment of items (#3424) (788d25d) ui5-upload-collection-item: fix keyboard navigation (#3327) (aad0c32) ui5-wizard: fix step’s alignment of number and title texts (#3370) (2cd97ec), closes #3251 #3251 ui5-wizard: correct step icons vertical alignment (#3566) (2584341) ui5-wizard: correct “aria-controls” value (#3180) (d449812) ui5-wizard: implement revised accessibility spec (#2990) (99cb6b1) playground: fix links (#3295) (62a0cc3) BREAKING CHANGES a11y: deprecate “aria-label” support in favour of “accessible-name” (#3449) (f4f5864) The support of “aria-label” has been deprecated in favor of new property “accessibleName” for the following components: Button, Wizard, WizardStep, ComboBox, DatePicker, Dialog, Input, List, Panel, Popover, Popup, RatingIndicator, Select, StepInput and TextArea. The support of “aria-label” has been removed for the following components: Card, CheckBox and Link. &lt;ui5-date-picker accessible-name=&quot;Hello World&quot;&gt;&lt;/ui5-date-picker&gt; a11y: deprecate “aria-labelledby” support in favour of “accessible-name-ref” (#3442) (42d3ed5), closes #3107 The support for “aria-labelledby” have been deprecated in favour of new property “accessibleNameRef” for the following components: ComboBox, DatePicker, Input, List, Rating Indicator, Select, StepInput, TextArea, WizardStep. The support for “aria-labelledby” has been removed for the following component: Button, Card and CheckBox. &lt;ui5-label id=&quot;infoText&quot;&gt;info text&lt;/ui5-label&gt; &lt;ui5-date-picker accessible-name-ref=&quot;infoText&quot;&gt;&lt;/ui5-date-picker&gt; all list items: rename “info” and “infoState” properties (#3259) (ca42531), closes #3107 StandardListItem’s “info” and “infoState” properties have been renamed to “additionalText” and “additionalTextState”. SuggestionItem’s “info” and “infoState” properties have been renamed to “additionalText” and “additionalTextState”. TreeItem’s: “info” and “infoState” properties have been renamed to “additionalText” and “additionalTextState”. ui5-avatar: rename “backgroundColor” property to “colorScheme” (#3237) (a3a3a11) The property “backgroundColor” has been renamed to “colorScheme”. ui5-avatar: implement default slot for image (#3237) (9646c3e) The properties “image” and “imageFitType” have been deprecated in favour of default slot: &lt;ui5-avatar&gt; &lt;img src=&quot;./avatar.jpg&quot; style=&quot;object-fit: cover;&quot;&gt; &lt;/ui5-avatar&gt; ui5-avatar-group: deprecate “avatarSize” property (#3107) (fd60e90) The property “avatarSize” property has been deprecated. You can set the “size” property to every avatar that you pass in the default slot. ui5-bar: replace “middleContent” slot with the default slot (#3107) (e235d7d) The middleContent slot is deprecated in favour of default slot. ui5-busy-indicator: change tag name (#3107) (d43de85) The component tag name is renamed from “ui5-busyindicator” to “ui5-busy-indicator”. ui5-button: remove “iconSize” property (#3107) (ff9d7dd) The “iconSize” property has been removed. ui5-card: refactor API (#3107) (86f0333) The Card’s “header”, “subheading”, “status”, “headerInteractive” properties, “action” and “avatar” slots, and “header-click” events are not available anymore. Instead, use the newly created “CardHeader” component, which provides the same API with a bit of change in the names as follows: the “headerInteractive”, “heading” and “subheading” properties have been renamed to “interactive, “titleText” and “subtitleText”, the “header-click” event has been renamed to “click”. In addition, the Card now has a “header” slot, for which you can use the CardHeader: &lt;ui5-card&gt; &lt;ui5-card-header slot=&quot;header&quot; status=&quot;4 of 10&quot; title-text=&quot;Quick Links&quot; subtitle-text=&quot;quick links&quot;&gt; &lt;/ui5-card-header&gt; &lt;/ui5-card&gt; ui5-carousel: refactor API (#3107) (351d289) The “selectedIndex” property is deprecated. The “infiniteScrollOffset” property and “load-more” event are deprecated, use the “navigate” event to load more items. ui5-carousel: change “hideNavigation” to “hideNavigationArrows” (#3107) (2adee01) The property “hideNavigation” has been replaced by “hideNavigationArrows”. The new property shows/hides the arrows only (previously - both the arrows and the dots in the bottom). ui5-checkbox: replace “wrap” with “wrappingType” (#3107) (85143e9) The boolean property “wrap” has been removed in favour of string prop “wrappingType”. If you previously used “wrap”, now set wrappingType=”Normal” instead. ui5-color-palette: rename “change” event (#3107) (b1e2eaf) The “change” event has been renamed to “item-click”. ui5-color-palette: change API (#3107) (12ce9fd) The “showMoreColors” and “showRecentColors” property have been removed - ColorPalettePopover component will be introduced in future to provide this functionality. In addition, the “value” property has been also removed. ui5-color-palette-item: remove “stableDomRef” as not needed (#3107) (862a452) The “stableDomRef” property has been removed. If previously used, just call “getDomRef” on the ColorPaletteItem to get its DOM reference. ui5-combobox: enable setting value programatically (#3107) ([d85561a]d85561a(https://github.com/SAP/ui5-webcomponents/commit/d85561a)) The “filterValue” property has been removed. The “value” property should be used as now it represents the “live” value of the component. ui5-dialog: rename the “open” method to “show” (#3107) (0ecc508) The public method “open” has been renamed to “show”. ui5-daterange-picker: rename first/lastDateValue (#3107) (ad365f4) The readonly attributes “firstDateValue” and “lastDateValue” have been renamed to “startDateValue” and “endDateValue”. ui5-duration-picker: remove component (#3107) (8801e55) The DurationPicker is now private component and no longer supported. It may continue working, but it’s not guaranteed. ui5-flexible-column-layout: rename “noArrows” property to “hideArrows” (#3107) (8660d11) The “noArrows” property has been renamed to “hideArrows”. ui5-input: (#3237) (6630c2a) The “highlight” property has been removed and the feature is enabled by default. ui5-input: remove public method (#3224) (1166fb4), closes #3107 The “isOpen method” (that used to return if the value state popover is open or closed) has been removed. ui5-input: introduce new “SuggestionGroupItem” (#3248) (39ccf7b) The “group” property of the SuggestionItem is removed, use the SuggestionGroupItem component to create grouping as follows: &lt;ui5-input show-suggestions&gt; &lt;ui5-suggestion-group-item text=&quot;Group #1&quot;&gt;&lt;/ui5-suggestion-group-item&gt; &lt;ui5-suggestion-item text=&quot;Item #1&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;ui5-suggestion-item text=&quot;Item #2&quot;&gt;&lt;/ui5-suggestion-item&gt; &lt;/ui5-input&gt; ui5-label: replace “wrap” with “wrappingType” (#3107) (e591e04) The boolean property “wrap” has been removed in favour of string prop “wrappingType”. If you previously used “wrap”, now set wrappingType=”Normal” instead. ui5-link: replace “wrap” with “wrappingType” (#3107) (cff8fd4) The boolean property “wrap” has been removed in favour of string prop “wrappingType”. If you previously used “wrap”, now set wrappingType=”Normal” instead. ui5-li-notification: replace “wrap” with “wrappingType” (#3565) (6701ab5) The boolean property “wrap” has been removed in favour of string prop “wrappingType”. If you previously used “wrap”, now set wrappingType=”Normal” instead. ui5-list: rename “inset” property to “indent” (#3107) (eba1e64) The property “inset” has been renamed to “indent”. ui5-li-notification: rename “heading” property to “titleText” (#3586) (4f17a31) The property “heading” property has been renamed to “titleText”. ui5-li-notification-group: rename “heading” property to “titleText” (#3586) (4f17a31) The property “heading” property has been renamed to “titleText”. ui5-messagestrip: refactor API (#3237) (1cb43f2) The properties “noIcon” and “noCloseButton” have been renamed to “hideIcon” and “hideCloseButton”. ui5-messagestrip: rename property “type” to “design” (#3237) (4208d19) The property “type” has been renamed to “design”. ui5-popover: rename “noArrow” property to “hideArrow” (#3107) (39cc473) The property “noArrow” has been renamed to “hideArrow”. ui5-popover: rename “openBy” method to “showAt” (#3107) (59f5354) The public method “openBy” has been renamed to “showAt”. ui5-product-switch-item: rename “heading” and “subtitle” properties (#3107) (2461b73) The properties “heading” and “subtitle” have been renamed to “titleText” and “subtitleText”. ui5-radio-button: change tag name bca726e), closes #3107 The component’s tag name has been renamed from “ui5-radiobutton” to “ui5-radio-button”. ui5-radio-button: replace “wrap” with “wrappingType” (#3107) (724025b) The boolean property “wrap” has been removed in favour of string prop “wrappingType”. If you previously used “wrap”, now set wrappingType=”Normal” instead. ui5-radio-button: change “selected” proerty to “checked” (#3107) (677d5be) The “selected” property has been renamed to “checked” and the “select” event to “change”. ui5-rating-indicator: rename “maxValue” property to “max” (#3107) (8aaf99b) The “maxValue” property has been deprecated in favour of “max” property. ui5-responsive-popover: rename “openBy” method to “showAt” (#3107) (59f5354) The public method “open” has been renamed to “showAt”. ui5-segmented-button: change tag name (b3b42f6), closes #3107 The component’s tag name has been renamed from “ui5-segmentedbutton” to “ui5-segmented-button”. ui5-segmented-button-item: introduce new component (#3258) (9bd9ce4), closes #3191 #3191 SegmentedButton no longer accepts ToggleButton, you have to use the newly created component, called SegmentedButtonItem as follows: &lt;ui5-segmentedbutton&gt; &lt;ui5-segmentedbutton-item pressed&gt;One&lt;/ui5-segmentedbutton-item&gt; &lt;ui5-segmentedbutton-item&gt;Two&lt;/ui5-segmentedbutton-item&gt; &lt;ui5-segmentedbutton-item&gt;Three&lt;/ui5-segmentedbutton-item&gt; &lt;/ui5-segmentedbutton&gt; ui5-shellbar: rename “notificationCount” property to “notificationsCount” (6495028), closes #3107 The property “notificationCount” has been renamed to “notificationsCount”. ui5-switch: implement “design” property (998be76), closes #3107 The booloean “graphical” property has been deprecated in favour of enum “design” property. ui5-tab: rename “semanticColor” property to “design” (#3107) (a7a0da1) The property :semanticColor” has been renamed to “design”. ui5-tabcontainer: deprecate “tabsPlacement” (#3107) (4343100) The property “tabsPlacement” has been removed as it is not specified in SAP Fiori 3 design system. ui5-table: introduce “hideNoData” property (#3107) (d2d4397) The property “showNoData” has been renamed to “hideNoData”. ui5-table: rename “more(sub)Text” to “growingButton(sub)Text” (#3107) (a3dd305) The properties “moreText” and “moreSubtext” have been removed, use “growingButtonText” and “growingButtonSubtext” instead. ui5-timeline-item: change API (#3107) (3b1c0b5) The properties “itemName” and “itemNameClickable” are renamed to renamed to “name” and “nameClickable” and the event “item-name-click” is renamed to “name-click”. ui5-title: replace “wrap” with “wrappingType” (#3107) (448c726) The boolean property “wrap” has been removed in favour of string prop “wrappingType”. If you previously used “wrap”, now set wrappingType=”Normal” instead. ui5-toggle-button: change tag name (4347195), closes #3107 ui5-toggle-button: remove “iconSize” property (#3107) (ff9d7dd) The “iconSize” property has been removed. ui5-upload-collection: change “file-deleted” event name (#3107) (5898eb8) The “file-deleted” event has been renamed to “item-delete”. ui5-upload-collection: rename “noDnd” property to “hideDragOverlay” (#3107) (c360443) The property “noDnd” has been renamed to “hideDragOverlay”. ui5-upload-collection-item: change API (#3107) (09e9d2a) The properties “noDelete”, “noRetry” and “noTerminate” have been renamed to “disableDeleteButton”, “hideRetryButton” and “hideTerminateButton”. ui5-wizard: rename “selection-change” event to “step-change” (#3107) (eec4ba3) The “selection-change” event has been renamed to “step-change”. In addition, the event param “selectedStep” has been renamed to “step” and the event param “previouslySelectedStep” has been renamed to “previousStep”. ui5-wizard-step: rename “heading” and “subheading” properties (#3107) (b0e73ad) The properties “heading” and “subheading” have been renamed to “titleText” and “subtitleText”. Code Refactoring all list items: rename “info” and “infoState” properties (#3259) (ca42531), closes #3107 ui5-avatar: rename “backgroundColor” property to “colorScheme” (#3237) (a3a3a11) ui5-avatar-group: deprecate “avatarSize” property (#3107) (fd60e90) ui5-bar: remove “middleContent” slot (#3107) (e235d7d) ui5-busy-indicator: change tag name (#3107) (d43de85) ui5-button: remove “iconSize” property (#3107) (ff9d7dd) ui5-card: refactor API (#3107) (86f0333) ui5-carousel: refactor API (#3107) (351d289) ui5-carousel: change “hideNavigation” to “hideNavigationArrows” (#3107) (2adee01) ui5-checkbox: replace “wrap” with “wrappingType” (#3107) (85143e9) ui5-color-palette: rename “change” event (#3107) (b1e2eaf) ui5-color-palette: change API (#3107) (12ce9fd) ui5-color-palette-item: remove “stableDomRef” as not needed (#3107) (862a452) ui5-dialog: rename the “open” method to “show” (#3107) (0ecc508) ui5-daterange-picker: rename first/lastDateValue (#3107) (ad365f4) ui5-duration-picker: remove component (#3107) (8801e55) ui5-flexible-column-layout: rename “noArrows” property to “hideArrows” (#3107) (8660d11) ui5-input: remove “highlight” property (#3350) (6630c2a) ui5-input: change public method to private (#3224) (1166fb4), closes #3107 ui5-label: replace “wrap” with “wrappingType” (#3107) (e591e04) ui5-link: replace “wrap” with “wrappingType” (#3107) (cff8fd4) ui5-list: rename “inset” property to “indent” (#3107) (eba1e64) ui5-li-notification: replace “wrap” with “wrappingType” (#3565) (6701ab5) ui5-li-notification: rename “heading” property to “titleText” (#3586) (4f17a31) ui5-li-notification-group: rename “heading” property to “titleText” (#3586) (4f17a31) ui5-messagestrip: refactor API (#3237) (1cb43f2) ui5-messagestrip: rename property “type” to “design” (#3237) (4208d19) ui5-popover: rename “noArrow” property to “hideArrow” (#3107) (39cc473) ui5-popover: rename “openBy” method to “showAt” (#3107) (59f5354) ui5-product-switch-item: rename “heading” and “subtitle” properties (#3107) (2461b73) ui5-radio-button: change tag name (bca726e), closes #3107 ui5-radio-button: replace “wrap” with “wrappingType” (#3107) (724025b) ui5-radio-button: change “selected” proerty to “checked” (#3107) (677d5be) ui5-rating-indicator: rename “maxValue” property to “max” (#3107) (8aaf99b) ui5-responsive-popover: rename “openBy” method to “showAt” (#3107) (59f5354) ui5-segmented-button: change tag name (b3b42f6), closes #3107 ui5-shellbar: rename “notificationCount” property to “notificationsCount” (6495028), closes #3107 ui5-switch: implement “design” property (998be76), closes #3107 ui5-tab: rename “semanticColor” property to “design” (#3107) (a7a0da1) ui5-tabcontainer: deprecate “tabsPlacement” (#3107) (4343100) ui5-table: rename “showNoDate” to “hideNoData” (#3107) (d2d4397) ui5-table: rename “more(sub)Text” to “growingButton(sub)Text” (#3107) (a3dd305) ui5-timeline-item: change API (#3107) (3b1c0b5) ui5-title: replace “wrap” with “wrappingType” (#3107) (448c726) ui5-toggle-button: change tag name (4347195), closes #3107 ui5-toggle-button: remove “iconSize” property (#3107) (ff9d7dd) ui5-upload-collection: rename “noDnd” property to “hideDragOverlay” (#3107) (c360443) ui5-upload-collection: change “file-deleted” event name (#3107) (5898eb8) ui5-upload-collection-item: change API (#3107) (09e9d2a) ui5-wizard: rename “selection-change” event to “step-change” (#3107) (eec4ba3) ui5-wizard-step: rename “heading” and “subheading” properties (#3107) (b0e73ad)",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/rc15/",
    "relUrl": "/playground/changelog/rc15/"
  },
  "261": {
    "id": "261",
    "title": "1.0.0-rc.16",
    "content": "1.0.0-rc.16 (2021-11-09) New Component ui5-color-palette-popover: initial implementation (#3746) (894628f) New Theme all components: introduce preview version of SAP Horizon theme (#3991) (b1afaf0), closes #3988 New Icons icons: introduce SAP-icons5.0 font based icons (#4244) (c0a226e) Features framework: allow using a custom i18n library (#4119) (56f366f) framework: implement better custom theme support (#4121) (31e30f8) framework: handle PAGE UP and PAGE DOWN in ItemNavigation (#3727) (91a974f) framework: load new “72Black” font face (#4139) (2be7869) framework: enable getDomRef for abstract web components (#4210) (d1ebea3) tools: create NPM init script (#4090) (5608e04) ui5-calendar: support secondary calendar type (#3634) (fca7508) ui5-card: introduce accessibleName property (#4021) (54fdb3a) ui5-card-header: implement ariaLevel property (#3878) (b2b2ccd) ui5-carousel: implement F7 keyboard functionality (#3559) (df0ace8), closes #3092 ui5-date-picker: introduce preventable change and input events (#3609) (05e0769), closes #3516 #3516 ui5-illustrated-message: add TNT illustration set (#3857) (0ade371) ui5-illustrated-message: introduce subtitle slot (#3633) (96ccf93), closes #3557 #3557 ui5-panel: noAnimation property introduced (#3694) (fc7972b), closes #3505 ui5-product-switch: add selected state to an item (#3872) (9e7928b) ui5-progress-indicator: implement displayValue property (#3879) (50008d0), closes #3573 #3573 ui5-responsive-popover: add preventInitialFocus parameter to showAt method (#3595) (62d1079), closes #3473 ui5-side-navigation: add tooltip to all items (#3921) (5849a38), closes #3549 #3549 ui5-tree: introduce item-mouseover/item-mouseout events (#3990) (e8b6145) ui5-upload-collection: add accessibleName property (#3917) (ea79fb3), closes #3768 #3768 ui5-view-settings-dialog: introduce filter section (#3616) (52987c2) BREAKING CHANGES framework: The async fetchI18nBundle function is now removed. Use async getI18nBundle instead #4128 icons: The icons SVG imports are changed. If you previously had import &quot;@ui5/webcomponents-icons/dist/accept.svg&quot;; you have to import the SVGs from the v4/ (SAP-icons4.0) or the v5/ (SAP-icons5.0) directory: import &quot;@ui5/webcomponents-icons/dist/v4/accept.svg&quot;; // for SAPIcons4.0 import &quot;@ui5/webcomponents-icons/dist/v5/accept.svg&quot;; // for SAPIcons5.0 theming: theme-base package deprecated in favour of theming package. #4133 ui5-breadcrumbs-item: BreadcrumbsItem’s stableDomRef property has been removed - use getDomRef to get the matching actual DOM ref. #4284 ui5-message-strip: The MessageStrip component’s tag name has been renamed from ui5-messagestrip to ui5-message-strip. #4268 ui5-input: The suggestion-scroll event has been removed as no UX specified. #4141 ui5-option, ui5-combobox-item, ui5-multi-combobox-item, ui5-tab: The stableDomRef property has been removed - use getDomRef to get the matching actual DOM ref. #4210. ui5-shellbar-item: ShellBarItem’s event item-click has been renamed to click. #4282 ui5-wizard: The accessible-name property has been removed. #4262 Bug Fixes ui5-*: add global styles for tap-highlight-color (18dab92) ui5-avatar: correct background when image slot is used (#4117) (81d7815) ui5-button: fix hover state for combi device(#4100) (6ab905c) ui5-card: fix accessibleNameRef value (#4118) (07e8d44), closes #3681 ui5-combobox: fix autocomplete on Safari (#3999) (2ee4feb) ui5-date-picker: fox hover state on readonly is now fixed (#4272) (535d0e5) ui5-datetime-picker: fix the focus border (#4250) (9404c73) ui5-datetime-picker: fix JS error not thrown on Firefox browser (#4164) (7d773d5), closes #4136 ui5-dialog: fix resize handler console warning ([#4138](https://github.com/SAP/ui5-webcompon ui5-input: escape HTML before highlighting suggestions (XSS) (2a4919e), closes #4245 ui5-input: prevent suggestion popover open on focusin (#3997) (0b3e12f) ui5-avatar: fix font-size and color-scheme (#3799) (ea8ef59) ui5-bar: fix center alignment middleContent slot (#3719) (d5a0a3a), closes #3456 #3456 ui5-calendar: fix year picker’s button text (#3665) (5857496), closes #3658 ui5-checkbox: fix component square’s border-radius (#4073) (c70942b) ui5-color-picker: change event is now fired on opacity change (#3645) (9ee329a) ui5-combobox: fix arrow navigation functionality (#3928) (fea941a) ui5-dialog: fix scroll blocking (#4092) (e66ab79) ui5-file-uploader: activate on ENTER and SPACE when screen reader virtual cursor is on (#3944) (159687e), closes #3767 #3767 ui5-flexible-column-layout: fix speech output on layout arrows (#4034) (272e600), closes #3699 ui5-icon: set aria-hidden=true to decorative icons (#3983) (9101130), closes #3954 ui5-input: fix behaviour on mobile device (#4025) (bab54f6) ui5-li-notification: fix icon padding in RTL (#3876) (6ebfecb) ui5-link: add underlining in the regular state in HCB/HCW themes (#3960) (903a480) ui5-list: change role mappings so no interactive elements are nested (#3952) (6d98d0c), closes #3927 ui5-list: preven SPACE keydown (#4088) (e9c5287), closes #4049 ui5-list, ui5-table, ui5-notification, ui5-busy-indicator: getFocusDomRef returns the correct element when the state is busy (#3951) (ec81c15), closes #3922 ui5-multi-combobox: fix value reset on ESC (#3958) (ed128db) ui5-multi-combobox: prefilter selected items on n-more click (#3931) (2ebc6a7) ui5-multi-combobox: revert selection after CLOSE button is pressed (#3938) (104ec37), closes #3764 ui5-multi-combobox: select an item when value matches and ENTER is pressed (#3942) (ec4ecc8), closes #3809 ui5-rating-indicator: apply correct color for readonly unselected icon (#3992) (5854e0f) ui5-select: fix screen reader speech out when popover is open (#3705) (06c193a), closes #3617 ui5-table: select all column is now sticky (#3950) (9530a5b) ui5-timeline: elements with role option have a parent element with role listbox (#4053) (2b27754), closes #3459 ui5-view-settings-dialog: import all dependencies (#4074) (11d529e) ui5 card: exploratory testing issues (#3894) (f6bce94) ui5-avatar: documentation improvements (#3909) (833040d) ui5-avatar, ui5-icon: attach onclick handler based on interactive property (#3742) (cbdae54) ui5-badge: update accent colors (#3926) (7c45ff7), closes #3923 #3923 ui5-badge: update parameters for color-scheme=”8” (#3814) (9f4a93e) ui5-calendar: ACC improvements (#3789) (9f40233) ui5-calendar: keyboard handling now compliant with the specification (#3649) (768d1e7) ui5-card: correctly set aria-labelledby (#3692) (1e57b00), closes #3643 ui5-card: exploratory testing issues (#3881) (75023c1) ui5-color-palette-popover: fix event params (#3873) (1066030) ui5-combo-box: Link in value state message is now accessible (#3901) (5fd1643), closes #3855 #3855 ui5-combobox: Fix value reset on ESC #3886 (ae74add), closes #3784 #3784 ui5-input: adjust value state paddings according to specifications (#3833) (4c8ff0c), closes #3611 #3611 ui5-input: fix value reset on ESC (#3886) (3f1c267), closes #3784 #3784 ui5-input: remove data-sap-no-tab-ref attribute from the inner input (3e49773), closes #3603 ui5-li: add “Selected” text to item’s accessible name (#3853) (2924010) ui5-multi-combobox: prevent setting max-width of dialog header on mobile (#3943) (97d0382), closes #3763 ui5-product-switch-item: no-wrap title behavior added when subtitle is not present (#3800) (3f007fd) (ui5-li): add accessible name to single select radio button (#3842) (c77d9c9) ComboBox arrow now correctly toggles the picker (#3937) (19e77da) ui5-card-header: no longer fires click event twice (#3823) (d4f4e91) ui5-color-palette: align space between swatches (#3912) (8ad1fdd) ui5-color-palette: focus outline is properly visualized (#3648) (2e708d4) ui5-color-picker: opacity slider doesn’t affect the hue slider (#3664) (3afe78a) ui5-combobox: fix double announcement on key navigation (#3495) (0ff3325) ui5-date-picker: calendar horizontal center align (#3905) (75aef88) ui5-date-picker: fix dateValue getter to return most recent value (#3629) (bee34da), closes #3516 ui5-date-picker: keyboard handling now compliant with the specification (#3636) (24467f8), closes #3091 ui5-daypicker: fix js error (#3677) (b6d643a) ui5-dialog: correctly restore body scrolling on ESC (#3696) (1c8e656), closes #3690 ui5-dialog: fix console warning from exploratory testing (#3893) (c648714), closes #3620 ui5-illustrated-message: add missing dependencies (#3822) (75e6a8c) ui5-illustrated-message: remove style attribute of svg (#3605) (41f72e3) ui5-input: prevent exception in console when input is clicked on mobile (#3729) (8d05606) ui5-label: adjust colon margins (#3897) (ccca671) ui5-label: wrapping now works when used in CustomListItem (#3852) (8333f5e) ui5-li-groupheader: change role option (#3869) (90e718b) ui5-li-groupheader: fix row height (#3610) (79d259e), closes #3606 ui5-link: the anchor element inherits its text-decoration (#3911) (bb8629c), closes #3837 #3837 ui5-popover: fix arrow placement when reaching a border (#3821) (9913632), closes #3391 ui5-popover: fix initial flickering (#3910) (6afad2a) ui5-popover: restrict growing width on small screens (#3820) (bd0b33a) ui5-list: remove unnecessary scrollbar in RTL for Multiselect mode (#4085) (04c09da), closes #3947 ui5-radio-button: exploratory testing issues (#3740) (23ce10f) ui5-segmented-button: correct focus on first click (#3906) (6820dd7) ui5-segmented-button: keyboard handling now compliant with the specification (#3709) (d34afc1) ui5-select: align value state to visual specification (#3655) (cce6505), closes #3611 ui5-select: fix selection change with keyboard (#3704) (68da439) ui5-side-navigation: fix RTL behaviour (#3774) (cb39444) ui5-slider: keyboard handling now works correctly in RTL (#3949) (f6dee74) ui5-slider: show tooltips when component has focus (#3899) (952445d) ui5-panel: add border bottom when fixed (#4234) (a19e401) ui5-shellbar: fix public readonly getters (#4283) (d90daf5) ui5-shellbar: fix JS error on custom action press (#4281) (c73294b) ui5-shellbar: remove unnecessary aria-label from buttons (#3981) (d60120d), closes #3953 ui5-shellbar: remove empty secondary title wrapper (#3737) (28d9a1a), closes #3698 #3698 ui5-tabcontainer: fix CSS selector rule (#4261) (#4273) (24ff145) ui5-tabcontainer: paddings are changed according to the spec (#4166) (0bb0b92) ui5-table: add missing dependency to Checkbox (#4199) (0f6e224), closes #4094 ui5-table: hide row columns on minWidth (#4193) (bf2495b) ui5-tabcontainer: change paddings to full-fill the specs (#4196) (3fd8b48) ui5-textarea: value state message link is now accessible (#3916) (015e3ef) ui5-timeline: align indicator in compact mode (#3902) (0c31502) ui5-timeline: keyboard handling is now compliant with the specification (#3722) (2ad208e) ui5-timepicker: correct navigation to the am/pm slider (#3920) (ba38d4c) ui5-toast: announce content when ui5-toast is shown (#3939) (66901ad) ui5-toggle-button: SHIFT+SPACE cancels the action (#3713) (48adbbe) ui5-tokenizer: fix invisble texts styling (#3394) (bc62eaa) ui5-tree, ui5-table, ui5-side-navigation: fix unnecessary scrollbar in RTL is removed (#3948) (61fe0fe) ui5-upload-collection: fix no files heading HTML tag (#3930) (e020249) ui5-wizard: grouped steps could be activated (#3961) (be36219) ui5-wizard: step titles are now visible on phone (#3895) (9a183b4) ui5-wizard: remove unneeded aria properties (#4262) (7fa969b) framework: removing the base theme works with adopted stylesheets (#4158) (aa1f594) framework: detach events correctly to prevent memory leaks (#3941) (6c877ee) framework: fix init package script bugs (#4069) (2e68d32) framework: apply RTL for components with popovers (#3657) (28e868b) Code Refactoring ui5-breadcrumbs-item: remove stableDomRef public property (#4284) (ecec275) ui5-input: remove suggestion-scroll event (#4141) (3a0abee) ui5-message-strip: rename tag name (#4268) (ec30ec2) ui5-shellbar-item: rename item-click to click (#4282) (4cd86b1)",
    "url": "https://sap.github.io/ui5-webcomponents/main/playground/changelog/rc16/",
    "relUrl": "/playground/changelog/rc16/"
  }
  
}
