{"version":3,"file":"preview.af417950.js","sources":["../../../../../node_modules/@whitespace/storybook-addon-html/dist/esm/constants.js","../../../../../node_modules/@whitespace/storybook-addon-html/dist/esm/withHTML.js","../../../../../node_modules/@whitespace/storybook-addon-html/dist/esm/preset/preview.js"],"sourcesContent":["export var ADDON_ID = \"storybook/html\";\nexport var PANEL_ID = \"\".concat(ADDON_ID, \"/panel\");\nexport var PARAM_KEY = \"html\";\nexport var EVENTS = {\n  CODE_UPDATE: \"\".concat(ADDON_ID, \"/codeUpdate\")\n};","import { makeDecorator, useChannel } from \"@storybook/addons\";\nimport { EVENTS } from \"./constants\";\nexport var withHTML = makeDecorator({\n  name: \"withHTML\",\n  parameterName: \"html\",\n  skipIfNoParametersOrOptions: false,\n  wrapper: function wrapper(storyFn, context, _ref) {\n    var _ref$parameters = _ref.parameters,\n      parameters = _ref$parameters === void 0 ? {} : _ref$parameters;\n    var emit = useChannel({});\n    setTimeout(function () {\n      var rootSelector = parameters.root || \"#root\";\n      var root = document.querySelector(rootSelector);\n      var code = root ? root.innerHTML : \"\".concat(rootSelector, \" not found.\");\n      var removeEmptyComments = parameters.removeEmptyComments,\n        removeComments = parameters.removeComments,\n        transform = parameters.transform;\n      if (removeEmptyComments) {\n        code = code.replace(/<!--\\s*-->/g, \"\");\n      }\n      if (removeComments === true) {\n        code = code.replace(/<!--[\\S\\s]*?-->/g, \"\");\n      } else if (removeComments instanceof RegExp) {\n        code = code.replace(/<!--([\\S\\s]*?)-->/g, function (match, p1) {\n          return removeComments.test(p1) ? \"\" : match;\n        });\n      }\n      if (typeof transform === \"function\") {\n        try {\n          code = transform(code);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n      emit(EVENTS.CODE_UPDATE, {\n        code: code,\n        options: parameters\n      });\n    }, 0);\n    return storyFn(context);\n  }\n});\nif (module && module.hot && module.hot.decline) {\n  module.hot.decline();\n}","/**\n * A decorator is a way to wrap a story in extra “rendering” functionality. Many addons define decorators\n * in order to augment stories:\n * - with extra rendering\n * - gather details about how a story is rendered\n *\n * When writing stories, decorators are typically used to wrap stories with extra markup or context mocking.\n *\n * https://storybook.js.org/docs/react/writing-stories/decorators#gatsby-focus-wrapper\n */\nimport { withHTML } from \"../withHTML\";\nexport var decorators = [withHTML];"],"names":["ADDON_ID","EVENTS","makeDecorator","useChannel","withHTML","storyFn","context","_ref","_ref$parameters","parameters","emit","rootSelector","root","code","removeEmptyComments","removeComments","transform","match","p1","e","decorators"],"mappings":"AAAO,IAAIA,EAAW,iBAGXC,EAAS,CAClB,YAAa,GAAG,OAAOD,EAAU,aAAa,CAChD,ECLA,KAAA,CAAA,cAAAE,EAAA,WAAAC,CAAA,EAAA,4BAEO,IAAIC,EAAWF,EAAc,CAClC,KAAM,WACN,cAAe,OACf,4BAA6B,GAC7B,QAAS,SAAiBG,EAASC,EAASC,EAAM,CAChD,IAAIC,EAAkBD,EAAK,WACzBE,EAAaD,IAAoB,OAAS,CAAA,EAAKA,EAC7CE,EAAOP,EAAW,CAAA,CAAE,EACxB,kBAAW,UAAY,CACrB,IAAIQ,EAAeF,EAAW,MAAQ,QAClCG,EAAO,SAAS,cAAcD,CAAY,EAC1CE,EAAOD,EAAOA,EAAK,UAAY,GAAG,OAAOD,EAAc,aAAa,EACpEG,EAAsBL,EAAW,oBACnCM,EAAiBN,EAAW,eAC5BO,EAAYP,EAAW,UAWzB,GAVIK,IACFD,EAAOA,EAAK,QAAQ,cAAe,EAAE,GAEnCE,IAAmB,GACrBF,EAAOA,EAAK,QAAQ,mBAAoB,EAAE,EACjCE,aAA0B,SACnCF,EAAOA,EAAK,QAAQ,qBAAsB,SAAUI,EAAOC,EAAI,CAC7D,OAAOH,EAAe,KAAKG,CAAE,EAAI,GAAKD,CAChD,CAAS,GAEC,OAAOD,GAAc,WACvB,GAAI,CACFH,EAAOG,EAAUH,CAAI,CACtB,OAAQM,EAAP,CACA,QAAQ,MAAMA,CAAC,CAChB,CAEHT,EAAKT,EAAO,YAAa,CACvB,KAAMY,EACN,QAASJ,CACjB,CAAO,CACF,EAAE,CAAC,EACGJ,EAAQC,CAAO,CACvB,CACH,CAAC,EACG,QAAU,OAAO,KAAO,OAAO,IAAI,SACrC,OAAO,IAAI,UChCH,IAACc,EAAa,CAAChB,CAAQ"}