diff --git a/node_modules/@custom-elements-manifest/analyzer/cli.js b/node_modules/@custom-elements-manifest/analyzer/cli.js
index 49da928..bd1c1c3 100755
--- a/node_modules/@custom-elements-manifest/analyzer/cli.js
+++ b/node_modules/@custom-elements-manifest/analyzer/cli.js
@@ -70,10 +70,6 @@ export async function cli({ argv = process.argv, cwd = process.cwd(), noWrite }
        */
        const customElementsManifest = create({modules, plugins, context});
 
-       if (mergedOptions.dev) {
-        console.log(JSON.stringify(customElementsManifest, null, 2));
-      }
-
       if(!noWrite) {
         const outdir = path.join(cwd, mergedOptions.outdir);
         if (!fs.existsSync(outdir)) {
diff --git a/node_modules/@custom-elements-manifest/analyzer/src/create.js b/node_modules/@custom-elements-manifest/analyzer/src/create.js
index 15ef0e2..9356bfb 100644
--- a/node_modules/@custom-elements-manifest/analyzer/src/create.js
+++ b/node_modules/@custom-elements-manifest/analyzer/src/create.js
@@ -15,8 +15,6 @@ export function create({modules, plugins = [], context = {dev:false}}) {
     modules: [],
   };
 
-  const { dev } = context;
-
   const mergedPlugins = [
     ...FEATURES,
     ...plugins,
@@ -24,7 +22,6 @@ export function create({modules, plugins = [], context = {dev:false}}) {
 
 
   modules.forEach(currModule => {
-    if(dev) console.log('[COLLECT PHASE]: ', currModule.fileName);
     /**
      * COLLECT PHASE
      * First pass through all modules. Can be used to gather imports, exports, types, default values,
@@ -34,7 +31,6 @@ export function create({modules, plugins = [], context = {dev:false}}) {
   });
 
   modules.forEach(currModule => {
-    if(dev) console.log('[ANALYZE PHASE]: ', currModule.fileName);
     const moduleDoc = {
       kind: "javascript-module",
       path: currModule.fileName,
@@ -51,7 +47,6 @@ export function create({modules, plugins = [], context = {dev:false}}) {
     analyze(currModule, moduleDoc, context, mergedPlugins);
     customElementsManifest.modules.push(moduleDoc);
 
-    if(dev) console.log('[MODULE LINK PHASE]: ', currModule.fileName);
     /**
      * LINK PHASE
      * All information for a module has been gathered, now we can link information together. Like:
@@ -65,7 +60,6 @@ export function create({modules, plugins = [], context = {dev:false}}) {
     });
   });
 
-  if(dev) console.log('[PACKAGE LINK PHASE]');
   /**
    * PACKAGE LINK PHASE
    * All modules have now been parsed, we can now link information from across modules together
